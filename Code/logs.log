2024-04-12 21:47:50,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 21:47:50,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 21:47:50,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 21:47:50,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 21:47:53,665:INFO:PyCaret ClassificationExperiment
2024-04-12 21:47:53,665:INFO:Logging name: clf-default-name
2024-04-12 21:47:53,665:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-12 21:47:53,665:INFO:version 3.3.0
2024-04-12 21:47:53,665:INFO:Initializing setup()
2024-04-12 21:47:53,666:INFO:self.USI: 036d
2024-04-12 21:47:53,666:INFO:self._variable_keys: {'memory', '_available_plots', 'X_train', 'seed', 'exp_id', 'idx', 'y_test', 'y_train', 'logging_param', 'USI', 'fold_generator', 'gpu_n_jobs_param', 'fix_imbalance', 'exp_name_log', 'n_jobs_param', 'log_plots_param', 'gpu_param', 'y', 'X', 'html_param', 'pipeline', '_ml_usecase', 'fold_groups_param', 'target_param', 'fold_shuffle_param', 'X_test', 'is_multiclass', 'data'}
2024-04-12 21:47:53,666:INFO:Checking environment
2024-04-12 21:47:53,666:INFO:python_version: 3.10.14
2024-04-12 21:47:53,666:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-12 21:47:53,666:INFO:machine: AMD64
2024-04-12 21:47:53,666:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-12 21:47:53,672:INFO:Memory: svmem(total=17131573248, available=4332695552, percent=74.7, used=12798877696, free=4332695552)
2024-04-12 21:47:53,672:INFO:Physical Core: 8
2024-04-12 21:47:53,672:INFO:Logical Core: 16
2024-04-12 21:47:53,672:INFO:Checking libraries
2024-04-12 21:47:53,672:INFO:System:
2024-04-12 21:47:53,672:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-12 21:47:53,672:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-12 21:47:53,672:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-12 21:47:53,672:INFO:PyCaret required dependencies:
2024-04-12 21:47:53,712:INFO:                 pip: 23.3.1
2024-04-12 21:47:53,712:INFO:          setuptools: 68.2.2
2024-04-12 21:47:53,712:INFO:             pycaret: 3.3.0
2024-04-12 21:47:53,712:INFO:             IPython: 8.23.0
2024-04-12 21:47:53,712:INFO:          ipywidgets: 8.1.2
2024-04-12 21:47:53,712:INFO:                tqdm: 4.66.2
2024-04-12 21:47:53,712:INFO:               numpy: 1.26.4
2024-04-12 21:47:53,712:INFO:              pandas: 2.1.4
2024-04-12 21:47:53,712:INFO:              jinja2: 3.1.3
2024-04-12 21:47:53,712:INFO:               scipy: 1.11.4
2024-04-12 21:47:53,712:INFO:              joblib: 1.3.2
2024-04-12 21:47:53,713:INFO:             sklearn: 1.4.1.post1
2024-04-12 21:47:53,713:INFO:                pyod: 1.1.3
2024-04-12 21:47:53,713:INFO:            imblearn: 0.12.2
2024-04-12 21:47:53,713:INFO:   category_encoders: 2.6.3
2024-04-12 21:47:53,713:INFO:            lightgbm: 4.3.0
2024-04-12 21:47:53,713:INFO:               numba: 0.59.1
2024-04-12 21:47:53,713:INFO:            requests: 2.31.0
2024-04-12 21:47:53,713:INFO:          matplotlib: 3.7.5
2024-04-12 21:47:53,713:INFO:          scikitplot: 0.3.7
2024-04-12 21:47:53,713:INFO:         yellowbrick: 1.5
2024-04-12 21:47:53,713:INFO:              plotly: 5.20.0
2024-04-12 21:47:53,713:INFO:    plotly-resampler: Not installed
2024-04-12 21:47:53,713:INFO:             kaleido: 0.2.1
2024-04-12 21:47:53,713:INFO:           schemdraw: 0.15
2024-04-12 21:47:53,713:INFO:         statsmodels: 0.14.1
2024-04-12 21:47:53,714:INFO:              sktime: 0.28.0
2024-04-12 21:47:53,714:INFO:               tbats: 1.1.3
2024-04-12 21:47:53,714:INFO:            pmdarima: 2.0.4
2024-04-12 21:47:53,714:INFO:              psutil: 5.9.8
2024-04-12 21:47:53,714:INFO:          markupsafe: 2.1.5
2024-04-12 21:47:53,714:INFO:             pickle5: Not installed
2024-04-12 21:47:53,714:INFO:         cloudpickle: 3.0.0
2024-04-12 21:47:53,714:INFO:         deprecation: 2.1.0
2024-04-12 21:47:53,714:INFO:              xxhash: 3.4.1
2024-04-12 21:47:53,714:INFO:           wurlitzer: 3.0.3
2024-04-12 21:47:53,714:INFO:PyCaret optional dependencies:
2024-04-12 21:47:53,742:INFO:                shap: Not installed
2024-04-12 21:47:53,742:INFO:           interpret: Not installed
2024-04-12 21:47:53,742:INFO:                umap: Not installed
2024-04-12 21:47:53,742:INFO:     ydata_profiling: Not installed
2024-04-12 21:47:53,742:INFO:  explainerdashboard: Not installed
2024-04-12 21:47:53,742:INFO:             autoviz: Not installed
2024-04-12 21:47:53,742:INFO:           fairlearn: Not installed
2024-04-12 21:47:53,742:INFO:          deepchecks: Not installed
2024-04-12 21:47:53,742:INFO:             xgboost: Not installed
2024-04-12 21:47:53,742:INFO:            catboost: Not installed
2024-04-12 21:47:53,742:INFO:              kmodes: Not installed
2024-04-12 21:47:53,743:INFO:             mlxtend: Not installed
2024-04-12 21:47:53,743:INFO:       statsforecast: Not installed
2024-04-12 21:47:53,743:INFO:        tune_sklearn: Not installed
2024-04-12 21:47:53,743:INFO:                 ray: Not installed
2024-04-12 21:47:53,743:INFO:            hyperopt: Not installed
2024-04-12 21:47:53,743:INFO:              optuna: Not installed
2024-04-12 21:47:53,743:INFO:               skopt: Not installed
2024-04-12 21:47:53,743:INFO:              mlflow: 2.11.3
2024-04-12 21:47:53,743:INFO:              gradio: Not installed
2024-04-12 21:47:53,743:INFO:             fastapi: Not installed
2024-04-12 21:47:53,743:INFO:             uvicorn: Not installed
2024-04-12 21:47:53,743:INFO:              m2cgen: Not installed
2024-04-12 21:47:53,743:INFO:           evidently: Not installed
2024-04-12 21:47:53,743:INFO:               fugue: Not installed
2024-04-12 21:47:53,743:INFO:           streamlit: 1.33.0
2024-04-12 21:47:53,744:INFO:             prophet: Not installed
2024-04-12 21:47:53,744:INFO:None
2024-04-12 21:47:53,744:INFO:Set up data.
2024-04-12 21:47:53,751:INFO:Set up folding strategy.
2024-04-12 21:47:53,751:INFO:Set up train/test split.
2024-04-12 21:47:53,751:INFO:Set up data.
2024-04-12 21:47:53,757:INFO:Set up index.
2024-04-12 21:47:53,758:INFO:Assigning column types.
2024-04-12 21:47:53,764:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-12 21:47:53,834:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-12 21:47:53,839:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-12 21:47:53,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:53,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:53,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-12 21:47:53,966:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-12 21:47:54,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,010:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-12 21:47:54,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-12 21:47:54,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-12 21:47:54,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,243:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-12 21:47:54,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,478:INFO:Preparing preprocessing pipeline...
2024-04-12 21:47:54,480:INFO:Set up simple imputation.
2024-04-12 21:47:54,480:INFO:Set up feature normalization.
2024-04-12 21:47:54,536:INFO:Finished creating preprocessing pipeline.
2024-04-12 21:47:54,545:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-12 21:47:54,545:INFO:Creating final display dataframe.
2024-04-12 21:47:54,691:INFO:Setup _display_container:                     Description             Value
0                    Session id              8895
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              036d
2024-04-12 21:47:54,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-12 21:47:54,935:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-12 21:47:54,936:INFO:setup() successfully completed in 1.27s...............
2024-04-12 21:47:54,936:INFO:Initializing compare_models()
2024-04-12 21:47:54,936:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-12 21:47:54,936:INFO:Checking exceptions
2024-04-12 21:47:54,942:INFO:Preparing display monitor
2024-04-12 21:47:54,974:INFO:Initializing Logistic Regression
2024-04-12 21:47:54,975:INFO:Total runtime is 1.6681353251139323e-05 minutes
2024-04-12 21:47:54,979:INFO:SubProcess create_model() called ==================================
2024-04-12 21:47:54,980:INFO:Initializing create_model()
2024-04-12 21:47:54,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025D63250E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-12 21:47:54,980:INFO:Checking exceptions
2024-04-12 21:47:54,980:INFO:Importing libraries
2024-04-12 21:47:54,981:INFO:Copying training dataset
2024-04-12 21:47:54,993:INFO:Defining folds
2024-04-12 21:47:54,993:INFO:Declaring metric variables
2024-04-12 21:47:54,998:INFO:Importing untrained model
2024-04-12 21:47:55,003:INFO:Logistic Regression Imported successfully
2024-04-12 21:47:55,012:INFO:Starting cross validation
2024-04-12 21:47:55,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-12 21:48:00,358:INFO:Calculating mean and std
2024-04-12 21:48:00,361:INFO:Creating metrics dataframe
2024-04-12 21:48:00,365:INFO:Uploading results into container
2024-04-12 21:48:00,366:INFO:Uploading model into container now
2024-04-12 21:48:00,366:INFO:_master_model_container: 1
2024-04-12 21:48:00,366:INFO:_display_container: 2
2024-04-12 21:48:00,367:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8895, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-12 21:48:00,368:INFO:create_model() successfully completed......................................
2024-04-12 21:48:00,487:INFO:SubProcess create_model() end ==================================
2024-04-12 21:48:00,487:INFO:Creating metrics dataframe
2024-04-12 21:48:00,496:INFO:Initializing Decision Tree Classifier
2024-04-12 21:48:00,496:INFO:Total runtime is 0.09203511476516724 minutes
2024-04-12 21:48:00,501:INFO:SubProcess create_model() called ==================================
2024-04-12 21:48:00,501:INFO:Initializing create_model()
2024-04-12 21:48:00,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025D63250E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-12 21:48:00,501:INFO:Checking exceptions
2024-04-12 21:48:00,502:INFO:Importing libraries
2024-04-12 21:48:00,502:INFO:Copying training dataset
2024-04-12 21:48:00,511:INFO:Defining folds
2024-04-12 21:48:00,511:INFO:Declaring metric variables
2024-04-12 21:48:00,516:INFO:Importing untrained model
2024-04-12 21:48:00,521:INFO:Decision Tree Classifier Imported successfully
2024-04-12 21:48:00,529:INFO:Starting cross validation
2024-04-12 21:48:00,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-12 21:48:04,017:INFO:Calculating mean and std
2024-04-12 21:48:04,022:INFO:Creating metrics dataframe
2024-04-12 21:48:04,027:INFO:Uploading results into container
2024-04-12 21:48:04,028:INFO:Uploading model into container now
2024-04-12 21:48:04,029:INFO:_master_model_container: 2
2024-04-12 21:48:04,029:INFO:_display_container: 2
2024-04-12 21:48:04,030:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8895, splitter='best')
2024-04-12 21:48:04,031:INFO:create_model() successfully completed......................................
2024-04-12 21:48:04,176:INFO:SubProcess create_model() end ==================================
2024-04-12 21:48:04,177:INFO:Creating metrics dataframe
2024-04-12 21:48:04,189:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-12 21:48:04,199:INFO:Initializing create_model()
2024-04-12 21:48:04,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8895, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-12 21:48:04,199:INFO:Checking exceptions
2024-04-12 21:48:04,202:INFO:Importing libraries
2024-04-12 21:48:04,202:INFO:Copying training dataset
2024-04-12 21:48:04,210:INFO:Defining folds
2024-04-12 21:48:04,210:INFO:Declaring metric variables
2024-04-12 21:48:04,210:INFO:Importing untrained model
2024-04-12 21:48:04,210:INFO:Declaring custom model
2024-04-12 21:48:04,211:INFO:Decision Tree Classifier Imported successfully
2024-04-12 21:48:04,212:INFO:Cross validation set to False
2024-04-12 21:48:04,212:INFO:Fitting Model
2024-04-12 21:48:04,287:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8895, splitter='best')
2024-04-12 21:48:04,287:INFO:create_model() successfully completed......................................
2024-04-12 21:48:04,403:INFO:Initializing create_model()
2024-04-12 21:48:04,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8895, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-12 21:48:04,403:INFO:Checking exceptions
2024-04-12 21:48:04,406:INFO:Importing libraries
2024-04-12 21:48:04,406:INFO:Copying training dataset
2024-04-12 21:48:04,415:INFO:Defining folds
2024-04-12 21:48:04,415:INFO:Declaring metric variables
2024-04-12 21:48:04,415:INFO:Importing untrained model
2024-04-12 21:48:04,415:INFO:Declaring custom model
2024-04-12 21:48:04,416:INFO:Logistic Regression Imported successfully
2024-04-12 21:48:04,417:INFO:Cross validation set to False
2024-04-12 21:48:04,417:INFO:Fitting Model
2024-04-12 21:48:04,443:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8895, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-12 21:48:04,443:INFO:create_model() successfully completed......................................
2024-04-12 21:48:04,584:INFO:_master_model_container: 2
2024-04-12 21:48:04,584:INFO:_display_container: 2
2024-04-12 21:48:04,585:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8895, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8895, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-12 21:48:04,586:INFO:compare_models() successfully completed......................................
2024-04-12 21:48:04,587:INFO:Initializing predict_model()
2024-04-12 21:48:04,587:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D5BC78C40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8895, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025D1AF948B0>)
2024-04-12 21:48:04,588:INFO:Checking exceptions
2024-04-12 21:48:04,589:INFO:Preloading libraries
2024-04-13 10:41:37,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 10:41:37,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 10:41:37,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 10:41:37,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 10:41:40,340:INFO:PyCaret ClassificationExperiment
2024-04-13 10:41:40,340:INFO:Logging name: clf-default-name
2024-04-13 10:41:40,340:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 10:41:40,340:INFO:version 3.3.0
2024-04-13 10:41:40,340:INFO:Initializing setup()
2024-04-13 10:41:40,340:INFO:self.USI: 0797
2024-04-13 10:41:40,340:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 10:41:40,341:INFO:Checking environment
2024-04-13 10:41:40,341:INFO:python_version: 3.10.14
2024-04-13 10:41:40,341:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 10:41:40,341:INFO:machine: AMD64
2024-04-13 10:41:40,341:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 10:41:40,345:INFO:Memory: svmem(total=17131573248, available=8671817728, percent=49.4, used=8459755520, free=8671817728)
2024-04-13 10:41:40,345:INFO:Physical Core: 8
2024-04-13 10:41:40,345:INFO:Logical Core: 16
2024-04-13 10:41:40,346:INFO:Checking libraries
2024-04-13 10:41:40,346:INFO:System:
2024-04-13 10:41:40,346:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 10:41:40,346:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 10:41:40,346:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 10:41:40,346:INFO:PyCaret required dependencies:
2024-04-13 10:41:40,393:INFO:                 pip: 23.3.1
2024-04-13 10:41:40,393:INFO:          setuptools: 68.2.2
2024-04-13 10:41:40,393:INFO:             pycaret: 3.3.0
2024-04-13 10:41:40,393:INFO:             IPython: 8.23.0
2024-04-13 10:41:40,393:INFO:          ipywidgets: 8.1.2
2024-04-13 10:41:40,393:INFO:                tqdm: 4.66.2
2024-04-13 10:41:40,393:INFO:               numpy: 1.26.4
2024-04-13 10:41:40,393:INFO:              pandas: 2.1.4
2024-04-13 10:41:40,393:INFO:              jinja2: 3.1.3
2024-04-13 10:41:40,393:INFO:               scipy: 1.11.4
2024-04-13 10:41:40,394:INFO:              joblib: 1.3.2
2024-04-13 10:41:40,394:INFO:             sklearn: 1.4.1.post1
2024-04-13 10:41:40,394:INFO:                pyod: 1.1.3
2024-04-13 10:41:40,394:INFO:            imblearn: 0.12.2
2024-04-13 10:41:40,394:INFO:   category_encoders: 2.6.3
2024-04-13 10:41:40,394:INFO:            lightgbm: 4.3.0
2024-04-13 10:41:40,394:INFO:               numba: 0.59.1
2024-04-13 10:41:40,394:INFO:            requests: 2.31.0
2024-04-13 10:41:40,394:INFO:          matplotlib: 3.7.5
2024-04-13 10:41:40,394:INFO:          scikitplot: 0.3.7
2024-04-13 10:41:40,394:INFO:         yellowbrick: 1.5
2024-04-13 10:41:40,394:INFO:              plotly: 5.20.0
2024-04-13 10:41:40,394:INFO:    plotly-resampler: Not installed
2024-04-13 10:41:40,394:INFO:             kaleido: 0.2.1
2024-04-13 10:41:40,394:INFO:           schemdraw: 0.15
2024-04-13 10:41:40,395:INFO:         statsmodels: 0.14.1
2024-04-13 10:41:40,395:INFO:              sktime: 0.28.0
2024-04-13 10:41:40,395:INFO:               tbats: 1.1.3
2024-04-13 10:41:40,395:INFO:            pmdarima: 2.0.4
2024-04-13 10:41:40,395:INFO:              psutil: 5.9.8
2024-04-13 10:41:40,395:INFO:          markupsafe: 2.1.5
2024-04-13 10:41:40,395:INFO:             pickle5: Not installed
2024-04-13 10:41:40,395:INFO:         cloudpickle: 3.0.0
2024-04-13 10:41:40,395:INFO:         deprecation: 2.1.0
2024-04-13 10:41:40,395:INFO:              xxhash: 3.4.1
2024-04-13 10:41:40,395:INFO:           wurlitzer: 3.0.3
2024-04-13 10:41:40,395:INFO:PyCaret optional dependencies:
2024-04-13 10:41:40,425:INFO:                shap: Not installed
2024-04-13 10:41:40,425:INFO:           interpret: Not installed
2024-04-13 10:41:40,425:INFO:                umap: Not installed
2024-04-13 10:41:40,425:INFO:     ydata_profiling: Not installed
2024-04-13 10:41:40,425:INFO:  explainerdashboard: Not installed
2024-04-13 10:41:40,425:INFO:             autoviz: Not installed
2024-04-13 10:41:40,425:INFO:           fairlearn: Not installed
2024-04-13 10:41:40,425:INFO:          deepchecks: Not installed
2024-04-13 10:41:40,426:INFO:             xgboost: Not installed
2024-04-13 10:41:40,426:INFO:            catboost: Not installed
2024-04-13 10:41:40,426:INFO:              kmodes: Not installed
2024-04-13 10:41:40,426:INFO:             mlxtend: Not installed
2024-04-13 10:41:40,426:INFO:       statsforecast: Not installed
2024-04-13 10:41:40,426:INFO:        tune_sklearn: Not installed
2024-04-13 10:41:40,426:INFO:                 ray: Not installed
2024-04-13 10:41:40,426:INFO:            hyperopt: Not installed
2024-04-13 10:41:40,426:INFO:              optuna: Not installed
2024-04-13 10:41:40,426:INFO:               skopt: Not installed
2024-04-13 10:41:40,426:INFO:              mlflow: 2.11.3
2024-04-13 10:41:40,426:INFO:              gradio: Not installed
2024-04-13 10:41:40,426:INFO:             fastapi: Not installed
2024-04-13 10:41:40,427:INFO:             uvicorn: Not installed
2024-04-13 10:41:40,427:INFO:              m2cgen: Not installed
2024-04-13 10:41:40,427:INFO:           evidently: Not installed
2024-04-13 10:41:40,427:INFO:               fugue: Not installed
2024-04-13 10:41:40,427:INFO:           streamlit: 1.33.0
2024-04-13 10:41:40,427:INFO:             prophet: Not installed
2024-04-13 10:41:40,427:INFO:None
2024-04-13 10:41:40,427:INFO:Set up data.
2024-04-13 10:41:40,435:INFO:Set up folding strategy.
2024-04-13 10:41:40,435:INFO:Set up train/test split.
2024-04-13 10:41:40,435:INFO:Set up data.
2024-04-13 10:41:40,441:INFO:Set up index.
2024-04-13 10:41:40,441:INFO:Assigning column types.
2024-04-13 10:41:40,447:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 10:41:40,519:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:41:40,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:41:40,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:41:40,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:41:40,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,697:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 10:41:40,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:41:40,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,887:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:41:40,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:40,931:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 10:41:41,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,168:INFO:Preparing preprocessing pipeline...
2024-04-13 10:41:41,171:INFO:Set up simple imputation.
2024-04-13 10:41:41,171:INFO:Set up feature normalization.
2024-04-13 10:41:41,226:INFO:Finished creating preprocessing pipeline.
2024-04-13 10:41:41,235:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 10:41:41,235:INFO:Creating final display dataframe.
2024-04-13 10:41:41,375:INFO:Setup _display_container:                     Description             Value
0                    Session id              4123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0797
2024-04-13 10:41:41,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:41:41,621:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 10:41:41,622:INFO:setup() successfully completed in 1.29s...............
2024-04-13 10:41:41,622:INFO:Initializing compare_models()
2024-04-13 10:41:41,622:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 10:41:41,622:INFO:Checking exceptions
2024-04-13 10:41:41,628:INFO:Preparing display monitor
2024-04-13 10:41:41,658:INFO:Initializing Logistic Regression
2024-04-13 10:41:41,659:INFO:Total runtime is 1.6681353251139323e-05 minutes
2024-04-13 10:41:41,663:INFO:SubProcess create_model() called ==================================
2024-04-13 10:41:41,664:INFO:Initializing create_model()
2024-04-13 10:41:41,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E3156F9C00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:41:41,664:INFO:Checking exceptions
2024-04-13 10:41:41,664:INFO:Importing libraries
2024-04-13 10:41:41,664:INFO:Copying training dataset
2024-04-13 10:41:41,674:INFO:Defining folds
2024-04-13 10:41:41,674:INFO:Declaring metric variables
2024-04-13 10:41:41,679:INFO:Importing untrained model
2024-04-13 10:41:41,684:INFO:Logistic Regression Imported successfully
2024-04-13 10:41:41,693:INFO:Starting cross validation
2024-04-13 10:41:41,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:41:46,785:INFO:Calculating mean and std
2024-04-13 10:41:46,788:INFO:Creating metrics dataframe
2024-04-13 10:41:46,793:INFO:Uploading results into container
2024-04-13 10:41:46,794:INFO:Uploading model into container now
2024-04-13 10:41:46,794:INFO:_master_model_container: 1
2024-04-13 10:41:46,794:INFO:_display_container: 2
2024-04-13 10:41:46,795:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:41:46,795:INFO:create_model() successfully completed......................................
2024-04-13 10:41:46,915:INFO:SubProcess create_model() end ==================================
2024-04-13 10:41:46,916:INFO:Creating metrics dataframe
2024-04-13 10:41:46,924:INFO:Initializing Decision Tree Classifier
2024-04-13 10:41:46,924:INFO:Total runtime is 0.08776305119196574 minutes
2024-04-13 10:41:46,929:INFO:SubProcess create_model() called ==================================
2024-04-13 10:41:46,929:INFO:Initializing create_model()
2024-04-13 10:41:46,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E3156F9C00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:41:46,930:INFO:Checking exceptions
2024-04-13 10:41:46,930:INFO:Importing libraries
2024-04-13 10:41:46,930:INFO:Copying training dataset
2024-04-13 10:41:46,939:INFO:Defining folds
2024-04-13 10:41:46,939:INFO:Declaring metric variables
2024-04-13 10:41:46,944:INFO:Importing untrained model
2024-04-13 10:41:46,948:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:41:46,957:INFO:Starting cross validation
2024-04-13 10:41:46,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:41:50,348:INFO:Calculating mean and std
2024-04-13 10:41:50,350:INFO:Creating metrics dataframe
2024-04-13 10:41:50,354:INFO:Uploading results into container
2024-04-13 10:41:50,355:INFO:Uploading model into container now
2024-04-13 10:41:50,357:INFO:_master_model_container: 2
2024-04-13 10:41:50,357:INFO:_display_container: 2
2024-04-13 10:41:50,357:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4123, splitter='best')
2024-04-13 10:41:50,358:INFO:create_model() successfully completed......................................
2024-04-13 10:41:50,486:INFO:SubProcess create_model() end ==================================
2024-04-13 10:41:50,486:INFO:Creating metrics dataframe
2024-04-13 10:41:50,500:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 10:41:50,512:INFO:Initializing create_model()
2024-04-13 10:41:50,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:41:50,513:INFO:Checking exceptions
2024-04-13 10:41:50,516:INFO:Importing libraries
2024-04-13 10:41:50,516:INFO:Copying training dataset
2024-04-13 10:41:50,525:INFO:Defining folds
2024-04-13 10:41:50,525:INFO:Declaring metric variables
2024-04-13 10:41:50,526:INFO:Importing untrained model
2024-04-13 10:41:50,526:INFO:Declaring custom model
2024-04-13 10:41:50,527:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:41:50,528:INFO:Cross validation set to False
2024-04-13 10:41:50,528:INFO:Fitting Model
2024-04-13 10:41:50,605:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4123, splitter='best')
2024-04-13 10:41:50,605:INFO:create_model() successfully completed......................................
2024-04-13 10:41:50,716:INFO:Initializing create_model()
2024-04-13 10:41:50,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:41:50,716:INFO:Checking exceptions
2024-04-13 10:41:50,718:INFO:Importing libraries
2024-04-13 10:41:50,719:INFO:Copying training dataset
2024-04-13 10:41:50,727:INFO:Defining folds
2024-04-13 10:41:50,727:INFO:Declaring metric variables
2024-04-13 10:41:50,727:INFO:Importing untrained model
2024-04-13 10:41:50,728:INFO:Declaring custom model
2024-04-13 10:41:50,728:INFO:Logistic Regression Imported successfully
2024-04-13 10:41:50,729:INFO:Cross validation set to False
2024-04-13 10:41:50,729:INFO:Fitting Model
2024-04-13 10:41:50,755:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:41:50,756:INFO:create_model() successfully completed......................................
2024-04-13 10:41:50,880:INFO:_master_model_container: 2
2024-04-13 10:41:50,880:INFO:_display_container: 2
2024-04-13 10:41:50,881:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4123, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 10:41:50,881:INFO:compare_models() successfully completed......................................
2024-04-13 10:41:50,882:INFO:Initializing predict_model()
2024-04-13 10:41:50,882:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E3156FC550>)
2024-04-13 10:41:50,883:INFO:Checking exceptions
2024-04-13 10:41:50,883:INFO:Preloading libraries
2024-04-13 10:44:43,421:INFO:PyCaret ClassificationExperiment
2024-04-13 10:44:43,422:INFO:Logging name: clf-default-name
2024-04-13 10:44:43,422:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 10:44:43,422:INFO:version 3.3.0
2024-04-13 10:44:43,422:INFO:Initializing setup()
2024-04-13 10:44:43,422:INFO:self.USI: c452
2024-04-13 10:44:43,422:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 10:44:43,422:INFO:Checking environment
2024-04-13 10:44:43,422:INFO:python_version: 3.10.14
2024-04-13 10:44:43,422:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 10:44:43,422:INFO:machine: AMD64
2024-04-13 10:44:43,422:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 10:44:43,427:INFO:Memory: svmem(total=17131573248, available=7959216128, percent=53.5, used=9172357120, free=7959216128)
2024-04-13 10:44:43,427:INFO:Physical Core: 8
2024-04-13 10:44:43,427:INFO:Logical Core: 16
2024-04-13 10:44:43,427:INFO:Checking libraries
2024-04-13 10:44:43,427:INFO:System:
2024-04-13 10:44:43,427:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 10:44:43,427:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 10:44:43,427:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 10:44:43,427:INFO:PyCaret required dependencies:
2024-04-13 10:44:43,427:INFO:                 pip: 23.3.1
2024-04-13 10:44:43,428:INFO:          setuptools: 68.2.2
2024-04-13 10:44:43,428:INFO:             pycaret: 3.3.0
2024-04-13 10:44:43,428:INFO:             IPython: 8.23.0
2024-04-13 10:44:43,428:INFO:          ipywidgets: 8.1.2
2024-04-13 10:44:43,428:INFO:                tqdm: 4.66.2
2024-04-13 10:44:43,428:INFO:               numpy: 1.26.4
2024-04-13 10:44:43,428:INFO:              pandas: 2.1.4
2024-04-13 10:44:43,428:INFO:              jinja2: 3.1.3
2024-04-13 10:44:43,428:INFO:               scipy: 1.11.4
2024-04-13 10:44:43,428:INFO:              joblib: 1.3.2
2024-04-13 10:44:43,428:INFO:             sklearn: 1.4.1.post1
2024-04-13 10:44:43,428:INFO:                pyod: 1.1.3
2024-04-13 10:44:43,428:INFO:            imblearn: 0.12.2
2024-04-13 10:44:43,428:INFO:   category_encoders: 2.6.3
2024-04-13 10:44:43,428:INFO:            lightgbm: 4.3.0
2024-04-13 10:44:43,429:INFO:               numba: 0.59.1
2024-04-13 10:44:43,429:INFO:            requests: 2.31.0
2024-04-13 10:44:43,429:INFO:          matplotlib: 3.7.5
2024-04-13 10:44:43,429:INFO:          scikitplot: 0.3.7
2024-04-13 10:44:43,429:INFO:         yellowbrick: 1.5
2024-04-13 10:44:43,429:INFO:              plotly: 5.20.0
2024-04-13 10:44:43,429:INFO:    plotly-resampler: Not installed
2024-04-13 10:44:43,429:INFO:             kaleido: 0.2.1
2024-04-13 10:44:43,429:INFO:           schemdraw: 0.15
2024-04-13 10:44:43,429:INFO:         statsmodels: 0.14.1
2024-04-13 10:44:43,429:INFO:              sktime: 0.28.0
2024-04-13 10:44:43,429:INFO:               tbats: 1.1.3
2024-04-13 10:44:43,429:INFO:            pmdarima: 2.0.4
2024-04-13 10:44:43,430:INFO:              psutil: 5.9.8
2024-04-13 10:44:43,430:INFO:          markupsafe: 2.1.5
2024-04-13 10:44:43,430:INFO:             pickle5: Not installed
2024-04-13 10:44:43,430:INFO:         cloudpickle: 3.0.0
2024-04-13 10:44:43,430:INFO:         deprecation: 2.1.0
2024-04-13 10:44:43,430:INFO:              xxhash: 3.4.1
2024-04-13 10:44:43,430:INFO:           wurlitzer: 3.0.3
2024-04-13 10:44:43,430:INFO:PyCaret optional dependencies:
2024-04-13 10:44:43,430:INFO:                shap: Not installed
2024-04-13 10:44:43,430:INFO:           interpret: Not installed
2024-04-13 10:44:43,430:INFO:                umap: Not installed
2024-04-13 10:44:43,430:INFO:     ydata_profiling: Not installed
2024-04-13 10:44:43,430:INFO:  explainerdashboard: Not installed
2024-04-13 10:44:43,430:INFO:             autoviz: Not installed
2024-04-13 10:44:43,431:INFO:           fairlearn: Not installed
2024-04-13 10:44:43,431:INFO:          deepchecks: Not installed
2024-04-13 10:44:43,431:INFO:             xgboost: Not installed
2024-04-13 10:44:43,431:INFO:            catboost: Not installed
2024-04-13 10:44:43,431:INFO:              kmodes: Not installed
2024-04-13 10:44:43,431:INFO:             mlxtend: Not installed
2024-04-13 10:44:43,431:INFO:       statsforecast: Not installed
2024-04-13 10:44:43,431:INFO:        tune_sklearn: Not installed
2024-04-13 10:44:43,431:INFO:                 ray: Not installed
2024-04-13 10:44:43,431:INFO:            hyperopt: Not installed
2024-04-13 10:44:43,431:INFO:              optuna: Not installed
2024-04-13 10:44:43,431:INFO:               skopt: Not installed
2024-04-13 10:44:43,431:INFO:              mlflow: 2.11.3
2024-04-13 10:44:43,431:INFO:              gradio: Not installed
2024-04-13 10:44:43,431:INFO:             fastapi: Not installed
2024-04-13 10:44:43,432:INFO:             uvicorn: Not installed
2024-04-13 10:44:43,432:INFO:              m2cgen: Not installed
2024-04-13 10:44:43,432:INFO:           evidently: Not installed
2024-04-13 10:44:43,432:INFO:               fugue: Not installed
2024-04-13 10:44:43,432:INFO:           streamlit: 1.33.0
2024-04-13 10:44:43,432:INFO:             prophet: Not installed
2024-04-13 10:44:43,432:INFO:None
2024-04-13 10:44:43,432:INFO:Set up data.
2024-04-13 10:44:43,438:INFO:Set up folding strategy.
2024-04-13 10:44:43,438:INFO:Set up train/test split.
2024-04-13 10:44:43,439:INFO:Set up data.
2024-04-13 10:44:43,444:INFO:Set up index.
2024-04-13 10:44:43,445:INFO:Assigning column types.
2024-04-13 10:44:43,450:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 10:44:43,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:44:43,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:44:43,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:44:43,640:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:44:43,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,686:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 10:44:43,758:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:44:43,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,875:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:44:43,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:43,920:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 10:44:44,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,156:INFO:Preparing preprocessing pipeline...
2024-04-13 10:44:44,158:INFO:Set up simple imputation.
2024-04-13 10:44:44,158:INFO:Set up feature normalization.
2024-04-13 10:44:44,197:INFO:Finished creating preprocessing pipeline.
2024-04-13 10:44:44,204:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 10:44:44,205:INFO:Creating final display dataframe.
2024-04-13 10:44:44,340:INFO:Setup _display_container:                     Description             Value
0                    Session id              8010
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              c452
2024-04-13 10:44:44,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:44:44,584:INFO:setup() successfully completed in 1.16s...............
2024-04-13 10:44:44,586:INFO:Initializing compare_models()
2024-04-13 10:44:44,586:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 10:44:44,586:INFO:Checking exceptions
2024-04-13 10:44:44,592:INFO:Preparing display monitor
2024-04-13 10:44:44,621:INFO:Initializing Logistic Regression
2024-04-13 10:44:44,621:INFO:Total runtime is 0.0 minutes
2024-04-13 10:44:44,625:INFO:SubProcess create_model() called ==================================
2024-04-13 10:44:44,626:INFO:Initializing create_model()
2024-04-13 10:44:44,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E314AAF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:44:44,626:INFO:Checking exceptions
2024-04-13 10:44:44,626:INFO:Importing libraries
2024-04-13 10:44:44,627:INFO:Copying training dataset
2024-04-13 10:44:44,637:INFO:Defining folds
2024-04-13 10:44:44,637:INFO:Declaring metric variables
2024-04-13 10:44:44,641:INFO:Importing untrained model
2024-04-13 10:44:44,646:INFO:Logistic Regression Imported successfully
2024-04-13 10:44:44,654:INFO:Starting cross validation
2024-04-13 10:44:44,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:44:49,554:INFO:Calculating mean and std
2024-04-13 10:44:49,556:INFO:Creating metrics dataframe
2024-04-13 10:44:49,559:INFO:Uploading results into container
2024-04-13 10:44:49,561:INFO:Uploading model into container now
2024-04-13 10:44:49,562:INFO:_master_model_container: 1
2024-04-13 10:44:49,562:INFO:_display_container: 2
2024-04-13 10:44:49,562:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8010, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:44:49,563:INFO:create_model() successfully completed......................................
2024-04-13 10:44:49,711:INFO:SubProcess create_model() end ==================================
2024-04-13 10:44:49,712:INFO:Creating metrics dataframe
2024-04-13 10:44:49,720:INFO:Initializing Decision Tree Classifier
2024-04-13 10:44:49,721:INFO:Total runtime is 0.0849938710530599 minutes
2024-04-13 10:44:49,725:INFO:SubProcess create_model() called ==================================
2024-04-13 10:44:49,726:INFO:Initializing create_model()
2024-04-13 10:44:49,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E314AAF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:44:49,726:INFO:Checking exceptions
2024-04-13 10:44:49,726:INFO:Importing libraries
2024-04-13 10:44:49,726:INFO:Copying training dataset
2024-04-13 10:44:49,736:INFO:Defining folds
2024-04-13 10:44:49,736:INFO:Declaring metric variables
2024-04-13 10:44:49,741:INFO:Importing untrained model
2024-04-13 10:44:49,746:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:44:49,754:INFO:Starting cross validation
2024-04-13 10:44:49,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:44:53,112:INFO:Calculating mean and std
2024-04-13 10:44:53,114:INFO:Creating metrics dataframe
2024-04-13 10:44:53,117:INFO:Uploading results into container
2024-04-13 10:44:53,118:INFO:Uploading model into container now
2024-04-13 10:44:53,119:INFO:_master_model_container: 2
2024-04-13 10:44:53,119:INFO:_display_container: 2
2024-04-13 10:44:53,120:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8010, splitter='best')
2024-04-13 10:44:53,120:INFO:create_model() successfully completed......................................
2024-04-13 10:44:53,257:INFO:SubProcess create_model() end ==================================
2024-04-13 10:44:53,257:INFO:Creating metrics dataframe
2024-04-13 10:44:53,278:INFO:Initializing create_model()
2024-04-13 10:44:53,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8010, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:44:53,279:INFO:Checking exceptions
2024-04-13 10:44:53,281:INFO:Importing libraries
2024-04-13 10:44:53,281:INFO:Copying training dataset
2024-04-13 10:44:53,290:INFO:Defining folds
2024-04-13 10:44:53,290:INFO:Declaring metric variables
2024-04-13 10:44:53,290:INFO:Importing untrained model
2024-04-13 10:44:53,290:INFO:Declaring custom model
2024-04-13 10:44:53,291:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:44:53,292:INFO:Cross validation set to False
2024-04-13 10:44:53,292:INFO:Fitting Model
2024-04-13 10:44:53,365:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8010, splitter='best')
2024-04-13 10:44:53,365:INFO:create_model() successfully completed......................................
2024-04-13 10:44:53,489:INFO:Initializing create_model()
2024-04-13 10:44:53,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8010, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:44:53,489:INFO:Checking exceptions
2024-04-13 10:44:53,491:INFO:Importing libraries
2024-04-13 10:44:53,492:INFO:Copying training dataset
2024-04-13 10:44:53,500:INFO:Defining folds
2024-04-13 10:44:53,500:INFO:Declaring metric variables
2024-04-13 10:44:53,500:INFO:Importing untrained model
2024-04-13 10:44:53,500:INFO:Declaring custom model
2024-04-13 10:44:53,501:INFO:Logistic Regression Imported successfully
2024-04-13 10:44:53,502:INFO:Cross validation set to False
2024-04-13 10:44:53,502:INFO:Fitting Model
2024-04-13 10:44:53,527:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8010, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:44:53,527:INFO:create_model() successfully completed......................................
2024-04-13 10:44:53,662:INFO:_master_model_container: 2
2024-04-13 10:44:53,663:INFO:_display_container: 2
2024-04-13 10:44:53,664:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8010, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8010, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 10:44:53,664:INFO:compare_models() successfully completed......................................
2024-04-13 10:44:53,665:INFO:Initializing predict_model()
2024-04-13 10:44:53,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31565A080>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8010, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31497A320>)
2024-04-13 10:44:53,665:INFO:Checking exceptions
2024-04-13 10:44:53,665:INFO:Preloading libraries
2024-04-13 10:48:32,695:INFO:PyCaret ClassificationExperiment
2024-04-13 10:48:32,695:INFO:Logging name: clf-default-name
2024-04-13 10:48:32,695:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 10:48:32,695:INFO:version 3.3.0
2024-04-13 10:48:32,695:INFO:Initializing setup()
2024-04-13 10:48:32,695:INFO:self.USI: 56d0
2024-04-13 10:48:32,696:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 10:48:32,696:INFO:Checking environment
2024-04-13 10:48:32,696:INFO:python_version: 3.10.14
2024-04-13 10:48:32,696:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 10:48:32,696:INFO:machine: AMD64
2024-04-13 10:48:32,696:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 10:48:32,700:INFO:Memory: svmem(total=17131573248, available=8026857472, percent=53.1, used=9104715776, free=8026857472)
2024-04-13 10:48:32,700:INFO:Physical Core: 8
2024-04-13 10:48:32,700:INFO:Logical Core: 16
2024-04-13 10:48:32,700:INFO:Checking libraries
2024-04-13 10:48:32,701:INFO:System:
2024-04-13 10:48:32,701:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 10:48:32,701:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 10:48:32,701:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 10:48:32,701:INFO:PyCaret required dependencies:
2024-04-13 10:48:32,701:INFO:                 pip: 23.3.1
2024-04-13 10:48:32,701:INFO:          setuptools: 68.2.2
2024-04-13 10:48:32,701:INFO:             pycaret: 3.3.0
2024-04-13 10:48:32,701:INFO:             IPython: 8.23.0
2024-04-13 10:48:32,701:INFO:          ipywidgets: 8.1.2
2024-04-13 10:48:32,701:INFO:                tqdm: 4.66.2
2024-04-13 10:48:32,701:INFO:               numpy: 1.26.4
2024-04-13 10:48:32,701:INFO:              pandas: 2.1.4
2024-04-13 10:48:32,702:INFO:              jinja2: 3.1.3
2024-04-13 10:48:32,702:INFO:               scipy: 1.11.4
2024-04-13 10:48:32,702:INFO:              joblib: 1.3.2
2024-04-13 10:48:32,702:INFO:             sklearn: 1.4.1.post1
2024-04-13 10:48:32,702:INFO:                pyod: 1.1.3
2024-04-13 10:48:32,702:INFO:            imblearn: 0.12.2
2024-04-13 10:48:32,702:INFO:   category_encoders: 2.6.3
2024-04-13 10:48:32,702:INFO:            lightgbm: 4.3.0
2024-04-13 10:48:32,702:INFO:               numba: 0.59.1
2024-04-13 10:48:32,702:INFO:            requests: 2.31.0
2024-04-13 10:48:32,702:INFO:          matplotlib: 3.7.5
2024-04-13 10:48:32,702:INFO:          scikitplot: 0.3.7
2024-04-13 10:48:32,702:INFO:         yellowbrick: 1.5
2024-04-13 10:48:32,702:INFO:              plotly: 5.20.0
2024-04-13 10:48:32,703:INFO:    plotly-resampler: Not installed
2024-04-13 10:48:32,703:INFO:             kaleido: 0.2.1
2024-04-13 10:48:32,703:INFO:           schemdraw: 0.15
2024-04-13 10:48:32,703:INFO:         statsmodels: 0.14.1
2024-04-13 10:48:32,703:INFO:              sktime: 0.28.0
2024-04-13 10:48:32,703:INFO:               tbats: 1.1.3
2024-04-13 10:48:32,703:INFO:            pmdarima: 2.0.4
2024-04-13 10:48:32,703:INFO:              psutil: 5.9.8
2024-04-13 10:48:32,703:INFO:          markupsafe: 2.1.5
2024-04-13 10:48:32,703:INFO:             pickle5: Not installed
2024-04-13 10:48:32,703:INFO:         cloudpickle: 3.0.0
2024-04-13 10:48:32,703:INFO:         deprecation: 2.1.0
2024-04-13 10:48:32,703:INFO:              xxhash: 3.4.1
2024-04-13 10:48:32,703:INFO:           wurlitzer: 3.0.3
2024-04-13 10:48:32,703:INFO:PyCaret optional dependencies:
2024-04-13 10:48:32,704:INFO:                shap: Not installed
2024-04-13 10:48:32,704:INFO:           interpret: Not installed
2024-04-13 10:48:32,704:INFO:                umap: Not installed
2024-04-13 10:48:32,704:INFO:     ydata_profiling: Not installed
2024-04-13 10:48:32,704:INFO:  explainerdashboard: Not installed
2024-04-13 10:48:32,704:INFO:             autoviz: Not installed
2024-04-13 10:48:32,704:INFO:           fairlearn: Not installed
2024-04-13 10:48:32,704:INFO:          deepchecks: Not installed
2024-04-13 10:48:32,704:INFO:             xgboost: Not installed
2024-04-13 10:48:32,704:INFO:            catboost: Not installed
2024-04-13 10:48:32,704:INFO:              kmodes: Not installed
2024-04-13 10:48:32,704:INFO:             mlxtend: Not installed
2024-04-13 10:48:32,704:INFO:       statsforecast: Not installed
2024-04-13 10:48:32,704:INFO:        tune_sklearn: Not installed
2024-04-13 10:48:32,705:INFO:                 ray: Not installed
2024-04-13 10:48:32,705:INFO:            hyperopt: Not installed
2024-04-13 10:48:32,705:INFO:              optuna: Not installed
2024-04-13 10:48:32,705:INFO:               skopt: Not installed
2024-04-13 10:48:32,705:INFO:              mlflow: 2.11.3
2024-04-13 10:48:32,705:INFO:              gradio: Not installed
2024-04-13 10:48:32,705:INFO:             fastapi: Not installed
2024-04-13 10:48:32,705:INFO:             uvicorn: Not installed
2024-04-13 10:48:32,705:INFO:              m2cgen: Not installed
2024-04-13 10:48:32,705:INFO:           evidently: Not installed
2024-04-13 10:48:32,705:INFO:               fugue: Not installed
2024-04-13 10:48:32,705:INFO:           streamlit: 1.33.0
2024-04-13 10:48:32,705:INFO:             prophet: Not installed
2024-04-13 10:48:32,705:INFO:None
2024-04-13 10:48:32,705:INFO:Set up data.
2024-04-13 10:48:32,711:INFO:Set up folding strategy.
2024-04-13 10:48:32,711:INFO:Set up train/test split.
2024-04-13 10:48:32,711:INFO:Set up data.
2024-04-13 10:48:32,717:INFO:Set up index.
2024-04-13 10:48:32,718:INFO:Assigning column types.
2024-04-13 10:48:32,724:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 10:48:32,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:48:32,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:48:32,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:32,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:32,913:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:48:32,914:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:48:32,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:32,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:32,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 10:48:33,032:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:48:33,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:48:33,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,195:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 10:48:33,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,431:INFO:Preparing preprocessing pipeline...
2024-04-13 10:48:33,433:INFO:Set up simple imputation.
2024-04-13 10:48:33,433:INFO:Set up feature normalization.
2024-04-13 10:48:33,473:INFO:Finished creating preprocessing pipeline.
2024-04-13 10:48:33,480:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 10:48:33,480:INFO:Creating final display dataframe.
2024-04-13 10:48:33,617:INFO:Setup _display_container:                     Description             Value
0                    Session id              2066
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              56d0
2024-04-13 10:48:33,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:48:33,862:INFO:setup() successfully completed in 1.17s...............
2024-04-13 10:48:33,863:INFO:Initializing compare_models()
2024-04-13 10:48:33,863:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 10:48:33,864:INFO:Checking exceptions
2024-04-13 10:48:33,869:INFO:Preparing display monitor
2024-04-13 10:48:33,897:INFO:Initializing Logistic Regression
2024-04-13 10:48:33,898:INFO:Total runtime is 1.6681353251139323e-05 minutes
2024-04-13 10:48:33,902:INFO:SubProcess create_model() called ==================================
2024-04-13 10:48:33,902:INFO:Initializing create_model()
2024-04-13 10:48:33,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E314D868F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:48:33,903:INFO:Checking exceptions
2024-04-13 10:48:33,903:INFO:Importing libraries
2024-04-13 10:48:33,903:INFO:Copying training dataset
2024-04-13 10:48:33,914:INFO:Defining folds
2024-04-13 10:48:33,914:INFO:Declaring metric variables
2024-04-13 10:48:33,919:INFO:Importing untrained model
2024-04-13 10:48:33,929:INFO:Logistic Regression Imported successfully
2024-04-13 10:48:33,942:INFO:Starting cross validation
2024-04-13 10:48:33,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:48:38,684:INFO:Calculating mean and std
2024-04-13 10:48:38,687:INFO:Creating metrics dataframe
2024-04-13 10:48:38,692:INFO:Uploading results into container
2024-04-13 10:48:38,693:INFO:Uploading model into container now
2024-04-13 10:48:38,693:INFO:_master_model_container: 1
2024-04-13 10:48:38,694:INFO:_display_container: 2
2024-04-13 10:48:38,694:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2066, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:48:38,695:INFO:create_model() successfully completed......................................
2024-04-13 10:48:38,847:INFO:SubProcess create_model() end ==================================
2024-04-13 10:48:38,847:INFO:Creating metrics dataframe
2024-04-13 10:48:38,856:INFO:Initializing Decision Tree Classifier
2024-04-13 10:48:38,856:INFO:Total runtime is 0.08265841801961263 minutes
2024-04-13 10:48:38,860:INFO:SubProcess create_model() called ==================================
2024-04-13 10:48:38,861:INFO:Initializing create_model()
2024-04-13 10:48:38,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E314D868F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:48:38,861:INFO:Checking exceptions
2024-04-13 10:48:38,861:INFO:Importing libraries
2024-04-13 10:48:38,862:INFO:Copying training dataset
2024-04-13 10:48:38,871:INFO:Defining folds
2024-04-13 10:48:38,872:INFO:Declaring metric variables
2024-04-13 10:48:38,877:INFO:Importing untrained model
2024-04-13 10:48:38,881:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:48:38,889:INFO:Starting cross validation
2024-04-13 10:48:38,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:48:42,192:INFO:Calculating mean and std
2024-04-13 10:48:42,195:INFO:Creating metrics dataframe
2024-04-13 10:48:42,199:INFO:Uploading results into container
2024-04-13 10:48:42,200:INFO:Uploading model into container now
2024-04-13 10:48:42,201:INFO:_master_model_container: 2
2024-04-13 10:48:42,201:INFO:_display_container: 2
2024-04-13 10:48:42,202:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2066, splitter='best')
2024-04-13 10:48:42,202:INFO:create_model() successfully completed......................................
2024-04-13 10:48:42,365:INFO:SubProcess create_model() end ==================================
2024-04-13 10:48:42,365:INFO:Creating metrics dataframe
2024-04-13 10:48:42,387:INFO:Initializing create_model()
2024-04-13 10:48:42,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2066, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:48:42,387:INFO:Checking exceptions
2024-04-13 10:48:42,390:INFO:Importing libraries
2024-04-13 10:48:42,390:INFO:Copying training dataset
2024-04-13 10:48:42,399:INFO:Defining folds
2024-04-13 10:48:42,399:INFO:Declaring metric variables
2024-04-13 10:48:42,399:INFO:Importing untrained model
2024-04-13 10:48:42,399:INFO:Declaring custom model
2024-04-13 10:48:42,400:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:48:42,401:INFO:Cross validation set to False
2024-04-13 10:48:42,401:INFO:Fitting Model
2024-04-13 10:48:42,479:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2066, splitter='best')
2024-04-13 10:48:42,479:INFO:create_model() successfully completed......................................
2024-04-13 10:48:42,601:INFO:Initializing create_model()
2024-04-13 10:48:42,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2066, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:48:42,602:INFO:Checking exceptions
2024-04-13 10:48:42,604:INFO:Importing libraries
2024-04-13 10:48:42,605:INFO:Copying training dataset
2024-04-13 10:48:42,613:INFO:Defining folds
2024-04-13 10:48:42,613:INFO:Declaring metric variables
2024-04-13 10:48:42,614:INFO:Importing untrained model
2024-04-13 10:48:42,614:INFO:Declaring custom model
2024-04-13 10:48:42,615:INFO:Logistic Regression Imported successfully
2024-04-13 10:48:42,616:INFO:Cross validation set to False
2024-04-13 10:48:42,616:INFO:Fitting Model
2024-04-13 10:48:42,641:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2066, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:48:42,641:INFO:create_model() successfully completed......................................
2024-04-13 10:48:42,775:INFO:_master_model_container: 2
2024-04-13 10:48:42,775:INFO:_display_container: 2
2024-04-13 10:48:42,776:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2066, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2066, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 10:48:42,777:INFO:compare_models() successfully completed......................................
2024-04-13 10:48:42,778:INFO:Initializing predict_model()
2024-04-13 10:48:42,778:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E318BA4730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2066, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E315577370>)
2024-04-13 10:48:42,778:INFO:Checking exceptions
2024-04-13 10:48:42,778:INFO:Preloading libraries
2024-04-13 10:49:33,893:INFO:PyCaret ClassificationExperiment
2024-04-13 10:49:33,893:INFO:Logging name: clf-default-name
2024-04-13 10:49:33,893:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 10:49:33,893:INFO:version 3.3.0
2024-04-13 10:49:33,893:INFO:Initializing setup()
2024-04-13 10:49:33,893:INFO:self.USI: efef
2024-04-13 10:49:33,893:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 10:49:33,894:INFO:Checking environment
2024-04-13 10:49:33,894:INFO:python_version: 3.10.14
2024-04-13 10:49:33,894:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 10:49:33,894:INFO:machine: AMD64
2024-04-13 10:49:33,894:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 10:49:33,898:INFO:Memory: svmem(total=17131573248, available=8111157248, percent=52.7, used=9020416000, free=8111157248)
2024-04-13 10:49:33,898:INFO:Physical Core: 8
2024-04-13 10:49:33,898:INFO:Logical Core: 16
2024-04-13 10:49:33,898:INFO:Checking libraries
2024-04-13 10:49:33,898:INFO:System:
2024-04-13 10:49:33,899:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 10:49:33,899:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 10:49:33,899:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 10:49:33,899:INFO:PyCaret required dependencies:
2024-04-13 10:49:33,899:INFO:                 pip: 23.3.1
2024-04-13 10:49:33,899:INFO:          setuptools: 68.2.2
2024-04-13 10:49:33,899:INFO:             pycaret: 3.3.0
2024-04-13 10:49:33,899:INFO:             IPython: 8.23.0
2024-04-13 10:49:33,899:INFO:          ipywidgets: 8.1.2
2024-04-13 10:49:33,899:INFO:                tqdm: 4.66.2
2024-04-13 10:49:33,899:INFO:               numpy: 1.26.4
2024-04-13 10:49:33,899:INFO:              pandas: 2.1.4
2024-04-13 10:49:33,899:INFO:              jinja2: 3.1.3
2024-04-13 10:49:33,899:INFO:               scipy: 1.11.4
2024-04-13 10:49:33,900:INFO:              joblib: 1.3.2
2024-04-13 10:49:33,900:INFO:             sklearn: 1.4.1.post1
2024-04-13 10:49:33,900:INFO:                pyod: 1.1.3
2024-04-13 10:49:33,900:INFO:            imblearn: 0.12.2
2024-04-13 10:49:33,900:INFO:   category_encoders: 2.6.3
2024-04-13 10:49:33,900:INFO:            lightgbm: 4.3.0
2024-04-13 10:49:33,900:INFO:               numba: 0.59.1
2024-04-13 10:49:33,900:INFO:            requests: 2.31.0
2024-04-13 10:49:33,900:INFO:          matplotlib: 3.7.5
2024-04-13 10:49:33,900:INFO:          scikitplot: 0.3.7
2024-04-13 10:49:33,900:INFO:         yellowbrick: 1.5
2024-04-13 10:49:33,900:INFO:              plotly: 5.20.0
2024-04-13 10:49:33,900:INFO:    plotly-resampler: Not installed
2024-04-13 10:49:33,900:INFO:             kaleido: 0.2.1
2024-04-13 10:49:33,900:INFO:           schemdraw: 0.15
2024-04-13 10:49:33,901:INFO:         statsmodels: 0.14.1
2024-04-13 10:49:33,901:INFO:              sktime: 0.28.0
2024-04-13 10:49:33,901:INFO:               tbats: 1.1.3
2024-04-13 10:49:33,901:INFO:            pmdarima: 2.0.4
2024-04-13 10:49:33,901:INFO:              psutil: 5.9.8
2024-04-13 10:49:33,901:INFO:          markupsafe: 2.1.5
2024-04-13 10:49:33,901:INFO:             pickle5: Not installed
2024-04-13 10:49:33,901:INFO:         cloudpickle: 3.0.0
2024-04-13 10:49:33,901:INFO:         deprecation: 2.1.0
2024-04-13 10:49:33,901:INFO:              xxhash: 3.4.1
2024-04-13 10:49:33,901:INFO:           wurlitzer: 3.0.3
2024-04-13 10:49:33,901:INFO:PyCaret optional dependencies:
2024-04-13 10:49:33,901:INFO:                shap: Not installed
2024-04-13 10:49:33,901:INFO:           interpret: Not installed
2024-04-13 10:49:33,902:INFO:                umap: Not installed
2024-04-13 10:49:33,902:INFO:     ydata_profiling: Not installed
2024-04-13 10:49:33,902:INFO:  explainerdashboard: Not installed
2024-04-13 10:49:33,902:INFO:             autoviz: Not installed
2024-04-13 10:49:33,902:INFO:           fairlearn: Not installed
2024-04-13 10:49:33,902:INFO:          deepchecks: Not installed
2024-04-13 10:49:33,902:INFO:             xgboost: Not installed
2024-04-13 10:49:33,902:INFO:            catboost: Not installed
2024-04-13 10:49:33,902:INFO:              kmodes: Not installed
2024-04-13 10:49:33,902:INFO:             mlxtend: Not installed
2024-04-13 10:49:33,902:INFO:       statsforecast: Not installed
2024-04-13 10:49:33,902:INFO:        tune_sklearn: Not installed
2024-04-13 10:49:33,902:INFO:                 ray: Not installed
2024-04-13 10:49:33,903:INFO:            hyperopt: Not installed
2024-04-13 10:49:33,903:INFO:              optuna: Not installed
2024-04-13 10:49:33,903:INFO:               skopt: Not installed
2024-04-13 10:49:33,903:INFO:              mlflow: 2.11.3
2024-04-13 10:49:33,903:INFO:              gradio: Not installed
2024-04-13 10:49:33,903:INFO:             fastapi: Not installed
2024-04-13 10:49:33,903:INFO:             uvicorn: Not installed
2024-04-13 10:49:33,903:INFO:              m2cgen: Not installed
2024-04-13 10:49:33,903:INFO:           evidently: Not installed
2024-04-13 10:49:33,903:INFO:               fugue: Not installed
2024-04-13 10:49:33,903:INFO:           streamlit: 1.33.0
2024-04-13 10:49:33,903:INFO:             prophet: Not installed
2024-04-13 10:49:33,903:INFO:None
2024-04-13 10:49:33,903:INFO:Set up data.
2024-04-13 10:49:33,909:INFO:Set up folding strategy.
2024-04-13 10:49:33,909:INFO:Set up train/test split.
2024-04-13 10:49:33,909:INFO:Set up data.
2024-04-13 10:49:33,914:INFO:Set up index.
2024-04-13 10:49:33,915:INFO:Assigning column types.
2024-04-13 10:49:33,920:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 10:49:33,993:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:49:33,994:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:49:34,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 10:49:34,112:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:49:34,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,157:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 10:49:34,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:49:34,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,347:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 10:49:34,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,392:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 10:49:34,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,629:INFO:Preparing preprocessing pipeline...
2024-04-13 10:49:34,630:INFO:Set up simple imputation.
2024-04-13 10:49:34,631:INFO:Set up feature normalization.
2024-04-13 10:49:34,670:INFO:Finished creating preprocessing pipeline.
2024-04-13 10:49:34,677:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 10:49:34,677:INFO:Creating final display dataframe.
2024-04-13 10:49:34,811:INFO:Setup _display_container:                     Description             Value
0                    Session id              1487
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              efef
2024-04-13 10:49:34,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:34,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:35,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:35,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 10:49:35,058:INFO:setup() successfully completed in 1.17s...............
2024-04-13 10:49:35,059:INFO:Initializing compare_models()
2024-04-13 10:49:35,060:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 10:49:35,060:INFO:Checking exceptions
2024-04-13 10:49:35,065:INFO:Preparing display monitor
2024-04-13 10:49:35,092:INFO:Initializing Logistic Regression
2024-04-13 10:49:35,093:INFO:Total runtime is 1.668532689412435e-05 minutes
2024-04-13 10:49:35,097:INFO:SubProcess create_model() called ==================================
2024-04-13 10:49:35,098:INFO:Initializing create_model()
2024-04-13 10:49:35,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E3128E6DD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:49:35,098:INFO:Checking exceptions
2024-04-13 10:49:35,098:INFO:Importing libraries
2024-04-13 10:49:35,098:INFO:Copying training dataset
2024-04-13 10:49:35,110:INFO:Defining folds
2024-04-13 10:49:35,110:INFO:Declaring metric variables
2024-04-13 10:49:35,115:INFO:Importing untrained model
2024-04-13 10:49:35,119:INFO:Logistic Regression Imported successfully
2024-04-13 10:49:35,128:INFO:Starting cross validation
2024-04-13 10:49:35,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:49:39,840:INFO:Calculating mean and std
2024-04-13 10:49:39,843:INFO:Creating metrics dataframe
2024-04-13 10:49:39,847:INFO:Uploading results into container
2024-04-13 10:49:39,848:INFO:Uploading model into container now
2024-04-13 10:49:39,849:INFO:_master_model_container: 1
2024-04-13 10:49:39,850:INFO:_display_container: 2
2024-04-13 10:49:39,850:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1487, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:49:39,851:INFO:create_model() successfully completed......................................
2024-04-13 10:49:39,990:INFO:SubProcess create_model() end ==================================
2024-04-13 10:49:39,990:INFO:Creating metrics dataframe
2024-04-13 10:49:39,999:INFO:Initializing Decision Tree Classifier
2024-04-13 10:49:39,999:INFO:Total runtime is 0.08179096380869548 minutes
2024-04-13 10:49:40,004:INFO:SubProcess create_model() called ==================================
2024-04-13 10:49:40,004:INFO:Initializing create_model()
2024-04-13 10:49:40,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E3128E6DD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:49:40,004:INFO:Checking exceptions
2024-04-13 10:49:40,004:INFO:Importing libraries
2024-04-13 10:49:40,005:INFO:Copying training dataset
2024-04-13 10:49:40,014:INFO:Defining folds
2024-04-13 10:49:40,014:INFO:Declaring metric variables
2024-04-13 10:49:40,019:INFO:Importing untrained model
2024-04-13 10:49:40,023:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:49:40,032:INFO:Starting cross validation
2024-04-13 10:49:40,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 10:49:43,269:INFO:Calculating mean and std
2024-04-13 10:49:43,272:INFO:Creating metrics dataframe
2024-04-13 10:49:43,275:INFO:Uploading results into container
2024-04-13 10:49:43,276:INFO:Uploading model into container now
2024-04-13 10:49:43,277:INFO:_master_model_container: 2
2024-04-13 10:49:43,277:INFO:_display_container: 2
2024-04-13 10:49:43,278:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1487, splitter='best')
2024-04-13 10:49:43,278:INFO:create_model() successfully completed......................................
2024-04-13 10:49:43,419:INFO:SubProcess create_model() end ==================================
2024-04-13 10:49:43,419:INFO:Creating metrics dataframe
2024-04-13 10:49:43,440:INFO:Initializing create_model()
2024-04-13 10:49:43,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1487, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:49:43,440:INFO:Checking exceptions
2024-04-13 10:49:43,443:INFO:Importing libraries
2024-04-13 10:49:43,443:INFO:Copying training dataset
2024-04-13 10:49:43,452:INFO:Defining folds
2024-04-13 10:49:43,452:INFO:Declaring metric variables
2024-04-13 10:49:43,452:INFO:Importing untrained model
2024-04-13 10:49:43,452:INFO:Declaring custom model
2024-04-13 10:49:43,453:INFO:Decision Tree Classifier Imported successfully
2024-04-13 10:49:43,454:INFO:Cross validation set to False
2024-04-13 10:49:43,454:INFO:Fitting Model
2024-04-13 10:49:43,530:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1487, splitter='best')
2024-04-13 10:49:43,530:INFO:create_model() successfully completed......................................
2024-04-13 10:49:43,656:INFO:Initializing create_model()
2024-04-13 10:49:43,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1487, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 10:49:43,656:INFO:Checking exceptions
2024-04-13 10:49:43,659:INFO:Importing libraries
2024-04-13 10:49:43,660:INFO:Copying training dataset
2024-04-13 10:49:43,673:INFO:Defining folds
2024-04-13 10:49:43,673:INFO:Declaring metric variables
2024-04-13 10:49:43,674:INFO:Importing untrained model
2024-04-13 10:49:43,674:INFO:Declaring custom model
2024-04-13 10:49:43,675:INFO:Logistic Regression Imported successfully
2024-04-13 10:49:43,676:INFO:Cross validation set to False
2024-04-13 10:49:43,676:INFO:Fitting Model
2024-04-13 10:49:43,702:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1487, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 10:49:43,702:INFO:create_model() successfully completed......................................
2024-04-13 10:49:43,839:INFO:_master_model_container: 2
2024-04-13 10:49:43,839:INFO:_display_container: 2
2024-04-13 10:49:43,840:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1487, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1487, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 10:49:43,840:INFO:compare_models() successfully completed......................................
2024-04-13 10:49:43,841:INFO:Initializing predict_model()
2024-04-13 10:49:43,841:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315659BD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1487, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E315A1E710>)
2024-04-13 10:49:43,841:INFO:Checking exceptions
2024-04-13 10:49:43,841:INFO:Preloading libraries
2024-04-13 11:34:53,999:INFO:PyCaret ClassificationExperiment
2024-04-13 11:34:53,999:INFO:Logging name: clf-default-name
2024-04-13 11:34:53,999:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 11:34:53,999:INFO:version 3.3.0
2024-04-13 11:34:53,999:INFO:Initializing setup()
2024-04-13 11:34:53,999:INFO:self.USI: 5c1f
2024-04-13 11:34:54,000:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 11:34:54,000:INFO:Checking environment
2024-04-13 11:34:54,000:INFO:python_version: 3.10.14
2024-04-13 11:34:54,000:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 11:34:54,000:INFO:machine: AMD64
2024-04-13 11:34:54,001:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 11:34:54,008:INFO:Memory: svmem(total=17131573248, available=4805910528, percent=71.9, used=12325662720, free=4805910528)
2024-04-13 11:34:54,008:INFO:Physical Core: 8
2024-04-13 11:34:54,008:INFO:Logical Core: 16
2024-04-13 11:34:54,008:INFO:Checking libraries
2024-04-13 11:34:54,009:INFO:System:
2024-04-13 11:34:54,009:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 11:34:54,009:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 11:34:54,009:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 11:34:54,009:INFO:PyCaret required dependencies:
2024-04-13 11:34:54,010:INFO:                 pip: 23.3.1
2024-04-13 11:34:54,011:INFO:          setuptools: 68.2.2
2024-04-13 11:34:54,011:INFO:             pycaret: 3.3.0
2024-04-13 11:34:54,011:INFO:             IPython: 8.23.0
2024-04-13 11:34:54,011:INFO:          ipywidgets: 8.1.2
2024-04-13 11:34:54,011:INFO:                tqdm: 4.66.2
2024-04-13 11:34:54,011:INFO:               numpy: 1.26.4
2024-04-13 11:34:54,011:INFO:              pandas: 2.1.4
2024-04-13 11:34:54,011:INFO:              jinja2: 3.1.3
2024-04-13 11:34:54,011:INFO:               scipy: 1.11.4
2024-04-13 11:34:54,011:INFO:              joblib: 1.3.2
2024-04-13 11:34:54,011:INFO:             sklearn: 1.4.1.post1
2024-04-13 11:34:54,011:INFO:                pyod: 1.1.3
2024-04-13 11:34:54,011:INFO:            imblearn: 0.12.2
2024-04-13 11:34:54,011:INFO:   category_encoders: 2.6.3
2024-04-13 11:34:54,012:INFO:            lightgbm: 4.3.0
2024-04-13 11:34:54,012:INFO:               numba: 0.59.1
2024-04-13 11:34:54,012:INFO:            requests: 2.31.0
2024-04-13 11:34:54,012:INFO:          matplotlib: 3.7.5
2024-04-13 11:34:54,012:INFO:          scikitplot: 0.3.7
2024-04-13 11:34:54,012:INFO:         yellowbrick: 1.5
2024-04-13 11:34:54,012:INFO:              plotly: 5.20.0
2024-04-13 11:34:54,012:INFO:    plotly-resampler: Not installed
2024-04-13 11:34:54,012:INFO:             kaleido: 0.2.1
2024-04-13 11:34:54,012:INFO:           schemdraw: 0.15
2024-04-13 11:34:54,012:INFO:         statsmodels: 0.14.1
2024-04-13 11:34:54,012:INFO:              sktime: 0.28.0
2024-04-13 11:34:54,012:INFO:               tbats: 1.1.3
2024-04-13 11:34:54,012:INFO:            pmdarima: 2.0.4
2024-04-13 11:34:54,013:INFO:              psutil: 5.9.8
2024-04-13 11:34:54,013:INFO:          markupsafe: 2.1.5
2024-04-13 11:34:54,013:INFO:             pickle5: Not installed
2024-04-13 11:34:54,013:INFO:         cloudpickle: 3.0.0
2024-04-13 11:34:54,013:INFO:         deprecation: 2.1.0
2024-04-13 11:34:54,013:INFO:              xxhash: 3.4.1
2024-04-13 11:34:54,013:INFO:           wurlitzer: 3.0.3
2024-04-13 11:34:54,013:INFO:PyCaret optional dependencies:
2024-04-13 11:34:54,013:INFO:                shap: Not installed
2024-04-13 11:34:54,013:INFO:           interpret: Not installed
2024-04-13 11:34:54,013:INFO:                umap: Not installed
2024-04-13 11:34:54,014:INFO:     ydata_profiling: Not installed
2024-04-13 11:34:54,014:INFO:  explainerdashboard: Not installed
2024-04-13 11:34:54,014:INFO:             autoviz: Not installed
2024-04-13 11:34:54,014:INFO:           fairlearn: Not installed
2024-04-13 11:34:54,014:INFO:          deepchecks: Not installed
2024-04-13 11:34:54,014:INFO:             xgboost: Not installed
2024-04-13 11:34:54,014:INFO:            catboost: Not installed
2024-04-13 11:34:54,014:INFO:              kmodes: Not installed
2024-04-13 11:34:54,014:INFO:             mlxtend: Not installed
2024-04-13 11:34:54,014:INFO:       statsforecast: Not installed
2024-04-13 11:34:54,014:INFO:        tune_sklearn: Not installed
2024-04-13 11:34:54,014:INFO:                 ray: Not installed
2024-04-13 11:34:54,014:INFO:            hyperopt: Not installed
2024-04-13 11:34:54,014:INFO:              optuna: Not installed
2024-04-13 11:34:54,014:INFO:               skopt: Not installed
2024-04-13 11:34:54,015:INFO:              mlflow: 2.11.3
2024-04-13 11:34:54,015:INFO:              gradio: Not installed
2024-04-13 11:34:54,015:INFO:             fastapi: Not installed
2024-04-13 11:34:54,015:INFO:             uvicorn: Not installed
2024-04-13 11:34:54,015:INFO:              m2cgen: Not installed
2024-04-13 11:34:54,015:INFO:           evidently: Not installed
2024-04-13 11:34:54,015:INFO:               fugue: Not installed
2024-04-13 11:34:54,015:INFO:           streamlit: 1.33.0
2024-04-13 11:34:54,015:INFO:             prophet: Not installed
2024-04-13 11:34:54,015:INFO:None
2024-04-13 11:34:54,016:INFO:Set up data.
2024-04-13 11:34:54,052:INFO:Set up folding strategy.
2024-04-13 11:34:54,053:INFO:Set up train/test split.
2024-04-13 11:34:54,053:INFO:Set up data.
2024-04-13 11:34:54,060:INFO:Set up index.
2024-04-13 11:34:54,061:INFO:Assigning column types.
2024-04-13 11:34:54,069:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 11:34:54,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:34:54,148:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:34:54,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:34:54,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:34:54,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,316:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 11:34:54,388:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:34:54,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:34:54,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,552:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 11:34:54,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:54,795:INFO:Preparing preprocessing pipeline...
2024-04-13 11:34:54,798:INFO:Set up simple imputation.
2024-04-13 11:34:54,798:INFO:Set up feature normalization.
2024-04-13 11:34:54,862:INFO:Finished creating preprocessing pipeline.
2024-04-13 11:34:54,871:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 11:34:54,871:INFO:Creating final display dataframe.
2024-04-13 11:34:55,019:INFO:Setup _display_container:                     Description             Value
0                    Session id              5621
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5c1f
2024-04-13 11:34:55,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:55,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:55,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:55,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:34:55,278:INFO:setup() successfully completed in 1.3s...............
2024-04-13 11:34:55,296:INFO:Initializing compare_models()
2024-04-13 11:34:55,297:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 11:34:55,297:INFO:Checking exceptions
2024-04-13 11:34:55,303:INFO:Preparing display monitor
2024-04-13 11:34:55,336:INFO:Initializing Logistic Regression
2024-04-13 11:34:55,336:INFO:Total runtime is 0.0 minutes
2024-04-13 11:34:55,341:INFO:SubProcess create_model() called ==================================
2024-04-13 11:34:55,342:INFO:Initializing create_model()
2024-04-13 11:34:55,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319E21C00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:34:55,342:INFO:Checking exceptions
2024-04-13 11:34:55,343:INFO:Importing libraries
2024-04-13 11:34:55,343:INFO:Copying training dataset
2024-04-13 11:34:55,355:INFO:Defining folds
2024-04-13 11:34:55,355:INFO:Declaring metric variables
2024-04-13 11:34:55,360:INFO:Importing untrained model
2024-04-13 11:34:55,365:INFO:Logistic Regression Imported successfully
2024-04-13 11:34:55,374:INFO:Starting cross validation
2024-04-13 11:34:55,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:35:01,209:INFO:Calculating mean and std
2024-04-13 11:35:01,211:INFO:Creating metrics dataframe
2024-04-13 11:35:01,214:INFO:Uploading results into container
2024-04-13 11:35:01,215:INFO:Uploading model into container now
2024-04-13 11:35:01,216:INFO:_master_model_container: 1
2024-04-13 11:35:01,216:INFO:_display_container: 2
2024-04-13 11:35:01,217:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5621, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:35:01,217:INFO:create_model() successfully completed......................................
2024-04-13 11:35:01,562:INFO:SubProcess create_model() end ==================================
2024-04-13 11:35:01,562:INFO:Creating metrics dataframe
2024-04-13 11:35:01,572:INFO:Initializing Decision Tree Classifier
2024-04-13 11:35:01,572:INFO:Total runtime is 0.10394442478815714 minutes
2024-04-13 11:35:01,577:INFO:SubProcess create_model() called ==================================
2024-04-13 11:35:01,578:INFO:Initializing create_model()
2024-04-13 11:35:01,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319E21C00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:35:01,578:INFO:Checking exceptions
2024-04-13 11:35:01,578:INFO:Importing libraries
2024-04-13 11:35:01,578:INFO:Copying training dataset
2024-04-13 11:35:01,594:INFO:Defining folds
2024-04-13 11:35:01,595:INFO:Declaring metric variables
2024-04-13 11:35:01,613:INFO:Importing untrained model
2024-04-13 11:35:01,619:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:35:01,632:INFO:Starting cross validation
2024-04-13 11:35:01,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:35:05,515:INFO:Calculating mean and std
2024-04-13 11:35:05,517:INFO:Creating metrics dataframe
2024-04-13 11:35:05,520:INFO:Uploading results into container
2024-04-13 11:35:05,522:INFO:Uploading model into container now
2024-04-13 11:35:05,523:INFO:_master_model_container: 2
2024-04-13 11:35:05,524:INFO:_display_container: 2
2024-04-13 11:35:05,524:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5621, splitter='best')
2024-04-13 11:35:05,525:INFO:create_model() successfully completed......................................
2024-04-13 11:35:05,663:INFO:SubProcess create_model() end ==================================
2024-04-13 11:35:05,663:INFO:Creating metrics dataframe
2024-04-13 11:35:05,685:INFO:Initializing create_model()
2024-04-13 11:35:05,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5621, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:35:05,686:INFO:Checking exceptions
2024-04-13 11:35:05,689:INFO:Importing libraries
2024-04-13 11:35:05,689:INFO:Copying training dataset
2024-04-13 11:35:05,698:INFO:Defining folds
2024-04-13 11:35:05,698:INFO:Declaring metric variables
2024-04-13 11:35:05,698:INFO:Importing untrained model
2024-04-13 11:35:05,698:INFO:Declaring custom model
2024-04-13 11:35:05,699:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:35:05,700:INFO:Cross validation set to False
2024-04-13 11:35:05,700:INFO:Fitting Model
2024-04-13 11:35:05,781:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5621, splitter='best')
2024-04-13 11:35:05,781:INFO:create_model() successfully completed......................................
2024-04-13 11:35:05,917:INFO:Initializing create_model()
2024-04-13 11:35:05,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5621, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:35:05,917:INFO:Checking exceptions
2024-04-13 11:35:05,920:INFO:Importing libraries
2024-04-13 11:35:05,920:INFO:Copying training dataset
2024-04-13 11:35:05,929:INFO:Defining folds
2024-04-13 11:35:05,929:INFO:Declaring metric variables
2024-04-13 11:35:05,929:INFO:Importing untrained model
2024-04-13 11:35:05,929:INFO:Declaring custom model
2024-04-13 11:35:05,930:INFO:Logistic Regression Imported successfully
2024-04-13 11:35:05,931:INFO:Cross validation set to False
2024-04-13 11:35:05,931:INFO:Fitting Model
2024-04-13 11:35:05,959:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5621, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:35:05,959:INFO:create_model() successfully completed......................................
2024-04-13 11:35:06,109:INFO:_master_model_container: 2
2024-04-13 11:35:06,109:INFO:_display_container: 2
2024-04-13 11:35:06,110:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5621, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5621, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 11:35:06,110:INFO:compare_models() successfully completed......................................
2024-04-13 11:35:06,111:INFO:Initializing predict_model()
2024-04-13 11:35:06,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319618820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5621, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E315577370>)
2024-04-13 11:35:06,112:INFO:Checking exceptions
2024-04-13 11:35:06,112:INFO:Preloading libraries
2024-04-13 11:43:17,141:INFO:PyCaret ClassificationExperiment
2024-04-13 11:43:17,141:INFO:Logging name: clf-default-name
2024-04-13 11:43:17,141:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 11:43:17,141:INFO:version 3.3.0
2024-04-13 11:43:17,141:INFO:Initializing setup()
2024-04-13 11:43:17,141:INFO:self.USI: f8e2
2024-04-13 11:43:17,141:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 11:43:17,141:INFO:Checking environment
2024-04-13 11:43:17,141:INFO:python_version: 3.10.14
2024-04-13 11:43:17,141:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 11:43:17,141:INFO:machine: AMD64
2024-04-13 11:43:17,141:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 11:43:17,147:INFO:Memory: svmem(total=17131573248, available=5744607232, percent=66.5, used=11386966016, free=5744607232)
2024-04-13 11:43:17,147:INFO:Physical Core: 8
2024-04-13 11:43:17,147:INFO:Logical Core: 16
2024-04-13 11:43:17,147:INFO:Checking libraries
2024-04-13 11:43:17,148:INFO:System:
2024-04-13 11:43:17,148:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 11:43:17,148:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 11:43:17,148:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 11:43:17,148:INFO:PyCaret required dependencies:
2024-04-13 11:43:17,148:INFO:                 pip: 23.3.1
2024-04-13 11:43:17,148:INFO:          setuptools: 68.2.2
2024-04-13 11:43:17,148:INFO:             pycaret: 3.3.0
2024-04-13 11:43:17,148:INFO:             IPython: 8.23.0
2024-04-13 11:43:17,148:INFO:          ipywidgets: 8.1.2
2024-04-13 11:43:17,148:INFO:                tqdm: 4.66.2
2024-04-13 11:43:17,148:INFO:               numpy: 1.26.4
2024-04-13 11:43:17,149:INFO:              pandas: 2.1.4
2024-04-13 11:43:17,149:INFO:              jinja2: 3.1.3
2024-04-13 11:43:17,149:INFO:               scipy: 1.11.4
2024-04-13 11:43:17,149:INFO:              joblib: 1.3.2
2024-04-13 11:43:17,149:INFO:             sklearn: 1.4.1.post1
2024-04-13 11:43:17,149:INFO:                pyod: 1.1.3
2024-04-13 11:43:17,149:INFO:            imblearn: 0.12.2
2024-04-13 11:43:17,149:INFO:   category_encoders: 2.6.3
2024-04-13 11:43:17,149:INFO:            lightgbm: 4.3.0
2024-04-13 11:43:17,149:INFO:               numba: 0.59.1
2024-04-13 11:43:17,149:INFO:            requests: 2.31.0
2024-04-13 11:43:17,149:INFO:          matplotlib: 3.7.5
2024-04-13 11:43:17,149:INFO:          scikitplot: 0.3.7
2024-04-13 11:43:17,149:INFO:         yellowbrick: 1.5
2024-04-13 11:43:17,149:INFO:              plotly: 5.20.0
2024-04-13 11:43:17,150:INFO:    plotly-resampler: Not installed
2024-04-13 11:43:17,150:INFO:             kaleido: 0.2.1
2024-04-13 11:43:17,150:INFO:           schemdraw: 0.15
2024-04-13 11:43:17,150:INFO:         statsmodels: 0.14.1
2024-04-13 11:43:17,150:INFO:              sktime: 0.28.0
2024-04-13 11:43:17,150:INFO:               tbats: 1.1.3
2024-04-13 11:43:17,150:INFO:            pmdarima: 2.0.4
2024-04-13 11:43:17,150:INFO:              psutil: 5.9.8
2024-04-13 11:43:17,150:INFO:          markupsafe: 2.1.5
2024-04-13 11:43:17,150:INFO:             pickle5: Not installed
2024-04-13 11:43:17,150:INFO:         cloudpickle: 3.0.0
2024-04-13 11:43:17,150:INFO:         deprecation: 2.1.0
2024-04-13 11:43:17,150:INFO:              xxhash: 3.4.1
2024-04-13 11:43:17,150:INFO:           wurlitzer: 3.0.3
2024-04-13 11:43:17,150:INFO:PyCaret optional dependencies:
2024-04-13 11:43:17,151:INFO:                shap: Not installed
2024-04-13 11:43:17,151:INFO:           interpret: Not installed
2024-04-13 11:43:17,151:INFO:                umap: Not installed
2024-04-13 11:43:17,151:INFO:     ydata_profiling: Not installed
2024-04-13 11:43:17,151:INFO:  explainerdashboard: Not installed
2024-04-13 11:43:17,151:INFO:             autoviz: Not installed
2024-04-13 11:43:17,151:INFO:           fairlearn: Not installed
2024-04-13 11:43:17,151:INFO:          deepchecks: Not installed
2024-04-13 11:43:17,151:INFO:             xgboost: Not installed
2024-04-13 11:43:17,151:INFO:            catboost: Not installed
2024-04-13 11:43:17,151:INFO:              kmodes: Not installed
2024-04-13 11:43:17,151:INFO:             mlxtend: Not installed
2024-04-13 11:43:17,151:INFO:       statsforecast: Not installed
2024-04-13 11:43:17,151:INFO:        tune_sklearn: Not installed
2024-04-13 11:43:17,152:INFO:                 ray: Not installed
2024-04-13 11:43:17,152:INFO:            hyperopt: Not installed
2024-04-13 11:43:17,152:INFO:              optuna: Not installed
2024-04-13 11:43:17,152:INFO:               skopt: Not installed
2024-04-13 11:43:17,152:INFO:              mlflow: 2.11.3
2024-04-13 11:43:17,152:INFO:              gradio: Not installed
2024-04-13 11:43:17,152:INFO:             fastapi: Not installed
2024-04-13 11:43:17,152:INFO:             uvicorn: Not installed
2024-04-13 11:43:17,152:INFO:              m2cgen: Not installed
2024-04-13 11:43:17,152:INFO:           evidently: Not installed
2024-04-13 11:43:17,152:INFO:               fugue: Not installed
2024-04-13 11:43:17,152:INFO:           streamlit: 1.33.0
2024-04-13 11:43:17,152:INFO:             prophet: Not installed
2024-04-13 11:43:17,152:INFO:None
2024-04-13 11:43:17,153:INFO:Set up data.
2024-04-13 11:43:17,158:INFO:Set up folding strategy.
2024-04-13 11:43:17,158:INFO:Set up train/test split.
2024-04-13 11:43:17,158:INFO:Set up data.
2024-04-13 11:43:17,164:INFO:Set up index.
2024-04-13 11:43:17,164:INFO:Assigning column types.
2024-04-13 11:43:17,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 11:43:17,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:43:17,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:43:17,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:43:17,362:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:43:17,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,407:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 11:43:17,480:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:43:17,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,597:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:43:17,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,641:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 11:43:17,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:17,881:INFO:Preparing preprocessing pipeline...
2024-04-13 11:43:17,883:INFO:Set up simple imputation.
2024-04-13 11:43:17,883:INFO:Set up feature normalization.
2024-04-13 11:43:17,922:INFO:Finished creating preprocessing pipeline.
2024-04-13 11:43:17,929:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 11:43:17,929:INFO:Creating final display dataframe.
2024-04-13 11:43:18,062:INFO:Setup _display_container:                     Description             Value
0                    Session id              4365
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f8e2
2024-04-13 11:43:18,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:18,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:18,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:18,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:43:18,317:INFO:setup() successfully completed in 1.18s...............
2024-04-13 11:43:18,331:INFO:Initializing compare_models()
2024-04-13 11:43:18,331:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 11:43:18,331:INFO:Checking exceptions
2024-04-13 11:43:18,336:INFO:Preparing display monitor
2024-04-13 11:43:18,364:INFO:Initializing Logistic Regression
2024-04-13 11:43:18,364:INFO:Total runtime is 0.0 minutes
2024-04-13 11:43:18,369:INFO:SubProcess create_model() called ==================================
2024-04-13 11:43:18,369:INFO:Initializing create_model()
2024-04-13 11:43:18,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319D70940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:43:18,369:INFO:Checking exceptions
2024-04-13 11:43:18,369:INFO:Importing libraries
2024-04-13 11:43:18,370:INFO:Copying training dataset
2024-04-13 11:43:18,380:INFO:Defining folds
2024-04-13 11:43:18,380:INFO:Declaring metric variables
2024-04-13 11:43:18,385:INFO:Importing untrained model
2024-04-13 11:43:18,390:INFO:Logistic Regression Imported successfully
2024-04-13 11:43:18,399:INFO:Starting cross validation
2024-04-13 11:43:18,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:43:23,447:INFO:Calculating mean and std
2024-04-13 11:43:23,450:INFO:Creating metrics dataframe
2024-04-13 11:43:23,455:INFO:Uploading results into container
2024-04-13 11:43:23,456:INFO:Uploading model into container now
2024-04-13 11:43:23,457:INFO:_master_model_container: 1
2024-04-13 11:43:23,457:INFO:_display_container: 2
2024-04-13 11:43:23,458:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4365, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:43:23,458:INFO:create_model() successfully completed......................................
2024-04-13 11:43:23,653:INFO:SubProcess create_model() end ==================================
2024-04-13 11:43:23,653:INFO:Creating metrics dataframe
2024-04-13 11:43:23,662:INFO:Initializing Decision Tree Classifier
2024-04-13 11:43:23,663:INFO:Total runtime is 0.08831355174382528 minutes
2024-04-13 11:43:23,668:INFO:SubProcess create_model() called ==================================
2024-04-13 11:43:23,668:INFO:Initializing create_model()
2024-04-13 11:43:23,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319D70940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:43:23,668:INFO:Checking exceptions
2024-04-13 11:43:23,668:INFO:Importing libraries
2024-04-13 11:43:23,669:INFO:Copying training dataset
2024-04-13 11:43:23,678:INFO:Defining folds
2024-04-13 11:43:23,678:INFO:Declaring metric variables
2024-04-13 11:43:23,683:INFO:Importing untrained model
2024-04-13 11:43:23,687:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:43:23,698:INFO:Starting cross validation
2024-04-13 11:43:23,699:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:43:27,115:INFO:Calculating mean and std
2024-04-13 11:43:27,117:INFO:Creating metrics dataframe
2024-04-13 11:43:27,120:INFO:Uploading results into container
2024-04-13 11:43:27,121:INFO:Uploading model into container now
2024-04-13 11:43:27,122:INFO:_master_model_container: 2
2024-04-13 11:43:27,123:INFO:_display_container: 2
2024-04-13 11:43:27,123:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4365, splitter='best')
2024-04-13 11:43:27,123:INFO:create_model() successfully completed......................................
2024-04-13 11:43:27,264:INFO:SubProcess create_model() end ==================================
2024-04-13 11:43:27,264:INFO:Creating metrics dataframe
2024-04-13 11:43:27,292:INFO:Initializing create_model()
2024-04-13 11:43:27,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4365, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:43:27,293:INFO:Checking exceptions
2024-04-13 11:43:27,297:INFO:Importing libraries
2024-04-13 11:43:27,298:INFO:Copying training dataset
2024-04-13 11:43:27,313:INFO:Defining folds
2024-04-13 11:43:27,314:INFO:Declaring metric variables
2024-04-13 11:43:27,314:INFO:Importing untrained model
2024-04-13 11:43:27,314:INFO:Declaring custom model
2024-04-13 11:43:27,316:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:43:27,317:INFO:Cross validation set to False
2024-04-13 11:43:27,317:INFO:Fitting Model
2024-04-13 11:43:27,414:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4365, splitter='best')
2024-04-13 11:43:27,414:INFO:create_model() successfully completed......................................
2024-04-13 11:43:27,549:INFO:Initializing create_model()
2024-04-13 11:43:27,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4365, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:43:27,549:INFO:Checking exceptions
2024-04-13 11:43:27,551:INFO:Importing libraries
2024-04-13 11:43:27,551:INFO:Copying training dataset
2024-04-13 11:43:27,560:INFO:Defining folds
2024-04-13 11:43:27,561:INFO:Declaring metric variables
2024-04-13 11:43:27,561:INFO:Importing untrained model
2024-04-13 11:43:27,561:INFO:Declaring custom model
2024-04-13 11:43:27,562:INFO:Logistic Regression Imported successfully
2024-04-13 11:43:27,563:INFO:Cross validation set to False
2024-04-13 11:43:27,563:INFO:Fitting Model
2024-04-13 11:43:27,587:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4365, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:43:27,588:INFO:create_model() successfully completed......................................
2024-04-13 11:43:27,728:INFO:_master_model_container: 2
2024-04-13 11:43:27,728:INFO:_display_container: 2
2024-04-13 11:43:27,729:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4365, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4365, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 11:43:27,729:INFO:compare_models() successfully completed......................................
2024-04-13 11:43:27,730:INFO:Initializing predict_model()
2024-04-13 11:43:27,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319D65BD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4365, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E314A1FF40>)
2024-04-13 11:43:27,730:INFO:Checking exceptions
2024-04-13 11:43:27,730:INFO:Preloading libraries
2024-04-13 11:45:37,942:INFO:PyCaret ClassificationExperiment
2024-04-13 11:45:37,942:INFO:Logging name: clf-default-name
2024-04-13 11:45:37,942:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 11:45:37,942:INFO:version 3.3.0
2024-04-13 11:45:37,942:INFO:Initializing setup()
2024-04-13 11:45:37,942:INFO:self.USI: 4dda
2024-04-13 11:45:37,942:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 11:45:37,942:INFO:Checking environment
2024-04-13 11:45:37,943:INFO:python_version: 3.10.14
2024-04-13 11:45:37,943:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 11:45:37,943:INFO:machine: AMD64
2024-04-13 11:45:37,943:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 11:45:37,949:INFO:Memory: svmem(total=17131573248, available=6079496192, percent=64.5, used=11052077056, free=6079496192)
2024-04-13 11:45:37,949:INFO:Physical Core: 8
2024-04-13 11:45:37,949:INFO:Logical Core: 16
2024-04-13 11:45:37,949:INFO:Checking libraries
2024-04-13 11:45:37,949:INFO:System:
2024-04-13 11:45:37,949:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 11:45:37,949:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 11:45:37,949:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 11:45:37,949:INFO:PyCaret required dependencies:
2024-04-13 11:45:37,949:INFO:                 pip: 23.3.1
2024-04-13 11:45:37,950:INFO:          setuptools: 68.2.2
2024-04-13 11:45:37,950:INFO:             pycaret: 3.3.0
2024-04-13 11:45:37,950:INFO:             IPython: 8.23.0
2024-04-13 11:45:37,950:INFO:          ipywidgets: 8.1.2
2024-04-13 11:45:37,950:INFO:                tqdm: 4.66.2
2024-04-13 11:45:37,950:INFO:               numpy: 1.26.4
2024-04-13 11:45:37,950:INFO:              pandas: 2.1.4
2024-04-13 11:45:37,950:INFO:              jinja2: 3.1.3
2024-04-13 11:45:37,950:INFO:               scipy: 1.11.4
2024-04-13 11:45:37,950:INFO:              joblib: 1.3.2
2024-04-13 11:45:37,950:INFO:             sklearn: 1.4.1.post1
2024-04-13 11:45:37,950:INFO:                pyod: 1.1.3
2024-04-13 11:45:37,950:INFO:            imblearn: 0.12.2
2024-04-13 11:45:37,950:INFO:   category_encoders: 2.6.3
2024-04-13 11:45:37,950:INFO:            lightgbm: 4.3.0
2024-04-13 11:45:37,951:INFO:               numba: 0.59.1
2024-04-13 11:45:37,951:INFO:            requests: 2.31.0
2024-04-13 11:45:37,951:INFO:          matplotlib: 3.7.5
2024-04-13 11:45:37,951:INFO:          scikitplot: 0.3.7
2024-04-13 11:45:37,951:INFO:         yellowbrick: 1.5
2024-04-13 11:45:37,951:INFO:              plotly: 5.20.0
2024-04-13 11:45:37,951:INFO:    plotly-resampler: Not installed
2024-04-13 11:45:37,951:INFO:             kaleido: 0.2.1
2024-04-13 11:45:37,951:INFO:           schemdraw: 0.15
2024-04-13 11:45:37,951:INFO:         statsmodels: 0.14.1
2024-04-13 11:45:37,951:INFO:              sktime: 0.28.0
2024-04-13 11:45:37,951:INFO:               tbats: 1.1.3
2024-04-13 11:45:37,951:INFO:            pmdarima: 2.0.4
2024-04-13 11:45:37,951:INFO:              psutil: 5.9.8
2024-04-13 11:45:37,951:INFO:          markupsafe: 2.1.5
2024-04-13 11:45:37,952:INFO:             pickle5: Not installed
2024-04-13 11:45:37,952:INFO:         cloudpickle: 3.0.0
2024-04-13 11:45:37,952:INFO:         deprecation: 2.1.0
2024-04-13 11:45:37,952:INFO:              xxhash: 3.4.1
2024-04-13 11:45:37,952:INFO:           wurlitzer: 3.0.3
2024-04-13 11:45:37,952:INFO:PyCaret optional dependencies:
2024-04-13 11:45:37,952:INFO:                shap: Not installed
2024-04-13 11:45:37,952:INFO:           interpret: Not installed
2024-04-13 11:45:37,952:INFO:                umap: Not installed
2024-04-13 11:45:37,952:INFO:     ydata_profiling: Not installed
2024-04-13 11:45:37,952:INFO:  explainerdashboard: Not installed
2024-04-13 11:45:37,952:INFO:             autoviz: Not installed
2024-04-13 11:45:37,952:INFO:           fairlearn: Not installed
2024-04-13 11:45:37,952:INFO:          deepchecks: Not installed
2024-04-13 11:45:37,952:INFO:             xgboost: Not installed
2024-04-13 11:45:37,953:INFO:            catboost: Not installed
2024-04-13 11:45:37,953:INFO:              kmodes: Not installed
2024-04-13 11:45:37,953:INFO:             mlxtend: Not installed
2024-04-13 11:45:37,953:INFO:       statsforecast: Not installed
2024-04-13 11:45:37,953:INFO:        tune_sklearn: Not installed
2024-04-13 11:45:37,953:INFO:                 ray: Not installed
2024-04-13 11:45:37,953:INFO:            hyperopt: Not installed
2024-04-13 11:45:37,953:INFO:              optuna: Not installed
2024-04-13 11:45:37,953:INFO:               skopt: Not installed
2024-04-13 11:45:37,953:INFO:              mlflow: 2.11.3
2024-04-13 11:45:37,953:INFO:              gradio: Not installed
2024-04-13 11:45:37,953:INFO:             fastapi: Not installed
2024-04-13 11:45:37,953:INFO:             uvicorn: Not installed
2024-04-13 11:45:37,954:INFO:              m2cgen: Not installed
2024-04-13 11:45:37,954:INFO:           evidently: Not installed
2024-04-13 11:45:37,954:INFO:               fugue: Not installed
2024-04-13 11:45:37,954:INFO:           streamlit: 1.33.0
2024-04-13 11:45:37,954:INFO:             prophet: Not installed
2024-04-13 11:45:37,954:INFO:None
2024-04-13 11:45:37,954:INFO:Set up data.
2024-04-13 11:45:37,960:INFO:Set up folding strategy.
2024-04-13 11:45:37,960:INFO:Set up train/test split.
2024-04-13 11:45:37,960:INFO:Set up data.
2024-04-13 11:45:37,965:INFO:Set up index.
2024-04-13 11:45:37,966:INFO:Assigning column types.
2024-04-13 11:45:37,972:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 11:45:38,044:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:45:38,045:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:45:38,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:45:38,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:45:38,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,208:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 11:45:38,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:45:38,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,399:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:45:38,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,443:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 11:45:38,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:38,694:INFO:Preparing preprocessing pipeline...
2024-04-13 11:45:38,704:INFO:Set up simple imputation.
2024-04-13 11:45:38,704:INFO:Set up feature normalization.
2024-04-13 11:45:38,775:INFO:Finished creating preprocessing pipeline.
2024-04-13 11:45:38,785:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 11:45:38,785:INFO:Creating final display dataframe.
2024-04-13 11:45:38,931:INFO:Setup _display_container:                     Description             Value
0                    Session id              2501
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4dda
2024-04-13 11:45:39,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:39,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:39,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:39,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:45:39,176:INFO:setup() successfully completed in 1.24s...............
2024-04-13 11:45:39,177:INFO:Initializing compare_models()
2024-04-13 11:45:39,178:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 11:45:39,178:INFO:Checking exceptions
2024-04-13 11:45:39,183:INFO:Preparing display monitor
2024-04-13 11:45:39,212:INFO:Initializing Logistic Regression
2024-04-13 11:45:39,212:INFO:Total runtime is 0.0 minutes
2024-04-13 11:45:39,217:INFO:SubProcess create_model() called ==================================
2024-04-13 11:45:39,217:INFO:Initializing create_model()
2024-04-13 11:45:39,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E315281030>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:45:39,217:INFO:Checking exceptions
2024-04-13 11:45:39,218:INFO:Importing libraries
2024-04-13 11:45:39,218:INFO:Copying training dataset
2024-04-13 11:45:39,228:INFO:Defining folds
2024-04-13 11:45:39,228:INFO:Declaring metric variables
2024-04-13 11:45:39,233:INFO:Importing untrained model
2024-04-13 11:45:39,238:INFO:Logistic Regression Imported successfully
2024-04-13 11:45:39,247:INFO:Starting cross validation
2024-04-13 11:45:39,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:45:44,098:INFO:Calculating mean and std
2024-04-13 11:45:44,101:INFO:Creating metrics dataframe
2024-04-13 11:45:44,106:INFO:Uploading results into container
2024-04-13 11:45:44,107:INFO:Uploading model into container now
2024-04-13 11:45:44,108:INFO:_master_model_container: 1
2024-04-13 11:45:44,108:INFO:_display_container: 2
2024-04-13 11:45:44,109:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2501, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:45:44,109:INFO:create_model() successfully completed......................................
2024-04-13 11:45:44,264:INFO:SubProcess create_model() end ==================================
2024-04-13 11:45:44,264:INFO:Creating metrics dataframe
2024-04-13 11:45:44,273:INFO:Initializing Decision Tree Classifier
2024-04-13 11:45:44,273:INFO:Total runtime is 0.0843518098195394 minutes
2024-04-13 11:45:44,278:INFO:SubProcess create_model() called ==================================
2024-04-13 11:45:44,279:INFO:Initializing create_model()
2024-04-13 11:45:44,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E315281030>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:45:44,279:INFO:Checking exceptions
2024-04-13 11:45:44,279:INFO:Importing libraries
2024-04-13 11:45:44,279:INFO:Copying training dataset
2024-04-13 11:45:44,288:INFO:Defining folds
2024-04-13 11:45:44,289:INFO:Declaring metric variables
2024-04-13 11:45:44,293:INFO:Importing untrained model
2024-04-13 11:45:44,298:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:45:44,307:INFO:Starting cross validation
2024-04-13 11:45:44,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:45:47,613:INFO:Calculating mean and std
2024-04-13 11:45:47,616:INFO:Creating metrics dataframe
2024-04-13 11:45:47,619:INFO:Uploading results into container
2024-04-13 11:45:47,621:INFO:Uploading model into container now
2024-04-13 11:45:47,622:INFO:_master_model_container: 2
2024-04-13 11:45:47,622:INFO:_display_container: 2
2024-04-13 11:45:47,623:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2501, splitter='best')
2024-04-13 11:45:47,623:INFO:create_model() successfully completed......................................
2024-04-13 11:45:47,764:INFO:SubProcess create_model() end ==================================
2024-04-13 11:45:47,765:INFO:Creating metrics dataframe
2024-04-13 11:45:47,786:INFO:Initializing create_model()
2024-04-13 11:45:47,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2501, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:45:47,786:INFO:Checking exceptions
2024-04-13 11:45:47,789:INFO:Importing libraries
2024-04-13 11:45:47,789:INFO:Copying training dataset
2024-04-13 11:45:47,798:INFO:Defining folds
2024-04-13 11:45:47,798:INFO:Declaring metric variables
2024-04-13 11:45:47,798:INFO:Importing untrained model
2024-04-13 11:45:47,798:INFO:Declaring custom model
2024-04-13 11:45:47,799:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:45:47,800:INFO:Cross validation set to False
2024-04-13 11:45:47,800:INFO:Fitting Model
2024-04-13 11:45:47,878:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2501, splitter='best')
2024-04-13 11:45:47,878:INFO:create_model() successfully completed......................................
2024-04-13 11:45:48,006:INFO:Initializing create_model()
2024-04-13 11:45:48,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2501, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:45:48,006:INFO:Checking exceptions
2024-04-13 11:45:48,008:INFO:Importing libraries
2024-04-13 11:45:48,009:INFO:Copying training dataset
2024-04-13 11:45:48,017:INFO:Defining folds
2024-04-13 11:45:48,017:INFO:Declaring metric variables
2024-04-13 11:45:48,018:INFO:Importing untrained model
2024-04-13 11:45:48,018:INFO:Declaring custom model
2024-04-13 11:45:48,018:INFO:Logistic Regression Imported successfully
2024-04-13 11:45:48,020:INFO:Cross validation set to False
2024-04-13 11:45:48,020:INFO:Fitting Model
2024-04-13 11:45:48,045:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2501, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:45:48,045:INFO:create_model() successfully completed......................................
2024-04-13 11:45:48,189:INFO:_master_model_container: 2
2024-04-13 11:45:48,190:INFO:_display_container: 2
2024-04-13 11:45:48,191:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2501, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2501, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 11:45:48,191:INFO:compare_models() successfully completed......................................
2024-04-13 11:45:48,192:INFO:Initializing predict_model()
2024-04-13 11:45:48,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319DAEAD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2501, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E34E3EE050>)
2024-04-13 11:45:48,192:INFO:Checking exceptions
2024-04-13 11:45:48,192:INFO:Preloading libraries
2024-04-13 11:46:51,993:INFO:PyCaret ClassificationExperiment
2024-04-13 11:46:51,994:INFO:Logging name: clf-default-name
2024-04-13 11:46:51,994:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 11:46:51,994:INFO:version 3.3.0
2024-04-13 11:46:51,994:INFO:Initializing setup()
2024-04-13 11:46:51,994:INFO:self.USI: b159
2024-04-13 11:46:51,994:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 11:46:51,994:INFO:Checking environment
2024-04-13 11:46:51,994:INFO:python_version: 3.10.14
2024-04-13 11:46:51,994:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 11:46:51,994:INFO:machine: AMD64
2024-04-13 11:46:51,994:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 11:46:51,999:INFO:Memory: svmem(total=17131573248, available=5974433792, percent=65.1, used=11157139456, free=5974433792)
2024-04-13 11:46:51,999:INFO:Physical Core: 8
2024-04-13 11:46:52,000:INFO:Logical Core: 16
2024-04-13 11:46:52,000:INFO:Checking libraries
2024-04-13 11:46:52,000:INFO:System:
2024-04-13 11:46:52,000:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 11:46:52,000:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 11:46:52,000:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 11:46:52,000:INFO:PyCaret required dependencies:
2024-04-13 11:46:52,000:INFO:                 pip: 23.3.1
2024-04-13 11:46:52,000:INFO:          setuptools: 68.2.2
2024-04-13 11:46:52,000:INFO:             pycaret: 3.3.0
2024-04-13 11:46:52,000:INFO:             IPython: 8.23.0
2024-04-13 11:46:52,000:INFO:          ipywidgets: 8.1.2
2024-04-13 11:46:52,000:INFO:                tqdm: 4.66.2
2024-04-13 11:46:52,000:INFO:               numpy: 1.26.4
2024-04-13 11:46:52,001:INFO:              pandas: 2.1.4
2024-04-13 11:46:52,001:INFO:              jinja2: 3.1.3
2024-04-13 11:46:52,001:INFO:               scipy: 1.11.4
2024-04-13 11:46:52,001:INFO:              joblib: 1.3.2
2024-04-13 11:46:52,001:INFO:             sklearn: 1.4.1.post1
2024-04-13 11:46:52,001:INFO:                pyod: 1.1.3
2024-04-13 11:46:52,001:INFO:            imblearn: 0.12.2
2024-04-13 11:46:52,001:INFO:   category_encoders: 2.6.3
2024-04-13 11:46:52,001:INFO:            lightgbm: 4.3.0
2024-04-13 11:46:52,001:INFO:               numba: 0.59.1
2024-04-13 11:46:52,001:INFO:            requests: 2.31.0
2024-04-13 11:46:52,001:INFO:          matplotlib: 3.7.5
2024-04-13 11:46:52,001:INFO:          scikitplot: 0.3.7
2024-04-13 11:46:52,001:INFO:         yellowbrick: 1.5
2024-04-13 11:46:52,001:INFO:              plotly: 5.20.0
2024-04-13 11:46:52,002:INFO:    plotly-resampler: Not installed
2024-04-13 11:46:52,002:INFO:             kaleido: 0.2.1
2024-04-13 11:46:52,002:INFO:           schemdraw: 0.15
2024-04-13 11:46:52,002:INFO:         statsmodels: 0.14.1
2024-04-13 11:46:52,002:INFO:              sktime: 0.28.0
2024-04-13 11:46:52,002:INFO:               tbats: 1.1.3
2024-04-13 11:46:52,002:INFO:            pmdarima: 2.0.4
2024-04-13 11:46:52,002:INFO:              psutil: 5.9.8
2024-04-13 11:46:52,002:INFO:          markupsafe: 2.1.5
2024-04-13 11:46:52,002:INFO:             pickle5: Not installed
2024-04-13 11:46:52,002:INFO:         cloudpickle: 3.0.0
2024-04-13 11:46:52,002:INFO:         deprecation: 2.1.0
2024-04-13 11:46:52,002:INFO:              xxhash: 3.4.1
2024-04-13 11:46:52,002:INFO:           wurlitzer: 3.0.3
2024-04-13 11:46:52,003:INFO:PyCaret optional dependencies:
2024-04-13 11:46:52,003:INFO:                shap: Not installed
2024-04-13 11:46:52,003:INFO:           interpret: Not installed
2024-04-13 11:46:52,003:INFO:                umap: Not installed
2024-04-13 11:46:52,003:INFO:     ydata_profiling: Not installed
2024-04-13 11:46:52,003:INFO:  explainerdashboard: Not installed
2024-04-13 11:46:52,003:INFO:             autoviz: Not installed
2024-04-13 11:46:52,003:INFO:           fairlearn: Not installed
2024-04-13 11:46:52,003:INFO:          deepchecks: Not installed
2024-04-13 11:46:52,003:INFO:             xgboost: Not installed
2024-04-13 11:46:52,003:INFO:            catboost: Not installed
2024-04-13 11:46:52,003:INFO:              kmodes: Not installed
2024-04-13 11:46:52,003:INFO:             mlxtend: Not installed
2024-04-13 11:46:52,003:INFO:       statsforecast: Not installed
2024-04-13 11:46:52,004:INFO:        tune_sklearn: Not installed
2024-04-13 11:46:52,004:INFO:                 ray: Not installed
2024-04-13 11:46:52,004:INFO:            hyperopt: Not installed
2024-04-13 11:46:52,004:INFO:              optuna: Not installed
2024-04-13 11:46:52,004:INFO:               skopt: Not installed
2024-04-13 11:46:52,004:INFO:              mlflow: 2.11.3
2024-04-13 11:46:52,004:INFO:              gradio: Not installed
2024-04-13 11:46:52,004:INFO:             fastapi: Not installed
2024-04-13 11:46:52,004:INFO:             uvicorn: Not installed
2024-04-13 11:46:52,004:INFO:              m2cgen: Not installed
2024-04-13 11:46:52,004:INFO:           evidently: Not installed
2024-04-13 11:46:52,004:INFO:               fugue: Not installed
2024-04-13 11:46:52,004:INFO:           streamlit: 1.33.0
2024-04-13 11:46:52,004:INFO:             prophet: Not installed
2024-04-13 11:46:52,004:INFO:None
2024-04-13 11:46:52,005:INFO:Set up data.
2024-04-13 11:46:52,010:INFO:Set up folding strategy.
2024-04-13 11:46:52,010:INFO:Set up train/test split.
2024-04-13 11:46:52,010:INFO:Set up data.
2024-04-13 11:46:52,015:INFO:Set up index.
2024-04-13 11:46:52,016:INFO:Assigning column types.
2024-04-13 11:46:52,021:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 11:46:52,091:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:46:52,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:46:52,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 11:46:52,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:46:52,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,252:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 11:46:52,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:46:52,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 11:46:52,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,482:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 11:46:52,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:52,712:INFO:Preparing preprocessing pipeline...
2024-04-13 11:46:52,714:INFO:Set up simple imputation.
2024-04-13 11:46:52,714:INFO:Set up feature normalization.
2024-04-13 11:46:52,754:INFO:Finished creating preprocessing pipeline.
2024-04-13 11:46:52,761:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 11:46:52,761:INFO:Creating final display dataframe.
2024-04-13 11:46:52,895:INFO:Setup _display_container:                     Description             Value
0                    Session id              7679
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b159
2024-04-13 11:46:53,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:53,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:53,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:53,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 11:46:53,134:INFO:setup() successfully completed in 1.14s...............
2024-04-13 11:46:53,136:INFO:Initializing compare_models()
2024-04-13 11:46:53,136:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 11:46:53,136:INFO:Checking exceptions
2024-04-13 11:46:53,142:INFO:Preparing display monitor
2024-04-13 11:46:53,170:INFO:Initializing Logistic Regression
2024-04-13 11:46:53,170:INFO:Total runtime is 0.0 minutes
2024-04-13 11:46:53,182:INFO:SubProcess create_model() called ==================================
2024-04-13 11:46:53,183:INFO:Initializing create_model()
2024-04-13 11:46:53,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E318DE05E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:46:53,184:INFO:Checking exceptions
2024-04-13 11:46:53,184:INFO:Importing libraries
2024-04-13 11:46:53,184:INFO:Copying training dataset
2024-04-13 11:46:53,197:INFO:Defining folds
2024-04-13 11:46:53,197:INFO:Declaring metric variables
2024-04-13 11:46:53,202:INFO:Importing untrained model
2024-04-13 11:46:53,208:INFO:Logistic Regression Imported successfully
2024-04-13 11:46:53,218:INFO:Starting cross validation
2024-04-13 11:46:53,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:46:57,950:INFO:Calculating mean and std
2024-04-13 11:46:57,954:INFO:Creating metrics dataframe
2024-04-13 11:46:57,957:INFO:Uploading results into container
2024-04-13 11:46:57,958:INFO:Uploading model into container now
2024-04-13 11:46:57,959:INFO:_master_model_container: 1
2024-04-13 11:46:57,959:INFO:_display_container: 2
2024-04-13 11:46:57,960:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:46:57,961:INFO:create_model() successfully completed......................................
2024-04-13 11:46:58,097:INFO:SubProcess create_model() end ==================================
2024-04-13 11:46:58,097:INFO:Creating metrics dataframe
2024-04-13 11:46:58,107:INFO:Initializing Decision Tree Classifier
2024-04-13 11:46:58,107:INFO:Total runtime is 0.08227473497390747 minutes
2024-04-13 11:46:58,111:INFO:SubProcess create_model() called ==================================
2024-04-13 11:46:58,112:INFO:Initializing create_model()
2024-04-13 11:46:58,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E318DE05E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:46:58,112:INFO:Checking exceptions
2024-04-13 11:46:58,112:INFO:Importing libraries
2024-04-13 11:46:58,112:INFO:Copying training dataset
2024-04-13 11:46:58,122:INFO:Defining folds
2024-04-13 11:46:58,122:INFO:Declaring metric variables
2024-04-13 11:46:58,126:INFO:Importing untrained model
2024-04-13 11:46:58,131:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:46:58,140:INFO:Starting cross validation
2024-04-13 11:46:58,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 11:47:01,402:INFO:Calculating mean and std
2024-04-13 11:47:01,407:INFO:Creating metrics dataframe
2024-04-13 11:47:01,410:INFO:Uploading results into container
2024-04-13 11:47:01,412:INFO:Uploading model into container now
2024-04-13 11:47:01,412:INFO:_master_model_container: 2
2024-04-13 11:47:01,413:INFO:_display_container: 2
2024-04-13 11:47:01,413:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best')
2024-04-13 11:47:01,413:INFO:create_model() successfully completed......................................
2024-04-13 11:47:01,555:INFO:SubProcess create_model() end ==================================
2024-04-13 11:47:01,555:INFO:Creating metrics dataframe
2024-04-13 11:47:01,576:INFO:Initializing create_model()
2024-04-13 11:47:01,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:47:01,576:INFO:Checking exceptions
2024-04-13 11:47:01,578:INFO:Importing libraries
2024-04-13 11:47:01,579:INFO:Copying training dataset
2024-04-13 11:47:01,587:INFO:Defining folds
2024-04-13 11:47:01,588:INFO:Declaring metric variables
2024-04-13 11:47:01,588:INFO:Importing untrained model
2024-04-13 11:47:01,588:INFO:Declaring custom model
2024-04-13 11:47:01,589:INFO:Decision Tree Classifier Imported successfully
2024-04-13 11:47:01,590:INFO:Cross validation set to False
2024-04-13 11:47:01,590:INFO:Fitting Model
2024-04-13 11:47:01,666:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best')
2024-04-13 11:47:01,666:INFO:create_model() successfully completed......................................
2024-04-13 11:47:01,791:INFO:Initializing create_model()
2024-04-13 11:47:01,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 11:47:01,791:INFO:Checking exceptions
2024-04-13 11:47:01,794:INFO:Importing libraries
2024-04-13 11:47:01,794:INFO:Copying training dataset
2024-04-13 11:47:01,802:INFO:Defining folds
2024-04-13 11:47:01,802:INFO:Declaring metric variables
2024-04-13 11:47:01,802:INFO:Importing untrained model
2024-04-13 11:47:01,802:INFO:Declaring custom model
2024-04-13 11:47:01,803:INFO:Logistic Regression Imported successfully
2024-04-13 11:47:01,804:INFO:Cross validation set to False
2024-04-13 11:47:01,804:INFO:Fitting Model
2024-04-13 11:47:01,828:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 11:47:01,828:INFO:create_model() successfully completed......................................
2024-04-13 11:47:01,964:INFO:_master_model_container: 2
2024-04-13 11:47:01,964:INFO:_display_container: 2
2024-04-13 11:47:01,965:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 11:47:01,965:INFO:compare_models() successfully completed......................................
2024-04-13 11:47:01,966:INFO:Initializing predict_model()
2024-04-13 11:47:01,966:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E314A1FF40>)
2024-04-13 11:47:01,966:INFO:Checking exceptions
2024-04-13 11:47:01,966:INFO:Preloading libraries
2024-04-13 11:56:02,719:INFO:Initializing predict_model()
2024-04-13 11:56:02,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E319583AC0>)
2024-04-13 11:56:02,720:INFO:Checking exceptions
2024-04-13 11:56:02,720:INFO:Preloading libraries
2024-04-13 12:23:00,840:INFO:Initializing plot_model()
2024-04-13 12:23:00,840:INFO:plot_model(plot=vc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, system=True)
2024-04-13 12:23:00,840:INFO:Checking exceptions
2024-04-13 12:23:00,847:INFO:Preloading libraries
2024-04-13 12:23:00,849:INFO:Copying training dataset
2024-04-13 12:23:00,849:INFO:Plot type: vc
2024-04-13 12:23:00,850:INFO:Determining param_name
2024-04-13 12:23:00,850:INFO:param_name: max_depth
2024-04-13 12:23:00,998:INFO:Fitting Model
2024-04-13 12:23:05,146:INFO:Saving 'Validation Curve.png'
2024-04-13 12:23:05,477:INFO:Visual Rendered Successfully
2024-04-13 12:23:05,600:INFO:plot_model() successfully completed......................................
2024-04-13 12:23:16,485:INFO:Initializing plot_model()
2024-04-13 12:23:16,485:INFO:plot_model(plot=vc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, system=True)
2024-04-13 12:23:16,486:INFO:Checking exceptions
2024-04-13 12:23:16,492:INFO:Preloading libraries
2024-04-13 12:23:16,493:INFO:Copying training dataset
2024-04-13 12:23:16,493:INFO:Plot type: vc
2024-04-13 12:23:16,493:INFO:Determining param_name
2024-04-13 12:23:16,493:INFO:param_name: max_depth
2024-04-13 12:23:16,647:INFO:Fitting Model
2024-04-13 12:23:17,236:INFO:Saving 'Validation Curve.png'
2024-04-13 12:23:17,533:INFO:Visual Rendered Successfully
2024-04-13 12:23:17,653:INFO:plot_model() successfully completed......................................
2024-04-13 12:23:29,434:INFO:Initializing plot_model()
2024-04-13 12:23:29,435:INFO:plot_model(plot=vc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7679, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314A40E20>, system=True)
2024-04-13 12:23:29,435:INFO:Checking exceptions
2024-04-13 12:23:29,442:INFO:Preloading libraries
2024-04-13 12:23:29,443:INFO:Copying training dataset
2024-04-13 12:23:29,443:INFO:Plot type: vc
2024-04-13 12:23:29,443:INFO:Determining param_name
2024-04-13 12:23:29,443:INFO:param_name: max_depth
2024-04-13 12:23:29,587:INFO:Fitting Model
2024-04-13 12:23:30,190:INFO:Saving 'Validation Curve.png'
2024-04-13 12:23:30,490:INFO:Visual Rendered Successfully
2024-04-13 12:23:30,613:INFO:plot_model() successfully completed......................................
2024-04-13 12:27:02,785:INFO:PyCaret ClassificationExperiment
2024-04-13 12:27:02,785:INFO:Logging name: clf-default-name
2024-04-13 12:27:02,785:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 12:27:02,785:INFO:version 3.3.0
2024-04-13 12:27:02,786:INFO:Initializing setup()
2024-04-13 12:27:02,786:INFO:self.USI: 4fe5
2024-04-13 12:27:02,786:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 12:27:02,786:INFO:Checking environment
2024-04-13 12:27:02,786:INFO:python_version: 3.10.14
2024-04-13 12:27:02,786:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 12:27:02,786:INFO:machine: AMD64
2024-04-13 12:27:02,786:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 12:27:02,791:INFO:Memory: svmem(total=17131573248, available=3679367168, percent=78.5, used=13452206080, free=3679367168)
2024-04-13 12:27:02,791:INFO:Physical Core: 8
2024-04-13 12:27:02,791:INFO:Logical Core: 16
2024-04-13 12:27:02,791:INFO:Checking libraries
2024-04-13 12:27:02,792:INFO:System:
2024-04-13 12:27:02,792:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 12:27:02,792:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 12:27:02,792:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 12:27:02,792:INFO:PyCaret required dependencies:
2024-04-13 12:27:02,792:INFO:                 pip: 23.3.1
2024-04-13 12:27:02,792:INFO:          setuptools: 68.2.2
2024-04-13 12:27:02,792:INFO:             pycaret: 3.3.0
2024-04-13 12:27:02,792:INFO:             IPython: 8.23.0
2024-04-13 12:27:02,792:INFO:          ipywidgets: 8.1.2
2024-04-13 12:27:02,792:INFO:                tqdm: 4.66.2
2024-04-13 12:27:02,792:INFO:               numpy: 1.26.4
2024-04-13 12:27:02,793:INFO:              pandas: 2.1.4
2024-04-13 12:27:02,793:INFO:              jinja2: 3.1.3
2024-04-13 12:27:02,793:INFO:               scipy: 1.11.4
2024-04-13 12:27:02,793:INFO:              joblib: 1.3.2
2024-04-13 12:27:02,793:INFO:             sklearn: 1.4.1.post1
2024-04-13 12:27:02,793:INFO:                pyod: 1.1.3
2024-04-13 12:27:02,793:INFO:            imblearn: 0.12.2
2024-04-13 12:27:02,793:INFO:   category_encoders: 2.6.3
2024-04-13 12:27:02,793:INFO:            lightgbm: 4.3.0
2024-04-13 12:27:02,793:INFO:               numba: 0.59.1
2024-04-13 12:27:02,793:INFO:            requests: 2.31.0
2024-04-13 12:27:02,793:INFO:          matplotlib: 3.7.5
2024-04-13 12:27:02,793:INFO:          scikitplot: 0.3.7
2024-04-13 12:27:02,793:INFO:         yellowbrick: 1.5
2024-04-13 12:27:02,793:INFO:              plotly: 5.20.0
2024-04-13 12:27:02,794:INFO:    plotly-resampler: Not installed
2024-04-13 12:27:02,794:INFO:             kaleido: 0.2.1
2024-04-13 12:27:02,794:INFO:           schemdraw: 0.15
2024-04-13 12:27:02,794:INFO:         statsmodels: 0.14.1
2024-04-13 12:27:02,794:INFO:              sktime: 0.28.0
2024-04-13 12:27:02,794:INFO:               tbats: 1.1.3
2024-04-13 12:27:02,794:INFO:            pmdarima: 2.0.4
2024-04-13 12:27:02,794:INFO:              psutil: 5.9.8
2024-04-13 12:27:02,794:INFO:          markupsafe: 2.1.5
2024-04-13 12:27:02,794:INFO:             pickle5: Not installed
2024-04-13 12:27:02,794:INFO:         cloudpickle: 3.0.0
2024-04-13 12:27:02,794:INFO:         deprecation: 2.1.0
2024-04-13 12:27:02,794:INFO:              xxhash: 3.4.1
2024-04-13 12:27:02,794:INFO:           wurlitzer: 3.0.3
2024-04-13 12:27:02,794:INFO:PyCaret optional dependencies:
2024-04-13 12:27:02,795:INFO:                shap: Not installed
2024-04-13 12:27:02,795:INFO:           interpret: Not installed
2024-04-13 12:27:02,795:INFO:                umap: Not installed
2024-04-13 12:27:02,795:INFO:     ydata_profiling: Not installed
2024-04-13 12:27:02,795:INFO:  explainerdashboard: Not installed
2024-04-13 12:27:02,795:INFO:             autoviz: Not installed
2024-04-13 12:27:02,795:INFO:           fairlearn: Not installed
2024-04-13 12:27:02,795:INFO:          deepchecks: Not installed
2024-04-13 12:27:02,795:INFO:             xgboost: Not installed
2024-04-13 12:27:02,795:INFO:            catboost: Not installed
2024-04-13 12:27:02,795:INFO:              kmodes: Not installed
2024-04-13 12:27:02,795:INFO:             mlxtend: Not installed
2024-04-13 12:27:02,795:INFO:       statsforecast: Not installed
2024-04-13 12:27:02,795:INFO:        tune_sklearn: Not installed
2024-04-13 12:27:02,795:INFO:                 ray: Not installed
2024-04-13 12:27:02,796:INFO:            hyperopt: Not installed
2024-04-13 12:27:02,796:INFO:              optuna: Not installed
2024-04-13 12:27:02,796:INFO:               skopt: Not installed
2024-04-13 12:27:02,796:INFO:              mlflow: 2.11.3
2024-04-13 12:27:02,796:INFO:              gradio: Not installed
2024-04-13 12:27:02,796:INFO:             fastapi: Not installed
2024-04-13 12:27:02,796:INFO:             uvicorn: Not installed
2024-04-13 12:27:02,796:INFO:              m2cgen: Not installed
2024-04-13 12:27:02,796:INFO:           evidently: Not installed
2024-04-13 12:27:02,796:INFO:               fugue: Not installed
2024-04-13 12:27:02,796:INFO:           streamlit: 1.33.0
2024-04-13 12:27:02,796:INFO:             prophet: Not installed
2024-04-13 12:27:02,796:INFO:None
2024-04-13 12:27:02,796:INFO:Set up data.
2024-04-13 12:27:02,802:INFO:Set up folding strategy.
2024-04-13 12:27:02,802:INFO:Set up train/test split.
2024-04-13 12:27:02,803:INFO:Set up data.
2024-04-13 12:27:02,808:INFO:Set up index.
2024-04-13 12:27:02,808:INFO:Assigning column types.
2024-04-13 12:27:02,814:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 12:27:02,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:27:02,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:27:02,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:02,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:27:03,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:27:03,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,047:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 12:27:03,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:27:03,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:27:03,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,277:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 12:27:03,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,509:INFO:Preparing preprocessing pipeline...
2024-04-13 12:27:03,510:INFO:Set up simple imputation.
2024-04-13 12:27:03,511:INFO:Set up feature normalization.
2024-04-13 12:27:03,551:INFO:Finished creating preprocessing pipeline.
2024-04-13 12:27:03,558:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 12:27:03,558:INFO:Creating final display dataframe.
2024-04-13 12:27:03,694:INFO:Setup _display_container:                     Description             Value
0                    Session id              3852
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4fe5
2024-04-13 12:27:03,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:27:03,935:INFO:setup() successfully completed in 1.15s...............
2024-04-13 12:27:03,937:INFO:Initializing compare_models()
2024-04-13 12:27:03,937:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 12:27:03,937:INFO:Checking exceptions
2024-04-13 12:27:03,943:INFO:Preparing display monitor
2024-04-13 12:27:03,972:INFO:Initializing Logistic Regression
2024-04-13 12:27:03,972:INFO:Total runtime is 0.0 minutes
2024-04-13 12:27:03,977:INFO:SubProcess create_model() called ==================================
2024-04-13 12:27:03,977:INFO:Initializing create_model()
2024-04-13 12:27:03,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31991C880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:27:03,977:INFO:Checking exceptions
2024-04-13 12:27:03,978:INFO:Importing libraries
2024-04-13 12:27:03,978:INFO:Copying training dataset
2024-04-13 12:27:03,989:INFO:Defining folds
2024-04-13 12:27:03,989:INFO:Declaring metric variables
2024-04-13 12:27:03,993:INFO:Importing untrained model
2024-04-13 12:27:03,999:INFO:Logistic Regression Imported successfully
2024-04-13 12:27:04,008:INFO:Starting cross validation
2024-04-13 12:27:04,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:27:06,107:INFO:Calculating mean and std
2024-04-13 12:27:06,109:INFO:Creating metrics dataframe
2024-04-13 12:27:06,111:INFO:Uploading results into container
2024-04-13 12:27:06,112:INFO:Uploading model into container now
2024-04-13 12:27:06,113:INFO:_master_model_container: 1
2024-04-13 12:27:06,113:INFO:_display_container: 2
2024-04-13 12:27:06,114:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3852, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:27:06,114:INFO:create_model() successfully completed......................................
2024-04-13 12:27:06,241:INFO:SubProcess create_model() end ==================================
2024-04-13 12:27:06,241:INFO:Creating metrics dataframe
2024-04-13 12:27:06,250:INFO:Initializing Decision Tree Classifier
2024-04-13 12:27:06,250:INFO:Total runtime is 0.03797632853190104 minutes
2024-04-13 12:27:06,255:INFO:SubProcess create_model() called ==================================
2024-04-13 12:27:06,255:INFO:Initializing create_model()
2024-04-13 12:27:06,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31991C880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:27:06,255:INFO:Checking exceptions
2024-04-13 12:27:06,256:INFO:Importing libraries
2024-04-13 12:27:06,256:INFO:Copying training dataset
2024-04-13 12:27:06,265:INFO:Defining folds
2024-04-13 12:27:06,265:INFO:Declaring metric variables
2024-04-13 12:27:06,270:INFO:Importing untrained model
2024-04-13 12:27:06,275:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:27:06,284:INFO:Starting cross validation
2024-04-13 12:27:06,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:27:07,983:INFO:Calculating mean and std
2024-04-13 12:27:07,985:INFO:Creating metrics dataframe
2024-04-13 12:27:07,987:INFO:Uploading results into container
2024-04-13 12:27:07,988:INFO:Uploading model into container now
2024-04-13 12:27:07,988:INFO:_master_model_container: 2
2024-04-13 12:27:07,989:INFO:_display_container: 2
2024-04-13 12:27:07,989:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3852, splitter='best')
2024-04-13 12:27:07,989:INFO:create_model() successfully completed......................................
2024-04-13 12:27:08,110:INFO:SubProcess create_model() end ==================================
2024-04-13 12:27:08,110:INFO:Creating metrics dataframe
2024-04-13 12:27:08,131:INFO:Initializing create_model()
2024-04-13 12:27:08,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3852, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:27:08,132:INFO:Checking exceptions
2024-04-13 12:27:08,134:INFO:Importing libraries
2024-04-13 12:27:08,135:INFO:Copying training dataset
2024-04-13 12:27:08,143:INFO:Defining folds
2024-04-13 12:27:08,143:INFO:Declaring metric variables
2024-04-13 12:27:08,144:INFO:Importing untrained model
2024-04-13 12:27:08,144:INFO:Declaring custom model
2024-04-13 12:27:08,144:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:27:08,145:INFO:Cross validation set to False
2024-04-13 12:27:08,146:INFO:Fitting Model
2024-04-13 12:27:08,224:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3852, splitter='best')
2024-04-13 12:27:08,224:INFO:create_model() successfully completed......................................
2024-04-13 12:27:08,352:INFO:Initializing create_model()
2024-04-13 12:27:08,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3852, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:27:08,353:INFO:Checking exceptions
2024-04-13 12:27:08,355:INFO:Importing libraries
2024-04-13 12:27:08,355:INFO:Copying training dataset
2024-04-13 12:27:08,363:INFO:Defining folds
2024-04-13 12:27:08,363:INFO:Declaring metric variables
2024-04-13 12:27:08,364:INFO:Importing untrained model
2024-04-13 12:27:08,364:INFO:Declaring custom model
2024-04-13 12:27:08,365:INFO:Logistic Regression Imported successfully
2024-04-13 12:27:08,366:INFO:Cross validation set to False
2024-04-13 12:27:08,366:INFO:Fitting Model
2024-04-13 12:27:08,391:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3852, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:27:08,391:INFO:create_model() successfully completed......................................
2024-04-13 12:27:08,530:INFO:_master_model_container: 2
2024-04-13 12:27:08,530:INFO:_display_container: 2
2024-04-13 12:27:08,531:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3852, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3852, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 12:27:08,531:INFO:compare_models() successfully completed......................................
2024-04-13 12:27:08,532:INFO:Initializing plot_model()
2024-04-13 12:27:08,533:INFO:plot_model(plot=vc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3852, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, system=True)
2024-04-13 12:27:08,533:INFO:Checking exceptions
2024-04-13 12:27:08,539:INFO:Preloading libraries
2024-04-13 12:27:08,540:INFO:Copying training dataset
2024-04-13 12:27:08,540:INFO:Plot type: vc
2024-04-13 12:27:08,540:INFO:Determining param_name
2024-04-13 12:27:08,541:INFO:param_name: max_depth
2024-04-13 12:27:08,673:INFO:Fitting Model
2024-04-13 12:27:09,287:INFO:Saving 'Validation Curve.png'
2024-04-13 12:27:09,590:INFO:Visual Rendered Successfully
2024-04-13 12:27:09,716:INFO:plot_model() successfully completed......................................
2024-04-13 12:27:09,717:INFO:Initializing predict_model()
2024-04-13 12:27:09,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319FB6890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3852, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31497A320>)
2024-04-13 12:27:09,717:INFO:Checking exceptions
2024-04-13 12:27:09,717:INFO:Preloading libraries
2024-04-13 12:32:41,075:INFO:PyCaret ClassificationExperiment
2024-04-13 12:32:41,076:INFO:Logging name: clf-default-name
2024-04-13 12:32:41,076:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 12:32:41,076:INFO:version 3.3.0
2024-04-13 12:32:41,076:INFO:Initializing setup()
2024-04-13 12:32:41,076:INFO:self.USI: 6ed4
2024-04-13 12:32:41,076:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 12:32:41,076:INFO:Checking environment
2024-04-13 12:32:41,076:INFO:python_version: 3.10.14
2024-04-13 12:32:41,076:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 12:32:41,076:INFO:machine: AMD64
2024-04-13 12:32:41,076:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 12:32:41,083:INFO:Memory: svmem(total=17131573248, available=5035675648, percent=70.6, used=12095897600, free=5035675648)
2024-04-13 12:32:41,083:INFO:Physical Core: 8
2024-04-13 12:32:41,083:INFO:Logical Core: 16
2024-04-13 12:32:41,083:INFO:Checking libraries
2024-04-13 12:32:41,083:INFO:System:
2024-04-13 12:32:41,083:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 12:32:41,083:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 12:32:41,084:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 12:32:41,084:INFO:PyCaret required dependencies:
2024-04-13 12:32:41,084:INFO:                 pip: 23.3.1
2024-04-13 12:32:41,084:INFO:          setuptools: 68.2.2
2024-04-13 12:32:41,084:INFO:             pycaret: 3.3.0
2024-04-13 12:32:41,084:INFO:             IPython: 8.23.0
2024-04-13 12:32:41,084:INFO:          ipywidgets: 8.1.2
2024-04-13 12:32:41,084:INFO:                tqdm: 4.66.2
2024-04-13 12:32:41,084:INFO:               numpy: 1.26.4
2024-04-13 12:32:41,084:INFO:              pandas: 2.1.4
2024-04-13 12:32:41,084:INFO:              jinja2: 3.1.3
2024-04-13 12:32:41,084:INFO:               scipy: 1.11.4
2024-04-13 12:32:41,084:INFO:              joblib: 1.3.2
2024-04-13 12:32:41,085:INFO:             sklearn: 1.4.1.post1
2024-04-13 12:32:41,085:INFO:                pyod: 1.1.3
2024-04-13 12:32:41,085:INFO:            imblearn: 0.12.2
2024-04-13 12:32:41,085:INFO:   category_encoders: 2.6.3
2024-04-13 12:32:41,085:INFO:            lightgbm: 4.3.0
2024-04-13 12:32:41,085:INFO:               numba: 0.59.1
2024-04-13 12:32:41,085:INFO:            requests: 2.31.0
2024-04-13 12:32:41,085:INFO:          matplotlib: 3.7.5
2024-04-13 12:32:41,085:INFO:          scikitplot: 0.3.7
2024-04-13 12:32:41,085:INFO:         yellowbrick: 1.5
2024-04-13 12:32:41,085:INFO:              plotly: 5.20.0
2024-04-13 12:32:41,085:INFO:    plotly-resampler: Not installed
2024-04-13 12:32:41,085:INFO:             kaleido: 0.2.1
2024-04-13 12:32:41,085:INFO:           schemdraw: 0.15
2024-04-13 12:32:41,086:INFO:         statsmodels: 0.14.1
2024-04-13 12:32:41,086:INFO:              sktime: 0.28.0
2024-04-13 12:32:41,086:INFO:               tbats: 1.1.3
2024-04-13 12:32:41,086:INFO:            pmdarima: 2.0.4
2024-04-13 12:32:41,086:INFO:              psutil: 5.9.8
2024-04-13 12:32:41,086:INFO:          markupsafe: 2.1.5
2024-04-13 12:32:41,086:INFO:             pickle5: Not installed
2024-04-13 12:32:41,086:INFO:         cloudpickle: 3.0.0
2024-04-13 12:32:41,086:INFO:         deprecation: 2.1.0
2024-04-13 12:32:41,086:INFO:              xxhash: 3.4.1
2024-04-13 12:32:41,086:INFO:           wurlitzer: 3.0.3
2024-04-13 12:32:41,086:INFO:PyCaret optional dependencies:
2024-04-13 12:32:41,086:INFO:                shap: Not installed
2024-04-13 12:32:41,087:INFO:           interpret: Not installed
2024-04-13 12:32:41,087:INFO:                umap: Not installed
2024-04-13 12:32:41,087:INFO:     ydata_profiling: Not installed
2024-04-13 12:32:41,087:INFO:  explainerdashboard: Not installed
2024-04-13 12:32:41,087:INFO:             autoviz: Not installed
2024-04-13 12:32:41,087:INFO:           fairlearn: Not installed
2024-04-13 12:32:41,087:INFO:          deepchecks: Not installed
2024-04-13 12:32:41,087:INFO:             xgboost: Not installed
2024-04-13 12:32:41,087:INFO:            catboost: Not installed
2024-04-13 12:32:41,087:INFO:              kmodes: Not installed
2024-04-13 12:32:41,087:INFO:             mlxtend: Not installed
2024-04-13 12:32:41,087:INFO:       statsforecast: Not installed
2024-04-13 12:32:41,087:INFO:        tune_sklearn: Not installed
2024-04-13 12:32:41,087:INFO:                 ray: Not installed
2024-04-13 12:32:41,087:INFO:            hyperopt: Not installed
2024-04-13 12:32:41,088:INFO:              optuna: Not installed
2024-04-13 12:32:41,088:INFO:               skopt: Not installed
2024-04-13 12:32:41,088:INFO:              mlflow: 2.11.3
2024-04-13 12:32:41,088:INFO:              gradio: Not installed
2024-04-13 12:32:41,088:INFO:             fastapi: Not installed
2024-04-13 12:32:41,088:INFO:             uvicorn: Not installed
2024-04-13 12:32:41,088:INFO:              m2cgen: Not installed
2024-04-13 12:32:41,088:INFO:           evidently: Not installed
2024-04-13 12:32:41,088:INFO:               fugue: Not installed
2024-04-13 12:32:41,088:INFO:           streamlit: 1.33.0
2024-04-13 12:32:41,088:INFO:             prophet: Not installed
2024-04-13 12:32:41,088:INFO:None
2024-04-13 12:32:41,088:INFO:Set up data.
2024-04-13 12:32:41,096:INFO:Set up folding strategy.
2024-04-13 12:32:41,096:INFO:Set up train/test split.
2024-04-13 12:32:41,096:INFO:Set up data.
2024-04-13 12:32:41,102:INFO:Set up index.
2024-04-13 12:32:41,103:INFO:Assigning column types.
2024-04-13 12:32:41,109:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 12:32:41,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:32:41,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:32:41,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:32:41,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:32:41,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,342:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 12:32:41,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:32:41,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,455:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,526:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:32:41,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,569:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 12:32:41,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:41,799:INFO:Preparing preprocessing pipeline...
2024-04-13 12:32:41,800:INFO:Set up simple imputation.
2024-04-13 12:32:41,800:INFO:Set up feature normalization.
2024-04-13 12:32:41,839:INFO:Finished creating preprocessing pipeline.
2024-04-13 12:32:41,846:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 12:32:41,846:INFO:Creating final display dataframe.
2024-04-13 12:32:41,978:INFO:Setup _display_container:                     Description             Value
0                    Session id              5187
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6ed4
2024-04-13 12:32:42,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:42,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:42,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:42,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:32:42,218:INFO:setup() successfully completed in 1.15s...............
2024-04-13 12:32:42,219:INFO:Initializing compare_models()
2024-04-13 12:32:42,219:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 12:32:42,219:INFO:Checking exceptions
2024-04-13 12:32:42,225:INFO:Preparing display monitor
2024-04-13 12:32:42,253:INFO:Initializing Logistic Regression
2024-04-13 12:32:42,253:INFO:Total runtime is 0.0 minutes
2024-04-13 12:32:42,257:INFO:SubProcess create_model() called ==================================
2024-04-13 12:32:42,258:INFO:Initializing create_model()
2024-04-13 12:32:42,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FB5F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:32:42,258:INFO:Checking exceptions
2024-04-13 12:32:42,258:INFO:Importing libraries
2024-04-13 12:32:42,258:INFO:Copying training dataset
2024-04-13 12:32:42,270:INFO:Defining folds
2024-04-13 12:32:42,270:INFO:Declaring metric variables
2024-04-13 12:32:42,275:INFO:Importing untrained model
2024-04-13 12:32:42,279:INFO:Logistic Regression Imported successfully
2024-04-13 12:32:42,289:INFO:Starting cross validation
2024-04-13 12:32:42,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:32:47,022:INFO:Calculating mean and std
2024-04-13 12:32:47,025:INFO:Creating metrics dataframe
2024-04-13 12:32:47,031:INFO:Uploading results into container
2024-04-13 12:32:47,032:INFO:Uploading model into container now
2024-04-13 12:32:47,033:INFO:_master_model_container: 1
2024-04-13 12:32:47,033:INFO:_display_container: 2
2024-04-13 12:32:47,034:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5187, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:32:47,034:INFO:create_model() successfully completed......................................
2024-04-13 12:32:47,175:INFO:SubProcess create_model() end ==================================
2024-04-13 12:32:47,176:INFO:Creating metrics dataframe
2024-04-13 12:32:47,184:INFO:Initializing Decision Tree Classifier
2024-04-13 12:32:47,185:INFO:Total runtime is 0.08219980796178182 minutes
2024-04-13 12:32:47,189:INFO:SubProcess create_model() called ==================================
2024-04-13 12:32:47,190:INFO:Initializing create_model()
2024-04-13 12:32:47,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FB5F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:32:47,190:INFO:Checking exceptions
2024-04-13 12:32:47,190:INFO:Importing libraries
2024-04-13 12:32:47,190:INFO:Copying training dataset
2024-04-13 12:32:47,200:INFO:Defining folds
2024-04-13 12:32:47,200:INFO:Declaring metric variables
2024-04-13 12:32:47,205:INFO:Importing untrained model
2024-04-13 12:32:47,210:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:32:47,219:INFO:Starting cross validation
2024-04-13 12:32:47,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:32:50,582:INFO:Calculating mean and std
2024-04-13 12:32:50,584:INFO:Creating metrics dataframe
2024-04-13 12:32:50,588:INFO:Uploading results into container
2024-04-13 12:32:50,589:INFO:Uploading model into container now
2024-04-13 12:32:50,590:INFO:_master_model_container: 2
2024-04-13 12:32:50,590:INFO:_display_container: 2
2024-04-13 12:32:50,591:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5187, splitter='best')
2024-04-13 12:32:50,591:INFO:create_model() successfully completed......................................
2024-04-13 12:32:50,730:INFO:SubProcess create_model() end ==================================
2024-04-13 12:32:50,730:INFO:Creating metrics dataframe
2024-04-13 12:32:50,751:INFO:Initializing create_model()
2024-04-13 12:32:50,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5187, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:32:50,751:INFO:Checking exceptions
2024-04-13 12:32:50,754:INFO:Importing libraries
2024-04-13 12:32:50,754:INFO:Copying training dataset
2024-04-13 12:32:50,763:INFO:Defining folds
2024-04-13 12:32:50,763:INFO:Declaring metric variables
2024-04-13 12:32:50,763:INFO:Importing untrained model
2024-04-13 12:32:50,763:INFO:Declaring custom model
2024-04-13 12:32:50,764:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:32:50,765:INFO:Cross validation set to False
2024-04-13 12:32:50,765:INFO:Fitting Model
2024-04-13 12:32:50,843:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5187, splitter='best')
2024-04-13 12:32:50,843:INFO:create_model() successfully completed......................................
2024-04-13 12:32:50,972:INFO:Initializing create_model()
2024-04-13 12:32:50,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5187, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:32:50,972:INFO:Checking exceptions
2024-04-13 12:32:50,975:INFO:Importing libraries
2024-04-13 12:32:50,975:INFO:Copying training dataset
2024-04-13 12:32:50,983:INFO:Defining folds
2024-04-13 12:32:50,983:INFO:Declaring metric variables
2024-04-13 12:32:50,984:INFO:Importing untrained model
2024-04-13 12:32:50,984:INFO:Declaring custom model
2024-04-13 12:32:50,985:INFO:Logistic Regression Imported successfully
2024-04-13 12:32:50,986:INFO:Cross validation set to False
2024-04-13 12:32:50,986:INFO:Fitting Model
2024-04-13 12:32:51,011:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5187, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:32:51,011:INFO:create_model() successfully completed......................................
2024-04-13 12:32:51,155:INFO:_master_model_container: 2
2024-04-13 12:32:51,155:INFO:_display_container: 2
2024-04-13 12:32:51,156:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5187, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5187, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 12:32:51,156:INFO:compare_models() successfully completed......................................
2024-04-13 12:32:51,157:INFO:Initializing predict_model()
2024-04-13 12:32:51,158:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E319E21840>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5187, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E315577370>)
2024-04-13 12:32:51,158:INFO:Checking exceptions
2024-04-13 12:32:51,158:INFO:Preloading libraries
2024-04-13 12:38:35,194:INFO:PyCaret ClassificationExperiment
2024-04-13 12:38:35,194:INFO:Logging name: clf-default-name
2024-04-13 12:38:35,194:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 12:38:35,195:INFO:version 3.3.0
2024-04-13 12:38:35,195:INFO:Initializing setup()
2024-04-13 12:38:35,195:INFO:self.USI: ed8e
2024-04-13 12:38:35,195:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 12:38:35,195:INFO:Checking environment
2024-04-13 12:38:35,195:INFO:python_version: 3.10.14
2024-04-13 12:38:35,195:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 12:38:35,195:INFO:machine: AMD64
2024-04-13 12:38:35,195:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 12:38:35,202:INFO:Memory: svmem(total=17131573248, available=5309358080, percent=69.0, used=11822215168, free=5309358080)
2024-04-13 12:38:35,202:INFO:Physical Core: 8
2024-04-13 12:38:35,202:INFO:Logical Core: 16
2024-04-13 12:38:35,202:INFO:Checking libraries
2024-04-13 12:38:35,202:INFO:System:
2024-04-13 12:38:35,202:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 12:38:35,202:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 12:38:35,202:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 12:38:35,202:INFO:PyCaret required dependencies:
2024-04-13 12:38:35,203:INFO:                 pip: 23.3.1
2024-04-13 12:38:35,203:INFO:          setuptools: 68.2.2
2024-04-13 12:38:35,203:INFO:             pycaret: 3.3.0
2024-04-13 12:38:35,203:INFO:             IPython: 8.23.0
2024-04-13 12:38:35,203:INFO:          ipywidgets: 8.1.2
2024-04-13 12:38:35,203:INFO:                tqdm: 4.66.2
2024-04-13 12:38:35,203:INFO:               numpy: 1.26.4
2024-04-13 12:38:35,203:INFO:              pandas: 2.1.4
2024-04-13 12:38:35,203:INFO:              jinja2: 3.1.3
2024-04-13 12:38:35,203:INFO:               scipy: 1.11.4
2024-04-13 12:38:35,203:INFO:              joblib: 1.3.2
2024-04-13 12:38:35,203:INFO:             sklearn: 1.4.1.post1
2024-04-13 12:38:35,203:INFO:                pyod: 1.1.3
2024-04-13 12:38:35,203:INFO:            imblearn: 0.12.2
2024-04-13 12:38:35,203:INFO:   category_encoders: 2.6.3
2024-04-13 12:38:35,204:INFO:            lightgbm: 4.3.0
2024-04-13 12:38:35,204:INFO:               numba: 0.59.1
2024-04-13 12:38:35,204:INFO:            requests: 2.31.0
2024-04-13 12:38:35,204:INFO:          matplotlib: 3.7.5
2024-04-13 12:38:35,204:INFO:          scikitplot: 0.3.7
2024-04-13 12:38:35,204:INFO:         yellowbrick: 1.5
2024-04-13 12:38:35,204:INFO:              plotly: 5.20.0
2024-04-13 12:38:35,204:INFO:    plotly-resampler: Not installed
2024-04-13 12:38:35,204:INFO:             kaleido: 0.2.1
2024-04-13 12:38:35,204:INFO:           schemdraw: 0.15
2024-04-13 12:38:35,204:INFO:         statsmodels: 0.14.1
2024-04-13 12:38:35,204:INFO:              sktime: 0.28.0
2024-04-13 12:38:35,204:INFO:               tbats: 1.1.3
2024-04-13 12:38:35,204:INFO:            pmdarima: 2.0.4
2024-04-13 12:38:35,204:INFO:              psutil: 5.9.8
2024-04-13 12:38:35,205:INFO:          markupsafe: 2.1.5
2024-04-13 12:38:35,205:INFO:             pickle5: Not installed
2024-04-13 12:38:35,205:INFO:         cloudpickle: 3.0.0
2024-04-13 12:38:35,205:INFO:         deprecation: 2.1.0
2024-04-13 12:38:35,205:INFO:              xxhash: 3.4.1
2024-04-13 12:38:35,205:INFO:           wurlitzer: 3.0.3
2024-04-13 12:38:35,205:INFO:PyCaret optional dependencies:
2024-04-13 12:38:35,205:INFO:                shap: Not installed
2024-04-13 12:38:35,205:INFO:           interpret: Not installed
2024-04-13 12:38:35,205:INFO:                umap: Not installed
2024-04-13 12:38:35,205:INFO:     ydata_profiling: Not installed
2024-04-13 12:38:35,205:INFO:  explainerdashboard: Not installed
2024-04-13 12:38:35,205:INFO:             autoviz: Not installed
2024-04-13 12:38:35,205:INFO:           fairlearn: Not installed
2024-04-13 12:38:35,205:INFO:          deepchecks: Not installed
2024-04-13 12:38:35,206:INFO:             xgboost: Not installed
2024-04-13 12:38:35,206:INFO:            catboost: Not installed
2024-04-13 12:38:35,206:INFO:              kmodes: Not installed
2024-04-13 12:38:35,206:INFO:             mlxtend: Not installed
2024-04-13 12:38:35,206:INFO:       statsforecast: Not installed
2024-04-13 12:38:35,206:INFO:        tune_sklearn: Not installed
2024-04-13 12:38:35,206:INFO:                 ray: Not installed
2024-04-13 12:38:35,206:INFO:            hyperopt: Not installed
2024-04-13 12:38:35,206:INFO:              optuna: Not installed
2024-04-13 12:38:35,206:INFO:               skopt: Not installed
2024-04-13 12:38:35,206:INFO:              mlflow: 2.11.3
2024-04-13 12:38:35,206:INFO:              gradio: Not installed
2024-04-13 12:38:35,206:INFO:             fastapi: Not installed
2024-04-13 12:38:35,206:INFO:             uvicorn: Not installed
2024-04-13 12:38:35,206:INFO:              m2cgen: Not installed
2024-04-13 12:38:35,207:INFO:           evidently: Not installed
2024-04-13 12:38:35,207:INFO:               fugue: Not installed
2024-04-13 12:38:35,207:INFO:           streamlit: 1.33.0
2024-04-13 12:38:35,207:INFO:             prophet: Not installed
2024-04-13 12:38:35,207:INFO:None
2024-04-13 12:38:35,207:INFO:Set up data.
2024-04-13 12:38:35,213:INFO:Set up folding strategy.
2024-04-13 12:38:35,213:INFO:Set up train/test split.
2024-04-13 12:38:35,213:INFO:Set up data.
2024-04-13 12:38:35,218:INFO:Set up index.
2024-04-13 12:38:35,219:INFO:Assigning column types.
2024-04-13 12:38:35,224:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 12:38:35,293:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:38:35,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:38:35,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,408:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:38:35,410:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:38:35,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,454:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 12:38:35,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:38:35,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:38:35,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,685:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 12:38:35,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:35,916:INFO:Preparing preprocessing pipeline...
2024-04-13 12:38:35,918:INFO:Set up simple imputation.
2024-04-13 12:38:35,918:INFO:Set up feature normalization.
2024-04-13 12:38:35,958:INFO:Finished creating preprocessing pipeline.
2024-04-13 12:38:35,965:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 12:38:35,965:INFO:Creating final display dataframe.
2024-04-13 12:38:36,099:INFO:Setup _display_container:                     Description             Value
0                    Session id               495
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ed8e
2024-04-13 12:38:36,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:36,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:36,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:36,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:38:36,337:INFO:setup() successfully completed in 1.15s...............
2024-04-13 12:38:36,339:INFO:Initializing compare_models()
2024-04-13 12:38:36,339:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 12:38:36,339:INFO:Checking exceptions
2024-04-13 12:38:36,344:INFO:Preparing display monitor
2024-04-13 12:38:36,373:INFO:Initializing Logistic Regression
2024-04-13 12:38:36,373:INFO:Total runtime is 0.0 minutes
2024-04-13 12:38:36,378:INFO:SubProcess create_model() called ==================================
2024-04-13 12:38:36,378:INFO:Initializing create_model()
2024-04-13 12:38:36,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FB5E40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:38:36,379:INFO:Checking exceptions
2024-04-13 12:38:36,379:INFO:Importing libraries
2024-04-13 12:38:36,379:INFO:Copying training dataset
2024-04-13 12:38:36,398:INFO:Defining folds
2024-04-13 12:38:36,398:INFO:Declaring metric variables
2024-04-13 12:38:36,405:INFO:Importing untrained model
2024-04-13 12:38:36,412:INFO:Logistic Regression Imported successfully
2024-04-13 12:38:36,423:INFO:Starting cross validation
2024-04-13 12:38:36,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:38:41,297:INFO:Calculating mean and std
2024-04-13 12:38:41,300:INFO:Creating metrics dataframe
2024-04-13 12:38:41,306:INFO:Uploading results into container
2024-04-13 12:38:41,308:INFO:Uploading model into container now
2024-04-13 12:38:41,309:INFO:_master_model_container: 1
2024-04-13 12:38:41,309:INFO:_display_container: 2
2024-04-13 12:38:41,310:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:38:41,310:INFO:create_model() successfully completed......................................
2024-04-13 12:38:41,456:INFO:SubProcess create_model() end ==================================
2024-04-13 12:38:41,457:INFO:Creating metrics dataframe
2024-04-13 12:38:41,465:INFO:Initializing Decision Tree Classifier
2024-04-13 12:38:41,465:INFO:Total runtime is 0.08486894766489665 minutes
2024-04-13 12:38:41,470:INFO:SubProcess create_model() called ==================================
2024-04-13 12:38:41,470:INFO:Initializing create_model()
2024-04-13 12:38:41,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FB5E40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:38:41,470:INFO:Checking exceptions
2024-04-13 12:38:41,471:INFO:Importing libraries
2024-04-13 12:38:41,471:INFO:Copying training dataset
2024-04-13 12:38:41,480:INFO:Defining folds
2024-04-13 12:38:41,480:INFO:Declaring metric variables
2024-04-13 12:38:41,485:INFO:Importing untrained model
2024-04-13 12:38:41,489:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:38:41,498:INFO:Starting cross validation
2024-04-13 12:38:41,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:38:44,794:INFO:Calculating mean and std
2024-04-13 12:38:44,796:INFO:Creating metrics dataframe
2024-04-13 12:38:44,799:INFO:Uploading results into container
2024-04-13 12:38:44,801:INFO:Uploading model into container now
2024-04-13 12:38:44,802:INFO:_master_model_container: 2
2024-04-13 12:38:44,802:INFO:_display_container: 2
2024-04-13 12:38:44,803:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=495, splitter='best')
2024-04-13 12:38:44,803:INFO:create_model() successfully completed......................................
2024-04-13 12:38:44,952:INFO:SubProcess create_model() end ==================================
2024-04-13 12:38:44,952:INFO:Creating metrics dataframe
2024-04-13 12:38:44,973:INFO:Initializing create_model()
2024-04-13 12:38:44,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=495, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:38:44,974:INFO:Checking exceptions
2024-04-13 12:38:44,976:INFO:Importing libraries
2024-04-13 12:38:44,976:INFO:Copying training dataset
2024-04-13 12:38:44,985:INFO:Defining folds
2024-04-13 12:38:44,985:INFO:Declaring metric variables
2024-04-13 12:38:44,985:INFO:Importing untrained model
2024-04-13 12:38:44,985:INFO:Declaring custom model
2024-04-13 12:38:44,986:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:38:44,987:INFO:Cross validation set to False
2024-04-13 12:38:44,987:INFO:Fitting Model
2024-04-13 12:38:45,065:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=495, splitter='best')
2024-04-13 12:38:45,065:INFO:create_model() successfully completed......................................
2024-04-13 12:38:45,191:INFO:Initializing create_model()
2024-04-13 12:38:45,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:38:45,192:INFO:Checking exceptions
2024-04-13 12:38:45,194:INFO:Importing libraries
2024-04-13 12:38:45,194:INFO:Copying training dataset
2024-04-13 12:38:45,202:INFO:Defining folds
2024-04-13 12:38:45,202:INFO:Declaring metric variables
2024-04-13 12:38:45,203:INFO:Importing untrained model
2024-04-13 12:38:45,203:INFO:Declaring custom model
2024-04-13 12:38:45,203:INFO:Logistic Regression Imported successfully
2024-04-13 12:38:45,205:INFO:Cross validation set to False
2024-04-13 12:38:45,205:INFO:Fitting Model
2024-04-13 12:38:45,228:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:38:45,229:INFO:create_model() successfully completed......................................
2024-04-13 12:38:45,370:INFO:_master_model_container: 2
2024-04-13 12:38:45,370:INFO:_display_container: 2
2024-04-13 12:38:45,371:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=495, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 12:38:45,371:INFO:compare_models() successfully completed......................................
2024-04-13 12:38:45,372:INFO:Initializing predict_model()
2024-04-13 12:38:45,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31495D7B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=495, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E3156B64D0>)
2024-04-13 12:38:45,372:INFO:Checking exceptions
2024-04-13 12:38:45,373:INFO:Preloading libraries
2024-04-13 12:51:23,106:INFO:PyCaret ClassificationExperiment
2024-04-13 12:51:23,106:INFO:Logging name: clf-default-name
2024-04-13 12:51:23,106:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 12:51:23,106:INFO:version 3.3.0
2024-04-13 12:51:23,106:INFO:Initializing setup()
2024-04-13 12:51:23,106:INFO:self.USI: 4a2b
2024-04-13 12:51:23,106:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 12:51:23,106:INFO:Checking environment
2024-04-13 12:51:23,107:INFO:python_version: 3.10.14
2024-04-13 12:51:23,107:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 12:51:23,107:INFO:machine: AMD64
2024-04-13 12:51:23,107:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 12:51:23,112:INFO:Memory: svmem(total=17131573248, available=6274383872, percent=63.4, used=10857189376, free=6274383872)
2024-04-13 12:51:23,112:INFO:Physical Core: 8
2024-04-13 12:51:23,112:INFO:Logical Core: 16
2024-04-13 12:51:23,112:INFO:Checking libraries
2024-04-13 12:51:23,112:INFO:System:
2024-04-13 12:51:23,112:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 12:51:23,112:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 12:51:23,113:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 12:51:23,113:INFO:PyCaret required dependencies:
2024-04-13 12:51:23,113:INFO:                 pip: 23.3.1
2024-04-13 12:51:23,113:INFO:          setuptools: 68.2.2
2024-04-13 12:51:23,113:INFO:             pycaret: 3.3.0
2024-04-13 12:51:23,113:INFO:             IPython: 8.23.0
2024-04-13 12:51:23,113:INFO:          ipywidgets: 8.1.2
2024-04-13 12:51:23,113:INFO:                tqdm: 4.66.2
2024-04-13 12:51:23,113:INFO:               numpy: 1.26.4
2024-04-13 12:51:23,113:INFO:              pandas: 2.1.4
2024-04-13 12:51:23,113:INFO:              jinja2: 3.1.3
2024-04-13 12:51:23,113:INFO:               scipy: 1.11.4
2024-04-13 12:51:23,113:INFO:              joblib: 1.3.2
2024-04-13 12:51:23,113:INFO:             sklearn: 1.4.1.post1
2024-04-13 12:51:23,114:INFO:                pyod: 1.1.3
2024-04-13 12:51:23,114:INFO:            imblearn: 0.12.2
2024-04-13 12:51:23,114:INFO:   category_encoders: 2.6.3
2024-04-13 12:51:23,114:INFO:            lightgbm: 4.3.0
2024-04-13 12:51:23,114:INFO:               numba: 0.59.1
2024-04-13 12:51:23,114:INFO:            requests: 2.31.0
2024-04-13 12:51:23,114:INFO:          matplotlib: 3.7.5
2024-04-13 12:51:23,114:INFO:          scikitplot: 0.3.7
2024-04-13 12:51:23,114:INFO:         yellowbrick: 1.5
2024-04-13 12:51:23,114:INFO:              plotly: 5.20.0
2024-04-13 12:51:23,114:INFO:    plotly-resampler: Not installed
2024-04-13 12:51:23,114:INFO:             kaleido: 0.2.1
2024-04-13 12:51:23,114:INFO:           schemdraw: 0.15
2024-04-13 12:51:23,114:INFO:         statsmodels: 0.14.1
2024-04-13 12:51:23,114:INFO:              sktime: 0.28.0
2024-04-13 12:51:23,115:INFO:               tbats: 1.1.3
2024-04-13 12:51:23,115:INFO:            pmdarima: 2.0.4
2024-04-13 12:51:23,115:INFO:              psutil: 5.9.8
2024-04-13 12:51:23,115:INFO:          markupsafe: 2.1.5
2024-04-13 12:51:23,115:INFO:             pickle5: Not installed
2024-04-13 12:51:23,115:INFO:         cloudpickle: 3.0.0
2024-04-13 12:51:23,115:INFO:         deprecation: 2.1.0
2024-04-13 12:51:23,115:INFO:              xxhash: 3.4.1
2024-04-13 12:51:23,115:INFO:           wurlitzer: 3.0.3
2024-04-13 12:51:23,115:INFO:PyCaret optional dependencies:
2024-04-13 12:51:23,115:INFO:                shap: Not installed
2024-04-13 12:51:23,115:INFO:           interpret: Not installed
2024-04-13 12:51:23,115:INFO:                umap: Not installed
2024-04-13 12:51:23,115:INFO:     ydata_profiling: Not installed
2024-04-13 12:51:23,116:INFO:  explainerdashboard: Not installed
2024-04-13 12:51:23,116:INFO:             autoviz: Not installed
2024-04-13 12:51:23,116:INFO:           fairlearn: Not installed
2024-04-13 12:51:23,116:INFO:          deepchecks: Not installed
2024-04-13 12:51:23,116:INFO:             xgboost: Not installed
2024-04-13 12:51:23,116:INFO:            catboost: Not installed
2024-04-13 12:51:23,116:INFO:              kmodes: Not installed
2024-04-13 12:51:23,116:INFO:             mlxtend: Not installed
2024-04-13 12:51:23,116:INFO:       statsforecast: Not installed
2024-04-13 12:51:23,116:INFO:        tune_sklearn: Not installed
2024-04-13 12:51:23,116:INFO:                 ray: Not installed
2024-04-13 12:51:23,116:INFO:            hyperopt: Not installed
2024-04-13 12:51:23,116:INFO:              optuna: Not installed
2024-04-13 12:51:23,116:INFO:               skopt: Not installed
2024-04-13 12:51:23,117:INFO:              mlflow: 2.11.3
2024-04-13 12:51:23,117:INFO:              gradio: Not installed
2024-04-13 12:51:23,117:INFO:             fastapi: Not installed
2024-04-13 12:51:23,117:INFO:             uvicorn: Not installed
2024-04-13 12:51:23,117:INFO:              m2cgen: Not installed
2024-04-13 12:51:23,117:INFO:           evidently: Not installed
2024-04-13 12:51:23,117:INFO:               fugue: Not installed
2024-04-13 12:51:23,117:INFO:           streamlit: 1.33.0
2024-04-13 12:51:23,117:INFO:             prophet: Not installed
2024-04-13 12:51:23,117:INFO:None
2024-04-13 12:51:23,117:INFO:Set up data.
2024-04-13 12:51:54,499:INFO:PyCaret ClassificationExperiment
2024-04-13 12:51:54,499:INFO:Logging name: clf-default-name
2024-04-13 12:51:54,499:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 12:51:54,499:INFO:version 3.3.0
2024-04-13 12:51:54,499:INFO:Initializing setup()
2024-04-13 12:51:54,499:INFO:self.USI: 065b
2024-04-13 12:51:54,499:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 12:51:54,499:INFO:Checking environment
2024-04-13 12:51:54,499:INFO:python_version: 3.10.14
2024-04-13 12:51:54,500:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 12:51:54,500:INFO:machine: AMD64
2024-04-13 12:51:54,500:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 12:51:54,509:INFO:Memory: svmem(total=17131573248, available=6275141632, percent=63.4, used=10856431616, free=6275141632)
2024-04-13 12:51:54,509:INFO:Physical Core: 8
2024-04-13 12:51:54,509:INFO:Logical Core: 16
2024-04-13 12:51:54,509:INFO:Checking libraries
2024-04-13 12:51:54,509:INFO:System:
2024-04-13 12:51:54,509:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 12:51:54,510:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 12:51:54,510:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 12:51:54,510:INFO:PyCaret required dependencies:
2024-04-13 12:51:54,510:INFO:                 pip: 23.3.1
2024-04-13 12:51:54,510:INFO:          setuptools: 68.2.2
2024-04-13 12:51:54,510:INFO:             pycaret: 3.3.0
2024-04-13 12:51:54,510:INFO:             IPython: 8.23.0
2024-04-13 12:51:54,511:INFO:          ipywidgets: 8.1.2
2024-04-13 12:51:54,511:INFO:                tqdm: 4.66.2
2024-04-13 12:51:54,511:INFO:               numpy: 1.26.4
2024-04-13 12:51:54,511:INFO:              pandas: 2.1.4
2024-04-13 12:51:54,511:INFO:              jinja2: 3.1.3
2024-04-13 12:51:54,511:INFO:               scipy: 1.11.4
2024-04-13 12:51:54,511:INFO:              joblib: 1.3.2
2024-04-13 12:51:54,511:INFO:             sklearn: 1.4.1.post1
2024-04-13 12:51:54,511:INFO:                pyod: 1.1.3
2024-04-13 12:51:54,512:INFO:            imblearn: 0.12.2
2024-04-13 12:51:54,512:INFO:   category_encoders: 2.6.3
2024-04-13 12:51:54,512:INFO:            lightgbm: 4.3.0
2024-04-13 12:51:54,512:INFO:               numba: 0.59.1
2024-04-13 12:51:54,512:INFO:            requests: 2.31.0
2024-04-13 12:51:54,512:INFO:          matplotlib: 3.7.5
2024-04-13 12:51:54,512:INFO:          scikitplot: 0.3.7
2024-04-13 12:51:54,513:INFO:         yellowbrick: 1.5
2024-04-13 12:51:54,513:INFO:              plotly: 5.20.0
2024-04-13 12:51:54,513:INFO:    plotly-resampler: Not installed
2024-04-13 12:51:54,513:INFO:             kaleido: 0.2.1
2024-04-13 12:51:54,513:INFO:           schemdraw: 0.15
2024-04-13 12:51:54,513:INFO:         statsmodels: 0.14.1
2024-04-13 12:51:54,513:INFO:              sktime: 0.28.0
2024-04-13 12:51:54,513:INFO:               tbats: 1.1.3
2024-04-13 12:51:54,513:INFO:            pmdarima: 2.0.4
2024-04-13 12:51:54,513:INFO:              psutil: 5.9.8
2024-04-13 12:51:54,514:INFO:          markupsafe: 2.1.5
2024-04-13 12:51:54,514:INFO:             pickle5: Not installed
2024-04-13 12:51:54,514:INFO:         cloudpickle: 3.0.0
2024-04-13 12:51:54,514:INFO:         deprecation: 2.1.0
2024-04-13 12:51:54,514:INFO:              xxhash: 3.4.1
2024-04-13 12:51:54,514:INFO:           wurlitzer: 3.0.3
2024-04-13 12:51:54,514:INFO:PyCaret optional dependencies:
2024-04-13 12:51:54,514:INFO:                shap: Not installed
2024-04-13 12:51:54,514:INFO:           interpret: Not installed
2024-04-13 12:51:54,515:INFO:                umap: Not installed
2024-04-13 12:51:54,515:INFO:     ydata_profiling: Not installed
2024-04-13 12:51:54,515:INFO:  explainerdashboard: Not installed
2024-04-13 12:51:54,515:INFO:             autoviz: Not installed
2024-04-13 12:51:54,515:INFO:           fairlearn: Not installed
2024-04-13 12:51:54,515:INFO:          deepchecks: Not installed
2024-04-13 12:51:54,515:INFO:             xgboost: Not installed
2024-04-13 12:51:54,515:INFO:            catboost: Not installed
2024-04-13 12:51:54,515:INFO:              kmodes: Not installed
2024-04-13 12:51:54,515:INFO:             mlxtend: Not installed
2024-04-13 12:51:54,516:INFO:       statsforecast: Not installed
2024-04-13 12:51:54,516:INFO:        tune_sklearn: Not installed
2024-04-13 12:51:54,516:INFO:                 ray: Not installed
2024-04-13 12:51:54,516:INFO:            hyperopt: Not installed
2024-04-13 12:51:54,516:INFO:              optuna: Not installed
2024-04-13 12:51:54,516:INFO:               skopt: Not installed
2024-04-13 12:51:54,516:INFO:              mlflow: 2.11.3
2024-04-13 12:51:54,516:INFO:              gradio: Not installed
2024-04-13 12:51:54,516:INFO:             fastapi: Not installed
2024-04-13 12:51:54,516:INFO:             uvicorn: Not installed
2024-04-13 12:51:54,516:INFO:              m2cgen: Not installed
2024-04-13 12:51:54,516:INFO:           evidently: Not installed
2024-04-13 12:51:54,517:INFO:               fugue: Not installed
2024-04-13 12:51:54,517:INFO:           streamlit: 1.33.0
2024-04-13 12:51:54,517:INFO:             prophet: Not installed
2024-04-13 12:51:54,517:INFO:None
2024-04-13 12:51:54,517:INFO:Set up data.
2024-04-13 12:51:54,524:INFO:Set up folding strategy.
2024-04-13 12:51:54,524:INFO:Set up train/test split.
2024-04-13 12:51:54,524:INFO:Set up data.
2024-04-13 12:51:54,530:INFO:Set up index.
2024-04-13 12:51:54,531:INFO:Assigning column types.
2024-04-13 12:51:54,537:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 12:51:54,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:51:54,609:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:51:54,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:51:54,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:51:54,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,768:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 12:51:54,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:51:54,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:51:54,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:54,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 12:51:55,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,226:INFO:Preparing preprocessing pipeline...
2024-04-13 12:51:55,228:INFO:Set up simple imputation.
2024-04-13 12:51:55,228:INFO:Set up feature normalization.
2024-04-13 12:51:55,268:INFO:Finished creating preprocessing pipeline.
2024-04-13 12:51:55,275:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 12:51:55,276:INFO:Creating final display dataframe.
2024-04-13 12:51:55,408:INFO:Setup _display_container:                     Description             Value
0                    Session id              1243
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              065b
2024-04-13 12:51:55,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:51:55,645:INFO:setup() successfully completed in 1.15s...............
2024-04-13 12:51:55,647:INFO:Initializing compare_models()
2024-04-13 12:51:55,647:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 12:51:55,647:INFO:Checking exceptions
2024-04-13 12:51:55,653:INFO:Preparing display monitor
2024-04-13 12:51:55,681:INFO:Initializing Logistic Regression
2024-04-13 12:51:55,681:INFO:Total runtime is 0.0 minutes
2024-04-13 12:51:55,686:INFO:SubProcess create_model() called ==================================
2024-04-13 12:51:55,686:INFO:Initializing create_model()
2024-04-13 12:51:55,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FA8280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:51:55,687:INFO:Checking exceptions
2024-04-13 12:51:55,687:INFO:Importing libraries
2024-04-13 12:51:55,687:INFO:Copying training dataset
2024-04-13 12:51:55,698:INFO:Defining folds
2024-04-13 12:51:55,698:INFO:Declaring metric variables
2024-04-13 12:51:55,703:INFO:Importing untrained model
2024-04-13 12:51:55,708:INFO:Logistic Regression Imported successfully
2024-04-13 12:51:55,717:INFO:Starting cross validation
2024-04-13 12:51:55,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:52:00,581:INFO:Calculating mean and std
2024-04-13 12:52:00,584:INFO:Creating metrics dataframe
2024-04-13 12:52:00,587:INFO:Uploading results into container
2024-04-13 12:52:00,589:INFO:Uploading model into container now
2024-04-13 12:52:00,590:INFO:_master_model_container: 1
2024-04-13 12:52:00,590:INFO:_display_container: 2
2024-04-13 12:52:00,591:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:52:00,591:INFO:create_model() successfully completed......................................
2024-04-13 12:52:00,743:INFO:SubProcess create_model() end ==================================
2024-04-13 12:52:00,743:INFO:Creating metrics dataframe
2024-04-13 12:52:00,751:INFO:Initializing Decision Tree Classifier
2024-04-13 12:52:00,751:INFO:Total runtime is 0.08451008399327596 minutes
2024-04-13 12:52:00,756:INFO:SubProcess create_model() called ==================================
2024-04-13 12:52:00,756:INFO:Initializing create_model()
2024-04-13 12:52:00,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FA8280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:00,756:INFO:Checking exceptions
2024-04-13 12:52:00,757:INFO:Importing libraries
2024-04-13 12:52:00,757:INFO:Copying training dataset
2024-04-13 12:52:00,767:INFO:Defining folds
2024-04-13 12:52:00,767:INFO:Declaring metric variables
2024-04-13 12:52:00,771:INFO:Importing untrained model
2024-04-13 12:52:00,776:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:52:00,785:INFO:Starting cross validation
2024-04-13 12:52:00,786:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:52:03,999:INFO:Calculating mean and std
2024-04-13 12:52:04,002:INFO:Creating metrics dataframe
2024-04-13 12:52:04,006:INFO:Uploading results into container
2024-04-13 12:52:04,007:INFO:Uploading model into container now
2024-04-13 12:52:04,008:INFO:_master_model_container: 2
2024-04-13 12:52:04,008:INFO:_display_container: 2
2024-04-13 12:52:04,009:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1243, splitter='best')
2024-04-13 12:52:04,009:INFO:create_model() successfully completed......................................
2024-04-13 12:52:04,163:INFO:SubProcess create_model() end ==================================
2024-04-13 12:52:04,163:INFO:Creating metrics dataframe
2024-04-13 12:52:04,184:INFO:Initializing create_model()
2024-04-13 12:52:04,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1243, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:04,184:INFO:Checking exceptions
2024-04-13 12:52:04,187:INFO:Importing libraries
2024-04-13 12:52:04,187:INFO:Copying training dataset
2024-04-13 12:52:04,196:INFO:Defining folds
2024-04-13 12:52:04,196:INFO:Declaring metric variables
2024-04-13 12:52:04,196:INFO:Importing untrained model
2024-04-13 12:52:04,196:INFO:Declaring custom model
2024-04-13 12:52:04,197:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:52:04,198:INFO:Cross validation set to False
2024-04-13 12:52:04,198:INFO:Fitting Model
2024-04-13 12:52:04,277:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1243, splitter='best')
2024-04-13 12:52:04,277:INFO:create_model() successfully completed......................................
2024-04-13 12:52:04,411:INFO:Initializing create_model()
2024-04-13 12:52:04,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:04,411:INFO:Checking exceptions
2024-04-13 12:52:04,413:INFO:Importing libraries
2024-04-13 12:52:04,414:INFO:Copying training dataset
2024-04-13 12:52:04,422:INFO:Defining folds
2024-04-13 12:52:04,422:INFO:Declaring metric variables
2024-04-13 12:52:04,422:INFO:Importing untrained model
2024-04-13 12:52:04,422:INFO:Declaring custom model
2024-04-13 12:52:04,423:INFO:Logistic Regression Imported successfully
2024-04-13 12:52:04,424:INFO:Cross validation set to False
2024-04-13 12:52:04,424:INFO:Fitting Model
2024-04-13 12:52:04,448:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:52:04,448:INFO:create_model() successfully completed......................................
2024-04-13 12:52:04,593:INFO:_master_model_container: 2
2024-04-13 12:52:04,594:INFO:_display_container: 2
2024-04-13 12:52:04,595:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1243, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1243, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 12:52:04,595:INFO:compare_models() successfully completed......................................
2024-04-13 12:52:04,595:INFO:Initializing predict_model()
2024-04-13 12:52:04,596:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31CB96920>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1243, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31497A320>)
2024-04-13 12:52:04,596:INFO:Checking exceptions
2024-04-13 12:52:04,596:INFO:Preloading libraries
2024-04-13 12:52:30,887:INFO:PyCaret ClassificationExperiment
2024-04-13 12:52:30,887:INFO:Logging name: clf-default-name
2024-04-13 12:52:30,887:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 12:52:30,887:INFO:version 3.3.0
2024-04-13 12:52:30,887:INFO:Initializing setup()
2024-04-13 12:52:30,887:INFO:self.USI: 0c57
2024-04-13 12:52:30,888:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 12:52:30,888:INFO:Checking environment
2024-04-13 12:52:30,888:INFO:python_version: 3.10.14
2024-04-13 12:52:30,888:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 12:52:30,888:INFO:machine: AMD64
2024-04-13 12:52:30,888:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 12:52:30,894:INFO:Memory: svmem(total=17131573248, available=4311437312, percent=74.8, used=12820135936, free=4311437312)
2024-04-13 12:52:30,894:INFO:Physical Core: 8
2024-04-13 12:52:30,894:INFO:Logical Core: 16
2024-04-13 12:52:30,894:INFO:Checking libraries
2024-04-13 12:52:30,894:INFO:System:
2024-04-13 12:52:30,894:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 12:52:30,894:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 12:52:30,894:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 12:52:30,894:INFO:PyCaret required dependencies:
2024-04-13 12:52:30,894:INFO:                 pip: 23.3.1
2024-04-13 12:52:30,894:INFO:          setuptools: 68.2.2
2024-04-13 12:52:30,894:INFO:             pycaret: 3.3.0
2024-04-13 12:52:30,895:INFO:             IPython: 8.23.0
2024-04-13 12:52:30,895:INFO:          ipywidgets: 8.1.2
2024-04-13 12:52:30,895:INFO:                tqdm: 4.66.2
2024-04-13 12:52:30,895:INFO:               numpy: 1.26.4
2024-04-13 12:52:30,895:INFO:              pandas: 2.1.4
2024-04-13 12:52:30,895:INFO:              jinja2: 3.1.3
2024-04-13 12:52:30,895:INFO:               scipy: 1.11.4
2024-04-13 12:52:30,895:INFO:              joblib: 1.3.2
2024-04-13 12:52:30,895:INFO:             sklearn: 1.4.1.post1
2024-04-13 12:52:30,895:INFO:                pyod: 1.1.3
2024-04-13 12:52:30,895:INFO:            imblearn: 0.12.2
2024-04-13 12:52:30,895:INFO:   category_encoders: 2.6.3
2024-04-13 12:52:30,895:INFO:            lightgbm: 4.3.0
2024-04-13 12:52:30,896:INFO:               numba: 0.59.1
2024-04-13 12:52:30,896:INFO:            requests: 2.31.0
2024-04-13 12:52:30,896:INFO:          matplotlib: 3.7.5
2024-04-13 12:52:30,896:INFO:          scikitplot: 0.3.7
2024-04-13 12:52:30,896:INFO:         yellowbrick: 1.5
2024-04-13 12:52:30,896:INFO:              plotly: 5.20.0
2024-04-13 12:52:30,896:INFO:    plotly-resampler: Not installed
2024-04-13 12:52:30,896:INFO:             kaleido: 0.2.1
2024-04-13 12:52:30,896:INFO:           schemdraw: 0.15
2024-04-13 12:52:30,896:INFO:         statsmodels: 0.14.1
2024-04-13 12:52:30,896:INFO:              sktime: 0.28.0
2024-04-13 12:52:30,896:INFO:               tbats: 1.1.3
2024-04-13 12:52:30,897:INFO:            pmdarima: 2.0.4
2024-04-13 12:52:30,897:INFO:              psutil: 5.9.8
2024-04-13 12:52:30,897:INFO:          markupsafe: 2.1.5
2024-04-13 12:52:30,897:INFO:             pickle5: Not installed
2024-04-13 12:52:30,897:INFO:         cloudpickle: 3.0.0
2024-04-13 12:52:30,897:INFO:         deprecation: 2.1.0
2024-04-13 12:52:30,897:INFO:              xxhash: 3.4.1
2024-04-13 12:52:30,897:INFO:           wurlitzer: 3.0.3
2024-04-13 12:52:30,897:INFO:PyCaret optional dependencies:
2024-04-13 12:52:30,899:INFO:                shap: Not installed
2024-04-13 12:52:30,899:INFO:           interpret: Not installed
2024-04-13 12:52:30,899:INFO:                umap: Not installed
2024-04-13 12:52:30,899:INFO:     ydata_profiling: Not installed
2024-04-13 12:52:30,899:INFO:  explainerdashboard: Not installed
2024-04-13 12:52:30,899:INFO:             autoviz: Not installed
2024-04-13 12:52:30,899:INFO:           fairlearn: Not installed
2024-04-13 12:52:30,899:INFO:          deepchecks: Not installed
2024-04-13 12:52:30,900:INFO:             xgboost: Not installed
2024-04-13 12:52:30,900:INFO:            catboost: Not installed
2024-04-13 12:52:30,900:INFO:              kmodes: Not installed
2024-04-13 12:52:30,900:INFO:             mlxtend: Not installed
2024-04-13 12:52:30,900:INFO:       statsforecast: Not installed
2024-04-13 12:52:30,900:INFO:        tune_sklearn: Not installed
2024-04-13 12:52:30,900:INFO:                 ray: Not installed
2024-04-13 12:52:30,900:INFO:            hyperopt: Not installed
2024-04-13 12:52:30,900:INFO:              optuna: Not installed
2024-04-13 12:52:30,900:INFO:               skopt: Not installed
2024-04-13 12:52:30,901:INFO:              mlflow: 2.11.3
2024-04-13 12:52:30,901:INFO:              gradio: Not installed
2024-04-13 12:52:30,901:INFO:             fastapi: Not installed
2024-04-13 12:52:30,901:INFO:             uvicorn: Not installed
2024-04-13 12:52:30,901:INFO:              m2cgen: Not installed
2024-04-13 12:52:30,901:INFO:           evidently: Not installed
2024-04-13 12:52:30,901:INFO:               fugue: Not installed
2024-04-13 12:52:30,901:INFO:           streamlit: 1.33.0
2024-04-13 12:52:30,901:INFO:             prophet: Not installed
2024-04-13 12:52:30,901:INFO:None
2024-04-13 12:52:30,902:INFO:Set up data.
2024-04-13 12:52:30,912:INFO:Set up folding strategy.
2024-04-13 12:52:30,913:INFO:Set up train/test split.
2024-04-13 12:52:30,913:INFO:Set up data.
2024-04-13 12:52:30,922:INFO:Set up index.
2024-04-13 12:52:30,922:INFO:Assigning column types.
2024-04-13 12:52:30,929:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 12:52:30,998:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:52:30,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:52:31,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 12:52:31,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:52:31,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,158:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 12:52:31,228:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:52:31,271:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,343:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 12:52:31,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,387:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 12:52:31,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,616:INFO:Preparing preprocessing pipeline...
2024-04-13 12:52:31,617:INFO:Set up simple imputation.
2024-04-13 12:52:31,618:INFO:Set up feature normalization.
2024-04-13 12:52:31,656:INFO:Finished creating preprocessing pipeline.
2024-04-13 12:52:31,663:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 12:52:31,663:INFO:Creating final display dataframe.
2024-04-13 12:52:31,795:INFO:Setup _display_container:                     Description             Value
0                    Session id              6479
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0c57
2024-04-13 12:52:31,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:31,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:32,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:32,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 12:52:32,036:INFO:setup() successfully completed in 1.15s...............
2024-04-13 12:52:32,038:INFO:Initializing compare_models()
2024-04-13 12:52:32,038:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 12:52:32,038:INFO:Checking exceptions
2024-04-13 12:52:32,044:INFO:Preparing display monitor
2024-04-13 12:52:32,072:INFO:Initializing Logistic Regression
2024-04-13 12:52:32,072:INFO:Total runtime is 0.0 minutes
2024-04-13 12:52:32,078:INFO:SubProcess create_model() called ==================================
2024-04-13 12:52:32,078:INFO:Initializing create_model()
2024-04-13 12:52:32,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31CDCC040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:32,078:INFO:Checking exceptions
2024-04-13 12:52:32,079:INFO:Importing libraries
2024-04-13 12:52:32,079:INFO:Copying training dataset
2024-04-13 12:52:32,089:INFO:Defining folds
2024-04-13 12:52:32,090:INFO:Declaring metric variables
2024-04-13 12:52:32,094:INFO:Importing untrained model
2024-04-13 12:52:32,099:INFO:Logistic Regression Imported successfully
2024-04-13 12:52:32,107:INFO:Starting cross validation
2024-04-13 12:52:32,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:52:32,249:INFO:Calculating mean and std
2024-04-13 12:52:32,250:INFO:Creating metrics dataframe
2024-04-13 12:52:32,252:INFO:Uploading results into container
2024-04-13 12:52:32,252:INFO:Uploading model into container now
2024-04-13 12:52:32,253:INFO:_master_model_container: 1
2024-04-13 12:52:32,253:INFO:_display_container: 2
2024-04-13 12:52:32,253:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6479, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:52:32,254:INFO:create_model() successfully completed......................................
2024-04-13 12:52:32,427:INFO:SubProcess create_model() end ==================================
2024-04-13 12:52:32,427:INFO:Creating metrics dataframe
2024-04-13 12:52:32,436:INFO:Initializing Decision Tree Classifier
2024-04-13 12:52:32,436:INFO:Total runtime is 0.006072191397349039 minutes
2024-04-13 12:52:32,441:INFO:SubProcess create_model() called ==================================
2024-04-13 12:52:32,441:INFO:Initializing create_model()
2024-04-13 12:52:32,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31CDCC040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:32,441:INFO:Checking exceptions
2024-04-13 12:52:32,441:INFO:Importing libraries
2024-04-13 12:52:32,441:INFO:Copying training dataset
2024-04-13 12:52:32,449:INFO:Defining folds
2024-04-13 12:52:32,450:INFO:Declaring metric variables
2024-04-13 12:52:32,454:INFO:Importing untrained model
2024-04-13 12:52:32,459:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:52:32,467:INFO:Starting cross validation
2024-04-13 12:52:32,468:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 12:52:32,656:INFO:Calculating mean and std
2024-04-13 12:52:32,657:INFO:Creating metrics dataframe
2024-04-13 12:52:32,659:INFO:Uploading results into container
2024-04-13 12:52:32,659:INFO:Uploading model into container now
2024-04-13 12:52:32,660:INFO:_master_model_container: 2
2024-04-13 12:52:32,660:INFO:_display_container: 2
2024-04-13 12:52:32,660:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6479, splitter='best')
2024-04-13 12:52:32,660:INFO:create_model() successfully completed......................................
2024-04-13 12:52:32,827:INFO:SubProcess create_model() end ==================================
2024-04-13 12:52:32,827:INFO:Creating metrics dataframe
2024-04-13 12:52:32,847:INFO:Initializing create_model()
2024-04-13 12:52:32,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6479, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:32,848:INFO:Checking exceptions
2024-04-13 12:52:32,850:INFO:Importing libraries
2024-04-13 12:52:32,850:INFO:Copying training dataset
2024-04-13 12:52:32,859:INFO:Defining folds
2024-04-13 12:52:32,859:INFO:Declaring metric variables
2024-04-13 12:52:32,859:INFO:Importing untrained model
2024-04-13 12:52:32,859:INFO:Declaring custom model
2024-04-13 12:52:32,860:INFO:Decision Tree Classifier Imported successfully
2024-04-13 12:52:32,861:INFO:Cross validation set to False
2024-04-13 12:52:32,861:INFO:Fitting Model
2024-04-13 12:52:32,938:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6479, splitter='best')
2024-04-13 12:52:32,938:INFO:create_model() successfully completed......................................
2024-04-13 12:52:33,109:INFO:Initializing create_model()
2024-04-13 12:52:33,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6479, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 12:52:33,110:INFO:Checking exceptions
2024-04-13 12:52:33,112:INFO:Importing libraries
2024-04-13 12:52:33,112:INFO:Copying training dataset
2024-04-13 12:52:33,120:INFO:Defining folds
2024-04-13 12:52:33,121:INFO:Declaring metric variables
2024-04-13 12:52:33,121:INFO:Importing untrained model
2024-04-13 12:52:33,121:INFO:Declaring custom model
2024-04-13 12:52:33,122:INFO:Logistic Regression Imported successfully
2024-04-13 12:52:33,123:INFO:Cross validation set to False
2024-04-13 12:52:33,123:INFO:Fitting Model
2024-04-13 12:52:33,148:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6479, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 12:52:33,148:INFO:create_model() successfully completed......................................
2024-04-13 12:52:33,332:INFO:_master_model_container: 2
2024-04-13 12:52:33,333:INFO:_display_container: 2
2024-04-13 12:52:33,334:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6479, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6479, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 12:52:33,334:INFO:compare_models() successfully completed......................................
2024-04-13 12:52:33,335:INFO:Initializing predict_model()
2024-04-13 12:52:33,335:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E315706CB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6479, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31E479EA0>)
2024-04-13 12:52:33,335:INFO:Checking exceptions
2024-04-13 12:52:33,336:INFO:Preloading libraries
2024-04-13 13:49:54,931:INFO:PyCaret ClassificationExperiment
2024-04-13 13:49:54,931:INFO:Logging name: clf-default-name
2024-04-13 13:49:54,931:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 13:49:54,931:INFO:version 3.3.0
2024-04-13 13:49:54,931:INFO:Initializing setup()
2024-04-13 13:49:54,932:INFO:self.USI: 9b18
2024-04-13 13:49:54,932:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 13:49:54,932:INFO:Checking environment
2024-04-13 13:49:54,932:INFO:python_version: 3.10.14
2024-04-13 13:49:54,932:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 13:49:54,932:INFO:machine: AMD64
2024-04-13 13:49:54,932:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 13:49:54,938:INFO:Memory: svmem(total=17131573248, available=4453736448, percent=74.0, used=12677836800, free=4453736448)
2024-04-13 13:49:54,938:INFO:Physical Core: 8
2024-04-13 13:49:54,938:INFO:Logical Core: 16
2024-04-13 13:49:54,938:INFO:Checking libraries
2024-04-13 13:49:54,939:INFO:System:
2024-04-13 13:49:54,939:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 13:49:54,939:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 13:49:54,939:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 13:49:54,939:INFO:PyCaret required dependencies:
2024-04-13 13:49:54,939:INFO:                 pip: 23.3.1
2024-04-13 13:49:54,939:INFO:          setuptools: 68.2.2
2024-04-13 13:49:54,940:INFO:             pycaret: 3.3.0
2024-04-13 13:49:54,940:INFO:             IPython: 8.23.0
2024-04-13 13:49:54,940:INFO:          ipywidgets: 8.1.2
2024-04-13 13:49:54,940:INFO:                tqdm: 4.66.2
2024-04-13 13:49:54,940:INFO:               numpy: 1.26.4
2024-04-13 13:49:54,940:INFO:              pandas: 2.1.4
2024-04-13 13:49:54,940:INFO:              jinja2: 3.1.3
2024-04-13 13:49:54,940:INFO:               scipy: 1.11.4
2024-04-13 13:49:54,940:INFO:              joblib: 1.3.2
2024-04-13 13:49:54,940:INFO:             sklearn: 1.4.1.post1
2024-04-13 13:49:54,940:INFO:                pyod: 1.1.3
2024-04-13 13:49:54,940:INFO:            imblearn: 0.12.2
2024-04-13 13:49:54,940:INFO:   category_encoders: 2.6.3
2024-04-13 13:49:54,940:INFO:            lightgbm: 4.3.0
2024-04-13 13:49:54,940:INFO:               numba: 0.59.1
2024-04-13 13:49:54,941:INFO:            requests: 2.31.0
2024-04-13 13:49:54,941:INFO:          matplotlib: 3.7.5
2024-04-13 13:49:54,941:INFO:          scikitplot: 0.3.7
2024-04-13 13:49:54,941:INFO:         yellowbrick: 1.5
2024-04-13 13:49:54,941:INFO:              plotly: 5.20.0
2024-04-13 13:49:54,941:INFO:    plotly-resampler: Not installed
2024-04-13 13:49:54,941:INFO:             kaleido: 0.2.1
2024-04-13 13:49:54,941:INFO:           schemdraw: 0.15
2024-04-13 13:49:54,941:INFO:         statsmodels: 0.14.1
2024-04-13 13:49:54,941:INFO:              sktime: 0.28.0
2024-04-13 13:49:54,941:INFO:               tbats: 1.1.3
2024-04-13 13:49:54,941:INFO:            pmdarima: 2.0.4
2024-04-13 13:49:54,941:INFO:              psutil: 5.9.8
2024-04-13 13:49:54,941:INFO:          markupsafe: 2.1.5
2024-04-13 13:49:54,941:INFO:             pickle5: Not installed
2024-04-13 13:49:54,942:INFO:         cloudpickle: 3.0.0
2024-04-13 13:49:54,942:INFO:         deprecation: 2.1.0
2024-04-13 13:49:54,942:INFO:              xxhash: 3.4.1
2024-04-13 13:49:54,942:INFO:           wurlitzer: 3.0.3
2024-04-13 13:49:54,942:INFO:PyCaret optional dependencies:
2024-04-13 13:49:54,942:INFO:                shap: Not installed
2024-04-13 13:49:54,942:INFO:           interpret: Not installed
2024-04-13 13:49:54,942:INFO:                umap: Not installed
2024-04-13 13:49:54,942:INFO:     ydata_profiling: Not installed
2024-04-13 13:49:54,942:INFO:  explainerdashboard: Not installed
2024-04-13 13:49:54,942:INFO:             autoviz: Not installed
2024-04-13 13:49:54,942:INFO:           fairlearn: Not installed
2024-04-13 13:49:54,942:INFO:          deepchecks: Not installed
2024-04-13 13:49:54,943:INFO:             xgboost: Not installed
2024-04-13 13:49:54,943:INFO:            catboost: Not installed
2024-04-13 13:49:54,943:INFO:              kmodes: Not installed
2024-04-13 13:49:54,943:INFO:             mlxtend: Not installed
2024-04-13 13:49:54,943:INFO:       statsforecast: Not installed
2024-04-13 13:49:54,943:INFO:        tune_sklearn: Not installed
2024-04-13 13:49:54,943:INFO:                 ray: Not installed
2024-04-13 13:49:54,943:INFO:            hyperopt: Not installed
2024-04-13 13:49:54,943:INFO:              optuna: Not installed
2024-04-13 13:49:54,943:INFO:               skopt: Not installed
2024-04-13 13:49:54,943:INFO:              mlflow: 2.11.3
2024-04-13 13:49:54,943:INFO:              gradio: Not installed
2024-04-13 13:49:54,943:INFO:             fastapi: Not installed
2024-04-13 13:49:54,943:INFO:             uvicorn: Not installed
2024-04-13 13:49:54,943:INFO:              m2cgen: Not installed
2024-04-13 13:49:54,944:INFO:           evidently: Not installed
2024-04-13 13:49:54,944:INFO:               fugue: Not installed
2024-04-13 13:49:54,944:INFO:           streamlit: 1.33.0
2024-04-13 13:49:54,944:INFO:             prophet: Not installed
2024-04-13 13:49:54,944:INFO:None
2024-04-13 13:49:54,944:INFO:Set up data.
2024-04-13 13:49:54,955:INFO:Set up folding strategy.
2024-04-13 13:49:54,955:INFO:Set up train/test split.
2024-04-13 13:49:54,955:INFO:Set up data.
2024-04-13 13:49:54,961:INFO:Set up index.
2024-04-13 13:49:54,962:INFO:Assigning column types.
2024-04-13 13:49:54,968:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 13:49:55,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 13:49:55,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 13:49:55,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,157:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 13:49:55,158:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 13:49:55,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,203:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 13:49:55,274:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 13:49:55,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 13:49:55,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,438:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 13:49:55,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,671:INFO:Preparing preprocessing pipeline...
2024-04-13 13:49:55,672:INFO:Set up simple imputation.
2024-04-13 13:49:55,673:INFO:Set up feature normalization.
2024-04-13 13:49:55,716:INFO:Finished creating preprocessing pipeline.
2024-04-13 13:49:55,723:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 13:49:55,723:INFO:Creating final display dataframe.
2024-04-13 13:49:55,861:INFO:Setup _display_container:                     Description             Value
0                    Session id              1593
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              9b18
2024-04-13 13:49:55,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:55,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:56,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:56,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 13:49:56,104:INFO:setup() successfully completed in 1.18s...............
2024-04-13 13:49:56,106:INFO:Initializing compare_models()
2024-04-13 13:49:56,106:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 13:49:56,106:INFO:Checking exceptions
2024-04-13 13:49:56,112:INFO:Preparing display monitor
2024-04-13 13:49:56,142:INFO:Initializing Logistic Regression
2024-04-13 13:49:56,142:INFO:Total runtime is 0.0 minutes
2024-04-13 13:49:56,147:INFO:SubProcess create_model() called ==================================
2024-04-13 13:49:56,147:INFO:Initializing create_model()
2024-04-13 13:49:56,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FB4640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 13:49:56,147:INFO:Checking exceptions
2024-04-13 13:49:56,148:INFO:Importing libraries
2024-04-13 13:49:56,148:INFO:Copying training dataset
2024-04-13 13:49:56,158:INFO:Defining folds
2024-04-13 13:49:56,159:INFO:Declaring metric variables
2024-04-13 13:49:56,163:INFO:Importing untrained model
2024-04-13 13:49:56,168:INFO:Logistic Regression Imported successfully
2024-04-13 13:49:56,181:INFO:Starting cross validation
2024-04-13 13:49:56,183:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 13:50:01,023:INFO:Calculating mean and std
2024-04-13 13:50:01,029:INFO:Creating metrics dataframe
2024-04-13 13:50:01,035:INFO:Uploading results into container
2024-04-13 13:50:01,036:INFO:Uploading model into container now
2024-04-13 13:50:01,037:INFO:_master_model_container: 1
2024-04-13 13:50:01,037:INFO:_display_container: 2
2024-04-13 13:50:01,038:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1593, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 13:50:01,038:INFO:create_model() successfully completed......................................
2024-04-13 13:50:01,571:INFO:SubProcess create_model() end ==================================
2024-04-13 13:50:01,572:INFO:Creating metrics dataframe
2024-04-13 13:50:01,581:INFO:Initializing Decision Tree Classifier
2024-04-13 13:50:01,581:INFO:Total runtime is 0.09065565665562948 minutes
2024-04-13 13:50:01,586:INFO:SubProcess create_model() called ==================================
2024-04-13 13:50:01,586:INFO:Initializing create_model()
2024-04-13 13:50:01,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E319FB4640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 13:50:01,586:INFO:Checking exceptions
2024-04-13 13:50:01,586:INFO:Importing libraries
2024-04-13 13:50:01,587:INFO:Copying training dataset
2024-04-13 13:50:01,596:INFO:Defining folds
2024-04-13 13:50:01,596:INFO:Declaring metric variables
2024-04-13 13:50:01,601:INFO:Importing untrained model
2024-04-13 13:50:01,606:INFO:Decision Tree Classifier Imported successfully
2024-04-13 13:50:01,615:INFO:Starting cross validation
2024-04-13 13:50:01,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 13:50:04,911:INFO:Calculating mean and std
2024-04-13 13:50:04,914:INFO:Creating metrics dataframe
2024-04-13 13:50:04,917:INFO:Uploading results into container
2024-04-13 13:50:04,918:INFO:Uploading model into container now
2024-04-13 13:50:04,919:INFO:_master_model_container: 2
2024-04-13 13:50:04,919:INFO:_display_container: 2
2024-04-13 13:50:04,920:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1593, splitter='best')
2024-04-13 13:50:04,920:INFO:create_model() successfully completed......................................
2024-04-13 13:50:05,110:INFO:SubProcess create_model() end ==================================
2024-04-13 13:50:05,110:INFO:Creating metrics dataframe
2024-04-13 13:50:05,131:INFO:Initializing create_model()
2024-04-13 13:50:05,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1593, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 13:50:05,132:INFO:Checking exceptions
2024-04-13 13:50:05,135:INFO:Importing libraries
2024-04-13 13:50:05,135:INFO:Copying training dataset
2024-04-13 13:50:05,144:INFO:Defining folds
2024-04-13 13:50:05,144:INFO:Declaring metric variables
2024-04-13 13:50:05,145:INFO:Importing untrained model
2024-04-13 13:50:05,145:INFO:Declaring custom model
2024-04-13 13:50:05,145:INFO:Decision Tree Classifier Imported successfully
2024-04-13 13:50:05,147:INFO:Cross validation set to False
2024-04-13 13:50:05,147:INFO:Fitting Model
2024-04-13 13:50:05,224:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1593, splitter='best')
2024-04-13 13:50:05,224:INFO:create_model() successfully completed......................................
2024-04-13 13:50:05,394:INFO:Initializing create_model()
2024-04-13 13:50:05,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1593, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 13:50:05,395:INFO:Checking exceptions
2024-04-13 13:50:05,397:INFO:Importing libraries
2024-04-13 13:50:05,398:INFO:Copying training dataset
2024-04-13 13:50:05,406:INFO:Defining folds
2024-04-13 13:50:05,406:INFO:Declaring metric variables
2024-04-13 13:50:05,406:INFO:Importing untrained model
2024-04-13 13:50:05,406:INFO:Declaring custom model
2024-04-13 13:50:05,407:INFO:Logistic Regression Imported successfully
2024-04-13 13:50:05,408:INFO:Cross validation set to False
2024-04-13 13:50:05,408:INFO:Fitting Model
2024-04-13 13:50:05,434:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1593, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 13:50:05,434:INFO:create_model() successfully completed......................................
2024-04-13 13:50:05,619:INFO:_master_model_container: 2
2024-04-13 13:50:05,619:INFO:_display_container: 2
2024-04-13 13:50:05,620:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1593, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1593, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 13:50:05,620:INFO:compare_models() successfully completed......................................
2024-04-13 13:50:05,621:INFO:Initializing predict_model()
2024-04-13 13:50:05,621:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3152810C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1593, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E314A1FF40>)
2024-04-13 13:50:05,621:INFO:Checking exceptions
2024-04-13 13:50:05,622:INFO:Preloading libraries
2024-04-13 14:08:12,957:INFO:PyCaret ClassificationExperiment
2024-04-13 14:08:12,957:INFO:Logging name: clf-default-name
2024-04-13 14:08:12,957:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 14:08:12,957:INFO:version 3.3.0
2024-04-13 14:08:12,957:INFO:Initializing setup()
2024-04-13 14:08:12,957:INFO:self.USI: 2789
2024-04-13 14:08:12,958:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 14:08:12,958:INFO:Checking environment
2024-04-13 14:08:12,958:INFO:python_version: 3.10.14
2024-04-13 14:08:12,958:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 14:08:12,958:INFO:machine: AMD64
2024-04-13 14:08:12,958:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 14:08:12,963:INFO:Memory: svmem(total=17131573248, available=4624109568, percent=73.0, used=12507463680, free=4624109568)
2024-04-13 14:08:12,963:INFO:Physical Core: 8
2024-04-13 14:08:12,963:INFO:Logical Core: 16
2024-04-13 14:08:12,964:INFO:Checking libraries
2024-04-13 14:08:12,964:INFO:System:
2024-04-13 14:08:12,964:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 14:08:12,964:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 14:08:12,964:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 14:08:12,964:INFO:PyCaret required dependencies:
2024-04-13 14:08:12,964:INFO:                 pip: 23.3.1
2024-04-13 14:08:12,964:INFO:          setuptools: 68.2.2
2024-04-13 14:08:12,964:INFO:             pycaret: 3.3.0
2024-04-13 14:08:12,964:INFO:             IPython: 8.23.0
2024-04-13 14:08:12,964:INFO:          ipywidgets: 8.1.2
2024-04-13 14:08:12,964:INFO:                tqdm: 4.66.2
2024-04-13 14:08:12,964:INFO:               numpy: 1.26.4
2024-04-13 14:08:12,964:INFO:              pandas: 2.1.4
2024-04-13 14:08:12,965:INFO:              jinja2: 3.1.3
2024-04-13 14:08:12,965:INFO:               scipy: 1.11.4
2024-04-13 14:08:12,965:INFO:              joblib: 1.3.2
2024-04-13 14:08:12,965:INFO:             sklearn: 1.4.1.post1
2024-04-13 14:08:12,965:INFO:                pyod: 1.1.3
2024-04-13 14:08:12,965:INFO:            imblearn: 0.12.2
2024-04-13 14:08:12,965:INFO:   category_encoders: 2.6.3
2024-04-13 14:08:12,965:INFO:            lightgbm: 4.3.0
2024-04-13 14:08:12,965:INFO:               numba: 0.59.1
2024-04-13 14:08:12,965:INFO:            requests: 2.31.0
2024-04-13 14:08:12,965:INFO:          matplotlib: 3.7.5
2024-04-13 14:08:12,965:INFO:          scikitplot: 0.3.7
2024-04-13 14:08:12,965:INFO:         yellowbrick: 1.5
2024-04-13 14:08:12,965:INFO:              plotly: 5.20.0
2024-04-13 14:08:12,966:INFO:    plotly-resampler: Not installed
2024-04-13 14:08:12,966:INFO:             kaleido: 0.2.1
2024-04-13 14:08:12,966:INFO:           schemdraw: 0.15
2024-04-13 14:08:12,966:INFO:         statsmodels: 0.14.1
2024-04-13 14:08:12,966:INFO:              sktime: 0.28.0
2024-04-13 14:08:12,966:INFO:               tbats: 1.1.3
2024-04-13 14:08:12,966:INFO:            pmdarima: 2.0.4
2024-04-13 14:08:12,966:INFO:              psutil: 5.9.8
2024-04-13 14:08:12,966:INFO:          markupsafe: 2.1.5
2024-04-13 14:08:12,966:INFO:             pickle5: Not installed
2024-04-13 14:08:12,966:INFO:         cloudpickle: 3.0.0
2024-04-13 14:08:12,966:INFO:         deprecation: 2.1.0
2024-04-13 14:08:12,966:INFO:              xxhash: 3.4.1
2024-04-13 14:08:12,966:INFO:           wurlitzer: 3.0.3
2024-04-13 14:08:12,966:INFO:PyCaret optional dependencies:
2024-04-13 14:08:12,967:INFO:                shap: Not installed
2024-04-13 14:08:12,967:INFO:           interpret: Not installed
2024-04-13 14:08:12,967:INFO:                umap: Not installed
2024-04-13 14:08:12,967:INFO:     ydata_profiling: Not installed
2024-04-13 14:08:12,967:INFO:  explainerdashboard: Not installed
2024-04-13 14:08:12,967:INFO:             autoviz: Not installed
2024-04-13 14:08:12,967:INFO:           fairlearn: Not installed
2024-04-13 14:08:12,967:INFO:          deepchecks: Not installed
2024-04-13 14:08:12,967:INFO:             xgboost: Not installed
2024-04-13 14:08:12,967:INFO:            catboost: Not installed
2024-04-13 14:08:12,967:INFO:              kmodes: Not installed
2024-04-13 14:08:12,967:INFO:             mlxtend: Not installed
2024-04-13 14:08:12,967:INFO:       statsforecast: Not installed
2024-04-13 14:08:12,967:INFO:        tune_sklearn: Not installed
2024-04-13 14:08:12,968:INFO:                 ray: Not installed
2024-04-13 14:08:12,968:INFO:            hyperopt: Not installed
2024-04-13 14:08:12,968:INFO:              optuna: Not installed
2024-04-13 14:08:12,968:INFO:               skopt: Not installed
2024-04-13 14:08:12,968:INFO:              mlflow: 2.11.3
2024-04-13 14:08:12,968:INFO:              gradio: Not installed
2024-04-13 14:08:12,968:INFO:             fastapi: Not installed
2024-04-13 14:08:12,968:INFO:             uvicorn: Not installed
2024-04-13 14:08:12,968:INFO:              m2cgen: Not installed
2024-04-13 14:08:12,968:INFO:           evidently: Not installed
2024-04-13 14:08:12,968:INFO:               fugue: Not installed
2024-04-13 14:08:12,968:INFO:           streamlit: 1.33.0
2024-04-13 14:08:12,968:INFO:             prophet: Not installed
2024-04-13 14:08:12,968:INFO:None
2024-04-13 14:08:12,968:INFO:Set up data.
2024-04-13 14:08:12,974:INFO:Set up folding strategy.
2024-04-13 14:08:12,974:INFO:Set up train/test split.
2024-04-13 14:08:12,974:INFO:Set up data.
2024-04-13 14:08:12,980:INFO:Set up index.
2024-04-13 14:08:12,980:INFO:Assigning column types.
2024-04-13 14:08:12,986:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 14:08:13,056:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 14:08:13,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:08:13,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 14:08:13,170:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:08:13,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 14:08:13,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:08:13,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:08:13,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,447:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 14:08:13,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,677:INFO:Preparing preprocessing pipeline...
2024-04-13 14:08:13,679:INFO:Set up simple imputation.
2024-04-13 14:08:13,679:INFO:Set up feature normalization.
2024-04-13 14:08:13,718:INFO:Finished creating preprocessing pipeline.
2024-04-13 14:08:13,725:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 14:08:13,725:INFO:Creating final display dataframe.
2024-04-13 14:08:13,857:INFO:Setup _display_container:                     Description             Value
0                    Session id              1088
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2789
2024-04-13 14:08:13,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:13,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:14,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:14,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:08:14,097:INFO:setup() successfully completed in 1.14s...............
2024-04-13 14:08:14,098:INFO:Initializing compare_models()
2024-04-13 14:08:14,098:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 14:08:14,098:INFO:Checking exceptions
2024-04-13 14:08:14,104:INFO:Preparing display monitor
2024-04-13 14:08:14,132:INFO:Initializing Logistic Regression
2024-04-13 14:08:14,132:INFO:Total runtime is 0.0 minutes
2024-04-13 14:08:14,136:INFO:SubProcess create_model() called ==================================
2024-04-13 14:08:14,136:INFO:Initializing create_model()
2024-04-13 14:08:14,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31FAA23E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:08:14,137:INFO:Checking exceptions
2024-04-13 14:08:14,137:INFO:Importing libraries
2024-04-13 14:08:14,137:INFO:Copying training dataset
2024-04-13 14:08:14,147:INFO:Defining folds
2024-04-13 14:08:14,147:INFO:Declaring metric variables
2024-04-13 14:08:14,152:INFO:Importing untrained model
2024-04-13 14:08:14,157:INFO:Logistic Regression Imported successfully
2024-04-13 14:08:14,166:INFO:Starting cross validation
2024-04-13 14:08:14,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 14:08:19,118:INFO:Calculating mean and std
2024-04-13 14:08:19,122:INFO:Creating metrics dataframe
2024-04-13 14:08:19,127:INFO:Uploading results into container
2024-04-13 14:08:19,128:INFO:Uploading model into container now
2024-04-13 14:08:19,129:INFO:_master_model_container: 1
2024-04-13 14:08:19,129:INFO:_display_container: 2
2024-04-13 14:08:19,131:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 14:08:19,131:INFO:create_model() successfully completed......................................
2024-04-13 14:08:19,323:INFO:SubProcess create_model() end ==================================
2024-04-13 14:08:19,323:INFO:Creating metrics dataframe
2024-04-13 14:08:19,331:INFO:Initializing Decision Tree Classifier
2024-04-13 14:08:19,332:INFO:Total runtime is 0.08666205406188965 minutes
2024-04-13 14:08:19,336:INFO:SubProcess create_model() called ==================================
2024-04-13 14:08:19,336:INFO:Initializing create_model()
2024-04-13 14:08:19,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31FAA23E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:08:19,337:INFO:Checking exceptions
2024-04-13 14:08:19,337:INFO:Importing libraries
2024-04-13 14:08:19,337:INFO:Copying training dataset
2024-04-13 14:08:19,346:INFO:Defining folds
2024-04-13 14:08:19,346:INFO:Declaring metric variables
2024-04-13 14:08:19,351:INFO:Importing untrained model
2024-04-13 14:08:19,355:INFO:Decision Tree Classifier Imported successfully
2024-04-13 14:08:19,364:INFO:Starting cross validation
2024-04-13 14:08:19,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 14:08:22,695:INFO:Calculating mean and std
2024-04-13 14:08:22,698:INFO:Creating metrics dataframe
2024-04-13 14:08:22,702:INFO:Uploading results into container
2024-04-13 14:08:22,703:INFO:Uploading model into container now
2024-04-13 14:08:22,703:INFO:_master_model_container: 2
2024-04-13 14:08:22,704:INFO:_display_container: 2
2024-04-13 14:08:22,704:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1088, splitter='best')
2024-04-13 14:08:22,705:INFO:create_model() successfully completed......................................
2024-04-13 14:08:22,889:INFO:SubProcess create_model() end ==================================
2024-04-13 14:08:22,889:INFO:Creating metrics dataframe
2024-04-13 14:08:22,910:INFO:Initializing create_model()
2024-04-13 14:08:22,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1088, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:08:22,911:INFO:Checking exceptions
2024-04-13 14:08:22,913:INFO:Importing libraries
2024-04-13 14:08:22,913:INFO:Copying training dataset
2024-04-13 14:08:22,922:INFO:Defining folds
2024-04-13 14:08:22,922:INFO:Declaring metric variables
2024-04-13 14:08:22,923:INFO:Importing untrained model
2024-04-13 14:08:22,923:INFO:Declaring custom model
2024-04-13 14:08:22,924:INFO:Decision Tree Classifier Imported successfully
2024-04-13 14:08:22,925:INFO:Cross validation set to False
2024-04-13 14:08:22,925:INFO:Fitting Model
2024-04-13 14:08:23,002:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1088, splitter='best')
2024-04-13 14:08:23,002:INFO:create_model() successfully completed......................................
2024-04-13 14:08:23,174:INFO:Initializing create_model()
2024-04-13 14:08:23,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:08:23,175:INFO:Checking exceptions
2024-04-13 14:08:23,177:INFO:Importing libraries
2024-04-13 14:08:23,177:INFO:Copying training dataset
2024-04-13 14:08:23,185:INFO:Defining folds
2024-04-13 14:08:23,185:INFO:Declaring metric variables
2024-04-13 14:08:23,186:INFO:Importing untrained model
2024-04-13 14:08:23,186:INFO:Declaring custom model
2024-04-13 14:08:23,187:INFO:Logistic Regression Imported successfully
2024-04-13 14:08:23,188:INFO:Cross validation set to False
2024-04-13 14:08:23,188:INFO:Fitting Model
2024-04-13 14:08:23,212:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 14:08:23,212:INFO:create_model() successfully completed......................................
2024-04-13 14:08:23,396:INFO:_master_model_container: 2
2024-04-13 14:08:23,396:INFO:_display_container: 2
2024-04-13 14:08:23,397:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1088, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 14:08:23,397:INFO:compare_models() successfully completed......................................
2024-04-13 14:08:23,398:INFO:Initializing predict_model()
2024-04-13 14:08:23,398:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1088, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E314D976D0>)
2024-04-13 14:08:23,398:INFO:Checking exceptions
2024-04-13 14:08:23,398:INFO:Preloading libraries
2024-04-13 14:09:35,503:INFO:Initializing predict_model()
2024-04-13 14:09:35,503:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31CDC4670>)
2024-04-13 14:09:35,503:INFO:Checking exceptions
2024-04-13 14:09:35,504:INFO:Preloading libraries
2024-04-13 14:10:38,833:INFO:Initializing predict_model()
2024-04-13 14:10:38,833:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A0FB6A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31244FE20>)
2024-04-13 14:10:38,833:INFO:Checking exceptions
2024-04-13 14:10:38,833:INFO:Preloading libraries
2024-04-13 14:13:30,751:INFO:PyCaret ClassificationExperiment
2024-04-13 14:13:30,751:INFO:Logging name: clf-default-name
2024-04-13 14:13:30,751:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 14:13:30,751:INFO:version 3.3.0
2024-04-13 14:13:30,751:INFO:Initializing setup()
2024-04-13 14:13:30,751:INFO:self.USI: b788
2024-04-13 14:13:30,751:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 14:13:30,751:INFO:Checking environment
2024-04-13 14:13:30,751:INFO:python_version: 3.10.14
2024-04-13 14:13:30,751:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 14:13:30,751:INFO:machine: AMD64
2024-04-13 14:13:30,752:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 14:13:30,757:INFO:Memory: svmem(total=17131573248, available=4553035776, percent=73.4, used=12578537472, free=4553035776)
2024-04-13 14:13:30,757:INFO:Physical Core: 8
2024-04-13 14:13:30,757:INFO:Logical Core: 16
2024-04-13 14:13:30,757:INFO:Checking libraries
2024-04-13 14:13:30,757:INFO:System:
2024-04-13 14:13:30,757:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 14:13:30,757:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 14:13:30,757:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 14:13:30,757:INFO:PyCaret required dependencies:
2024-04-13 14:13:30,757:INFO:                 pip: 23.3.1
2024-04-13 14:13:30,758:INFO:          setuptools: 68.2.2
2024-04-13 14:13:30,758:INFO:             pycaret: 3.3.0
2024-04-13 14:13:30,758:INFO:             IPython: 8.23.0
2024-04-13 14:13:30,758:INFO:          ipywidgets: 8.1.2
2024-04-13 14:13:30,758:INFO:                tqdm: 4.66.2
2024-04-13 14:13:30,758:INFO:               numpy: 1.26.4
2024-04-13 14:13:30,758:INFO:              pandas: 2.1.4
2024-04-13 14:13:30,758:INFO:              jinja2: 3.1.3
2024-04-13 14:13:30,758:INFO:               scipy: 1.11.4
2024-04-13 14:13:30,758:INFO:              joblib: 1.3.2
2024-04-13 14:13:30,758:INFO:             sklearn: 1.4.1.post1
2024-04-13 14:13:30,758:INFO:                pyod: 1.1.3
2024-04-13 14:13:30,758:INFO:            imblearn: 0.12.2
2024-04-13 14:13:30,758:INFO:   category_encoders: 2.6.3
2024-04-13 14:13:30,759:INFO:            lightgbm: 4.3.0
2024-04-13 14:13:30,759:INFO:               numba: 0.59.1
2024-04-13 14:13:30,759:INFO:            requests: 2.31.0
2024-04-13 14:13:30,759:INFO:          matplotlib: 3.7.5
2024-04-13 14:13:30,759:INFO:          scikitplot: 0.3.7
2024-04-13 14:13:30,759:INFO:         yellowbrick: 1.5
2024-04-13 14:13:30,759:INFO:              plotly: 5.20.0
2024-04-13 14:13:30,759:INFO:    plotly-resampler: Not installed
2024-04-13 14:13:30,759:INFO:             kaleido: 0.2.1
2024-04-13 14:13:30,759:INFO:           schemdraw: 0.15
2024-04-13 14:13:30,759:INFO:         statsmodels: 0.14.1
2024-04-13 14:13:30,759:INFO:              sktime: 0.28.0
2024-04-13 14:13:30,759:INFO:               tbats: 1.1.3
2024-04-13 14:13:30,759:INFO:            pmdarima: 2.0.4
2024-04-13 14:13:30,759:INFO:              psutil: 5.9.8
2024-04-13 14:13:30,760:INFO:          markupsafe: 2.1.5
2024-04-13 14:13:30,760:INFO:             pickle5: Not installed
2024-04-13 14:13:30,760:INFO:         cloudpickle: 3.0.0
2024-04-13 14:13:30,760:INFO:         deprecation: 2.1.0
2024-04-13 14:13:30,760:INFO:              xxhash: 3.4.1
2024-04-13 14:13:30,760:INFO:           wurlitzer: 3.0.3
2024-04-13 14:13:30,760:INFO:PyCaret optional dependencies:
2024-04-13 14:13:30,760:INFO:                shap: Not installed
2024-04-13 14:13:30,760:INFO:           interpret: Not installed
2024-04-13 14:13:30,760:INFO:                umap: Not installed
2024-04-13 14:13:30,760:INFO:     ydata_profiling: Not installed
2024-04-13 14:13:30,760:INFO:  explainerdashboard: Not installed
2024-04-13 14:13:30,760:INFO:             autoviz: Not installed
2024-04-13 14:13:30,761:INFO:           fairlearn: Not installed
2024-04-13 14:13:30,761:INFO:          deepchecks: Not installed
2024-04-13 14:13:30,761:INFO:             xgboost: Not installed
2024-04-13 14:13:30,761:INFO:            catboost: Not installed
2024-04-13 14:13:30,761:INFO:              kmodes: Not installed
2024-04-13 14:13:30,761:INFO:             mlxtend: Not installed
2024-04-13 14:13:30,761:INFO:       statsforecast: Not installed
2024-04-13 14:13:30,761:INFO:        tune_sklearn: Not installed
2024-04-13 14:13:30,761:INFO:                 ray: Not installed
2024-04-13 14:13:30,761:INFO:            hyperopt: Not installed
2024-04-13 14:13:30,761:INFO:              optuna: Not installed
2024-04-13 14:13:30,761:INFO:               skopt: Not installed
2024-04-13 14:13:30,761:INFO:              mlflow: 2.11.3
2024-04-13 14:13:30,761:INFO:              gradio: Not installed
2024-04-13 14:13:30,761:INFO:             fastapi: Not installed
2024-04-13 14:13:30,762:INFO:             uvicorn: Not installed
2024-04-13 14:13:30,762:INFO:              m2cgen: Not installed
2024-04-13 14:13:30,762:INFO:           evidently: Not installed
2024-04-13 14:13:30,762:INFO:               fugue: Not installed
2024-04-13 14:13:30,762:INFO:           streamlit: 1.33.0
2024-04-13 14:13:30,762:INFO:             prophet: Not installed
2024-04-13 14:13:30,762:INFO:None
2024-04-13 14:13:30,762:INFO:Set up data.
2024-04-13 14:13:30,768:INFO:Set up folding strategy.
2024-04-13 14:13:30,768:INFO:Set up train/test split.
2024-04-13 14:13:30,768:INFO:Set up data.
2024-04-13 14:13:30,773:INFO:Set up index.
2024-04-13 14:13:30,774:INFO:Assigning column types.
2024-04-13 14:13:30,779:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 14:13:30,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 14:13:30,850:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:13:30,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:30,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:30,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 14:13:30,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:13:31,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,012:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 14:13:31,082:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:13:31,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:13:31,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,241:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 14:13:31,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,473:INFO:Preparing preprocessing pipeline...
2024-04-13 14:13:31,475:INFO:Set up simple imputation.
2024-04-13 14:13:31,475:INFO:Set up feature normalization.
2024-04-13 14:13:31,515:INFO:Finished creating preprocessing pipeline.
2024-04-13 14:13:31,522:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 14:13:31,522:INFO:Creating final display dataframe.
2024-04-13 14:13:31,658:INFO:Setup _display_container:                     Description             Value
0                    Session id              3701
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b788
2024-04-13 14:13:31,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:13:31,897:INFO:setup() successfully completed in 1.15s...............
2024-04-13 14:13:31,899:INFO:Initializing compare_models()
2024-04-13 14:13:31,899:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 14:13:31,899:INFO:Checking exceptions
2024-04-13 14:13:31,905:INFO:Preparing display monitor
2024-04-13 14:13:31,933:INFO:Initializing Logistic Regression
2024-04-13 14:13:31,933:INFO:Total runtime is 0.0 minutes
2024-04-13 14:13:31,938:INFO:SubProcess create_model() called ==================================
2024-04-13 14:13:31,938:INFO:Initializing create_model()
2024-04-13 14:13:31,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31A1815A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:13:31,938:INFO:Checking exceptions
2024-04-13 14:13:31,939:INFO:Importing libraries
2024-04-13 14:13:31,939:INFO:Copying training dataset
2024-04-13 14:13:31,950:INFO:Defining folds
2024-04-13 14:13:31,951:INFO:Declaring metric variables
2024-04-13 14:13:31,957:INFO:Importing untrained model
2024-04-13 14:13:31,962:INFO:Logistic Regression Imported successfully
2024-04-13 14:13:31,971:INFO:Starting cross validation
2024-04-13 14:13:31,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 14:13:37,121:INFO:Calculating mean and std
2024-04-13 14:13:37,125:INFO:Creating metrics dataframe
2024-04-13 14:13:37,128:INFO:Uploading results into container
2024-04-13 14:13:37,129:INFO:Uploading model into container now
2024-04-13 14:13:37,130:INFO:_master_model_container: 1
2024-04-13 14:13:37,130:INFO:_display_container: 2
2024-04-13 14:13:37,130:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 14:13:37,131:INFO:create_model() successfully completed......................................
2024-04-13 14:13:37,325:INFO:SubProcess create_model() end ==================================
2024-04-13 14:13:37,325:INFO:Creating metrics dataframe
2024-04-13 14:13:37,334:INFO:Initializing Decision Tree Classifier
2024-04-13 14:13:37,334:INFO:Total runtime is 0.0900151014328003 minutes
2024-04-13 14:13:37,338:INFO:SubProcess create_model() called ==================================
2024-04-13 14:13:37,339:INFO:Initializing create_model()
2024-04-13 14:13:37,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E31A1815A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:13:37,339:INFO:Checking exceptions
2024-04-13 14:13:37,339:INFO:Importing libraries
2024-04-13 14:13:37,340:INFO:Copying training dataset
2024-04-13 14:13:37,349:INFO:Defining folds
2024-04-13 14:13:37,349:INFO:Declaring metric variables
2024-04-13 14:13:37,354:INFO:Importing untrained model
2024-04-13 14:13:37,359:INFO:Decision Tree Classifier Imported successfully
2024-04-13 14:13:37,368:INFO:Starting cross validation
2024-04-13 14:13:37,369:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 14:13:40,850:INFO:Calculating mean and std
2024-04-13 14:13:40,854:INFO:Creating metrics dataframe
2024-04-13 14:13:40,866:INFO:Uploading results into container
2024-04-13 14:13:40,868:INFO:Uploading model into container now
2024-04-13 14:13:40,869:INFO:_master_model_container: 2
2024-04-13 14:13:40,870:INFO:_display_container: 2
2024-04-13 14:13:40,871:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3701, splitter='best')
2024-04-13 14:13:40,871:INFO:create_model() successfully completed......................................
2024-04-13 14:13:41,105:INFO:SubProcess create_model() end ==================================
2024-04-13 14:13:41,106:INFO:Creating metrics dataframe
2024-04-13 14:13:41,127:INFO:Initializing create_model()
2024-04-13 14:13:41,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3701, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:13:41,127:INFO:Checking exceptions
2024-04-13 14:13:41,130:INFO:Importing libraries
2024-04-13 14:13:41,130:INFO:Copying training dataset
2024-04-13 14:13:41,139:INFO:Defining folds
2024-04-13 14:13:41,139:INFO:Declaring metric variables
2024-04-13 14:13:41,139:INFO:Importing untrained model
2024-04-13 14:13:41,139:INFO:Declaring custom model
2024-04-13 14:13:41,140:INFO:Decision Tree Classifier Imported successfully
2024-04-13 14:13:41,141:INFO:Cross validation set to False
2024-04-13 14:13:41,141:INFO:Fitting Model
2024-04-13 14:13:41,216:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3701, splitter='best')
2024-04-13 14:13:41,216:INFO:create_model() successfully completed......................................
2024-04-13 14:13:41,390:INFO:Initializing create_model()
2024-04-13 14:13:41,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:13:41,391:INFO:Checking exceptions
2024-04-13 14:13:41,393:INFO:Importing libraries
2024-04-13 14:13:41,393:INFO:Copying training dataset
2024-04-13 14:13:41,401:INFO:Defining folds
2024-04-13 14:13:41,401:INFO:Declaring metric variables
2024-04-13 14:13:41,401:INFO:Importing untrained model
2024-04-13 14:13:41,401:INFO:Declaring custom model
2024-04-13 14:13:41,402:INFO:Logistic Regression Imported successfully
2024-04-13 14:13:41,403:INFO:Cross validation set to False
2024-04-13 14:13:41,403:INFO:Fitting Model
2024-04-13 14:13:41,428:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 14:13:41,428:INFO:create_model() successfully completed......................................
2024-04-13 14:13:41,629:INFO:_master_model_container: 2
2024-04-13 14:13:41,630:INFO:_display_container: 2
2024-04-13 14:13:41,631:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3701, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 14:13:41,631:INFO:compare_models() successfully completed......................................
2024-04-13 14:13:41,632:INFO:Initializing predict_model()
2024-04-13 14:13:41,632:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E314D1E0E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3701, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E315647E20>)
2024-04-13 14:13:41,632:INFO:Checking exceptions
2024-04-13 14:13:41,632:INFO:Preloading libraries
2024-04-13 14:31:40,673:INFO:PyCaret ClassificationExperiment
2024-04-13 14:31:40,673:INFO:Logging name: clf-default-name
2024-04-13 14:31:40,673:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 14:31:40,673:INFO:version 3.3.0
2024-04-13 14:31:40,674:INFO:Initializing setup()
2024-04-13 14:31:40,674:INFO:self.USI: fac1
2024-04-13 14:31:40,674:INFO:self._variable_keys: {'y', 'html_param', 'X_test', 'fix_imbalance', 'y_test', 'exp_id', 'X_train', 'target_param', 'data', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'gpu_param', 'idx', 'pipeline', 'X', 'is_multiclass', 'seed', 'USI', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'n_jobs_param', '_available_plots', 'y_train'}
2024-04-13 14:31:40,674:INFO:Checking environment
2024-04-13 14:31:40,674:INFO:python_version: 3.10.14
2024-04-13 14:31:40,674:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 14:31:40,674:INFO:machine: AMD64
2024-04-13 14:31:40,674:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 14:31:40,679:INFO:Memory: svmem(total=17131573248, available=4925087744, percent=71.3, used=12206485504, free=4925087744)
2024-04-13 14:31:40,680:INFO:Physical Core: 8
2024-04-13 14:31:40,680:INFO:Logical Core: 16
2024-04-13 14:31:40,680:INFO:Checking libraries
2024-04-13 14:31:40,680:INFO:System:
2024-04-13 14:31:40,680:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 14:31:40,680:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 14:31:40,680:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 14:31:40,680:INFO:PyCaret required dependencies:
2024-04-13 14:31:40,680:INFO:                 pip: 23.3.1
2024-04-13 14:31:40,680:INFO:          setuptools: 68.2.2
2024-04-13 14:31:40,680:INFO:             pycaret: 3.3.0
2024-04-13 14:31:40,680:INFO:             IPython: 8.23.0
2024-04-13 14:31:40,680:INFO:          ipywidgets: 8.1.2
2024-04-13 14:31:40,681:INFO:                tqdm: 4.66.2
2024-04-13 14:31:40,681:INFO:               numpy: 1.26.4
2024-04-13 14:31:40,681:INFO:              pandas: 2.1.4
2024-04-13 14:31:40,681:INFO:              jinja2: 3.1.3
2024-04-13 14:31:40,681:INFO:               scipy: 1.11.4
2024-04-13 14:31:40,681:INFO:              joblib: 1.3.2
2024-04-13 14:31:40,681:INFO:             sklearn: 1.4.1.post1
2024-04-13 14:31:40,681:INFO:                pyod: 1.1.3
2024-04-13 14:31:40,681:INFO:            imblearn: 0.12.2
2024-04-13 14:31:40,681:INFO:   category_encoders: 2.6.3
2024-04-13 14:31:40,681:INFO:            lightgbm: 4.3.0
2024-04-13 14:31:40,681:INFO:               numba: 0.59.1
2024-04-13 14:31:40,681:INFO:            requests: 2.31.0
2024-04-13 14:31:40,682:INFO:          matplotlib: 3.7.5
2024-04-13 14:31:40,682:INFO:          scikitplot: 0.3.7
2024-04-13 14:31:40,682:INFO:         yellowbrick: 1.5
2024-04-13 14:31:40,682:INFO:              plotly: 5.20.0
2024-04-13 14:31:40,682:INFO:    plotly-resampler: Not installed
2024-04-13 14:31:40,682:INFO:             kaleido: 0.2.1
2024-04-13 14:31:40,682:INFO:           schemdraw: 0.15
2024-04-13 14:31:40,682:INFO:         statsmodels: 0.14.1
2024-04-13 14:31:40,682:INFO:              sktime: 0.28.0
2024-04-13 14:31:40,682:INFO:               tbats: 1.1.3
2024-04-13 14:31:40,682:INFO:            pmdarima: 2.0.4
2024-04-13 14:31:40,682:INFO:              psutil: 5.9.8
2024-04-13 14:31:40,682:INFO:          markupsafe: 2.1.5
2024-04-13 14:31:40,682:INFO:             pickle5: Not installed
2024-04-13 14:31:40,682:INFO:         cloudpickle: 3.0.0
2024-04-13 14:31:40,683:INFO:         deprecation: 2.1.0
2024-04-13 14:31:40,683:INFO:              xxhash: 3.4.1
2024-04-13 14:31:40,683:INFO:           wurlitzer: 3.0.3
2024-04-13 14:31:40,683:INFO:PyCaret optional dependencies:
2024-04-13 14:31:40,683:INFO:                shap: Not installed
2024-04-13 14:31:40,683:INFO:           interpret: Not installed
2024-04-13 14:31:40,683:INFO:                umap: Not installed
2024-04-13 14:31:40,683:INFO:     ydata_profiling: Not installed
2024-04-13 14:31:40,683:INFO:  explainerdashboard: Not installed
2024-04-13 14:31:40,683:INFO:             autoviz: Not installed
2024-04-13 14:31:40,683:INFO:           fairlearn: Not installed
2024-04-13 14:31:40,683:INFO:          deepchecks: Not installed
2024-04-13 14:31:40,683:INFO:             xgboost: Not installed
2024-04-13 14:31:40,683:INFO:            catboost: Not installed
2024-04-13 14:31:40,683:INFO:              kmodes: Not installed
2024-04-13 14:31:40,684:INFO:             mlxtend: Not installed
2024-04-13 14:31:40,684:INFO:       statsforecast: Not installed
2024-04-13 14:31:40,684:INFO:        tune_sklearn: Not installed
2024-04-13 14:31:40,684:INFO:                 ray: Not installed
2024-04-13 14:31:40,684:INFO:            hyperopt: Not installed
2024-04-13 14:31:40,684:INFO:              optuna: Not installed
2024-04-13 14:31:40,684:INFO:               skopt: Not installed
2024-04-13 14:31:40,684:INFO:              mlflow: 2.11.3
2024-04-13 14:31:40,684:INFO:              gradio: Not installed
2024-04-13 14:31:40,684:INFO:             fastapi: Not installed
2024-04-13 14:31:40,684:INFO:             uvicorn: Not installed
2024-04-13 14:31:40,684:INFO:              m2cgen: Not installed
2024-04-13 14:31:40,684:INFO:           evidently: Not installed
2024-04-13 14:31:40,684:INFO:               fugue: Not installed
2024-04-13 14:31:40,684:INFO:           streamlit: 1.33.0
2024-04-13 14:31:40,685:INFO:             prophet: Not installed
2024-04-13 14:31:40,685:INFO:None
2024-04-13 14:31:40,685:INFO:Set up data.
2024-04-13 14:31:40,691:INFO:Set up folding strategy.
2024-04-13 14:31:40,691:INFO:Set up train/test split.
2024-04-13 14:31:40,692:INFO:Set up data.
2024-04-13 14:31:40,697:INFO:Set up index.
2024-04-13 14:31:40,697:INFO:Assigning column types.
2024-04-13 14:31:40,703:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 14:31:40,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 14:31:40,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:31:40,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:40,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:40,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 14:31:40,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:31:40,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:40,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:40,935:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 14:31:41,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:31:41,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,123:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 14:31:41,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,167:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 14:31:41,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,400:INFO:Preparing preprocessing pipeline...
2024-04-13 14:31:41,401:INFO:Set up simple imputation.
2024-04-13 14:31:41,402:INFO:Set up feature normalization.
2024-04-13 14:31:41,441:INFO:Finished creating preprocessing pipeline.
2024-04-13 14:31:41,448:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 14:31:41,448:INFO:Creating final display dataframe.
2024-04-13 14:31:41,583:INFO:Setup _display_container:                     Description             Value
0                    Session id              1816
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              fac1
2024-04-13 14:31:41,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 14:31:41,823:INFO:setup() successfully completed in 1.15s...............
2024-04-13 14:31:41,824:INFO:Initializing compare_models()
2024-04-13 14:31:41,824:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 14:31:41,825:INFO:Checking exceptions
2024-04-13 14:31:41,831:INFO:Preparing display monitor
2024-04-13 14:31:41,859:INFO:Initializing Logistic Regression
2024-04-13 14:31:41,859:INFO:Total runtime is 0.0 minutes
2024-04-13 14:31:41,863:INFO:SubProcess create_model() called ==================================
2024-04-13 14:31:41,864:INFO:Initializing create_model()
2024-04-13 14:31:41,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E3156317E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:31:41,864:INFO:Checking exceptions
2024-04-13 14:31:41,864:INFO:Importing libraries
2024-04-13 14:31:41,864:INFO:Copying training dataset
2024-04-13 14:31:41,875:INFO:Defining folds
2024-04-13 14:31:41,875:INFO:Declaring metric variables
2024-04-13 14:31:41,880:INFO:Importing untrained model
2024-04-13 14:31:41,884:INFO:Logistic Regression Imported successfully
2024-04-13 14:31:41,894:INFO:Starting cross validation
2024-04-13 14:31:41,896:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 14:31:46,796:INFO:Calculating mean and std
2024-04-13 14:31:46,799:INFO:Creating metrics dataframe
2024-04-13 14:31:46,802:INFO:Uploading results into container
2024-04-13 14:31:46,803:INFO:Uploading model into container now
2024-04-13 14:31:46,804:INFO:_master_model_container: 1
2024-04-13 14:31:46,804:INFO:_display_container: 2
2024-04-13 14:31:46,805:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1816, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 14:31:46,805:INFO:create_model() successfully completed......................................
2024-04-13 14:31:47,002:INFO:SubProcess create_model() end ==================================
2024-04-13 14:31:47,002:INFO:Creating metrics dataframe
2024-04-13 14:31:47,011:INFO:Initializing Decision Tree Classifier
2024-04-13 14:31:47,011:INFO:Total runtime is 0.08586981693903604 minutes
2024-04-13 14:31:47,016:INFO:SubProcess create_model() called ==================================
2024-04-13 14:31:47,016:INFO:Initializing create_model()
2024-04-13 14:31:47,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E3156317E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:31:47,016:INFO:Checking exceptions
2024-04-13 14:31:47,017:INFO:Importing libraries
2024-04-13 14:31:47,017:INFO:Copying training dataset
2024-04-13 14:31:47,026:INFO:Defining folds
2024-04-13 14:31:47,026:INFO:Declaring metric variables
2024-04-13 14:31:47,031:INFO:Importing untrained model
2024-04-13 14:31:47,036:INFO:Decision Tree Classifier Imported successfully
2024-04-13 14:31:47,045:INFO:Starting cross validation
2024-04-13 14:31:47,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 14:31:50,510:INFO:Calculating mean and std
2024-04-13 14:31:50,514:INFO:Creating metrics dataframe
2024-04-13 14:31:50,516:INFO:Uploading results into container
2024-04-13 14:31:50,517:INFO:Uploading model into container now
2024-04-13 14:31:50,518:INFO:_master_model_container: 2
2024-04-13 14:31:50,518:INFO:_display_container: 2
2024-04-13 14:31:50,518:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1816, splitter='best')
2024-04-13 14:31:50,519:INFO:create_model() successfully completed......................................
2024-04-13 14:31:50,712:INFO:SubProcess create_model() end ==================================
2024-04-13 14:31:50,712:INFO:Creating metrics dataframe
2024-04-13 14:31:50,734:INFO:Initializing create_model()
2024-04-13 14:31:50,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1816, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:31:50,734:INFO:Checking exceptions
2024-04-13 14:31:50,736:INFO:Importing libraries
2024-04-13 14:31:50,736:INFO:Copying training dataset
2024-04-13 14:31:50,744:INFO:Defining folds
2024-04-13 14:31:50,745:INFO:Declaring metric variables
2024-04-13 14:31:50,745:INFO:Importing untrained model
2024-04-13 14:31:50,745:INFO:Declaring custom model
2024-04-13 14:31:50,746:INFO:Decision Tree Classifier Imported successfully
2024-04-13 14:31:50,747:INFO:Cross validation set to False
2024-04-13 14:31:50,747:INFO:Fitting Model
2024-04-13 14:31:50,825:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1816, splitter='best')
2024-04-13 14:31:50,825:INFO:create_model() successfully completed......................................
2024-04-13 14:31:51,002:INFO:Initializing create_model()
2024-04-13 14:31:51,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1816, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 14:31:51,003:INFO:Checking exceptions
2024-04-13 14:31:51,005:INFO:Importing libraries
2024-04-13 14:31:51,005:INFO:Copying training dataset
2024-04-13 14:31:51,014:INFO:Defining folds
2024-04-13 14:31:51,015:INFO:Declaring metric variables
2024-04-13 14:31:51,015:INFO:Importing untrained model
2024-04-13 14:31:51,015:INFO:Declaring custom model
2024-04-13 14:31:51,016:INFO:Logistic Regression Imported successfully
2024-04-13 14:31:51,017:INFO:Cross validation set to False
2024-04-13 14:31:51,017:INFO:Fitting Model
2024-04-13 14:31:51,042:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1816, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 14:31:51,042:INFO:create_model() successfully completed......................................
2024-04-13 14:31:51,233:INFO:_master_model_container: 2
2024-04-13 14:31:51,234:INFO:_display_container: 2
2024-04-13 14:31:51,235:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1816, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1816, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 14:31:51,235:INFO:compare_models() successfully completed......................................
2024-04-13 14:31:51,236:INFO:Initializing predict_model()
2024-04-13 14:31:51,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E31A111CF0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1816, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E31244FE20>)
2024-04-13 14:31:51,236:INFO:Checking exceptions
2024-04-13 14:31:51,237:INFO:Preloading libraries
2024-04-13 17:38:49,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 17:38:49,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 17:38:49,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 17:38:49,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 17:38:51,304:INFO:PyCaret ClassificationExperiment
2024-04-13 17:38:51,304:INFO:Logging name: clf-default-name
2024-04-13 17:38:51,304:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 17:38:51,304:INFO:version 3.3.0
2024-04-13 17:38:51,304:INFO:Initializing setup()
2024-04-13 17:38:51,304:INFO:self.USI: ae7a
2024-04-13 17:38:51,304:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 17:38:51,305:INFO:Checking environment
2024-04-13 17:38:51,305:INFO:python_version: 3.10.14
2024-04-13 17:38:51,305:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 17:38:51,305:INFO:machine: AMD64
2024-04-13 17:38:51,305:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 17:38:51,311:INFO:Memory: svmem(total=17131573248, available=3952996352, percent=76.9, used=13178576896, free=3952996352)
2024-04-13 17:38:51,311:INFO:Physical Core: 8
2024-04-13 17:38:51,311:INFO:Logical Core: 16
2024-04-13 17:38:51,311:INFO:Checking libraries
2024-04-13 17:38:51,311:INFO:System:
2024-04-13 17:38:51,311:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 17:38:51,311:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 17:38:51,311:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 17:38:51,311:INFO:PyCaret required dependencies:
2024-04-13 17:38:51,351:INFO:                 pip: 23.3.1
2024-04-13 17:38:51,351:INFO:          setuptools: 68.2.2
2024-04-13 17:38:51,351:INFO:             pycaret: 3.3.0
2024-04-13 17:38:51,351:INFO:             IPython: 8.23.0
2024-04-13 17:38:51,351:INFO:          ipywidgets: 8.1.2
2024-04-13 17:38:51,352:INFO:                tqdm: 4.66.2
2024-04-13 17:38:51,352:INFO:               numpy: 1.26.4
2024-04-13 17:38:51,352:INFO:              pandas: 2.1.4
2024-04-13 17:38:51,352:INFO:              jinja2: 3.1.3
2024-04-13 17:38:51,352:INFO:               scipy: 1.11.4
2024-04-13 17:38:51,352:INFO:              joblib: 1.3.2
2024-04-13 17:38:51,352:INFO:             sklearn: 1.4.1.post1
2024-04-13 17:38:51,352:INFO:                pyod: 1.1.3
2024-04-13 17:38:51,352:INFO:            imblearn: 0.12.2
2024-04-13 17:38:51,352:INFO:   category_encoders: 2.6.3
2024-04-13 17:38:51,352:INFO:            lightgbm: 4.3.0
2024-04-13 17:38:51,352:INFO:               numba: 0.59.1
2024-04-13 17:38:51,352:INFO:            requests: 2.31.0
2024-04-13 17:38:51,352:INFO:          matplotlib: 3.7.5
2024-04-13 17:38:51,352:INFO:          scikitplot: 0.3.7
2024-04-13 17:38:51,353:INFO:         yellowbrick: 1.5
2024-04-13 17:38:51,353:INFO:              plotly: 5.20.0
2024-04-13 17:38:51,353:INFO:    plotly-resampler: Not installed
2024-04-13 17:38:51,353:INFO:             kaleido: 0.2.1
2024-04-13 17:38:51,353:INFO:           schemdraw: 0.15
2024-04-13 17:38:51,353:INFO:         statsmodels: 0.14.1
2024-04-13 17:38:51,353:INFO:              sktime: 0.28.0
2024-04-13 17:38:51,353:INFO:               tbats: 1.1.3
2024-04-13 17:38:51,353:INFO:            pmdarima: 2.0.4
2024-04-13 17:38:51,353:INFO:              psutil: 5.9.8
2024-04-13 17:38:51,353:INFO:          markupsafe: 2.1.5
2024-04-13 17:38:51,353:INFO:             pickle5: Not installed
2024-04-13 17:38:51,353:INFO:         cloudpickle: 3.0.0
2024-04-13 17:38:51,353:INFO:         deprecation: 2.1.0
2024-04-13 17:38:51,353:INFO:              xxhash: 3.4.1
2024-04-13 17:38:51,354:INFO:           wurlitzer: 3.0.3
2024-04-13 17:38:51,354:INFO:PyCaret optional dependencies:
2024-04-13 17:38:51,382:INFO:                shap: Not installed
2024-04-13 17:38:51,382:INFO:           interpret: Not installed
2024-04-13 17:38:51,382:INFO:                umap: Not installed
2024-04-13 17:38:51,382:INFO:     ydata_profiling: Not installed
2024-04-13 17:38:51,383:INFO:  explainerdashboard: Not installed
2024-04-13 17:38:51,383:INFO:             autoviz: Not installed
2024-04-13 17:38:51,383:INFO:           fairlearn: Not installed
2024-04-13 17:38:51,383:INFO:          deepchecks: Not installed
2024-04-13 17:38:51,383:INFO:             xgboost: Not installed
2024-04-13 17:38:51,383:INFO:            catboost: Not installed
2024-04-13 17:38:51,383:INFO:              kmodes: Not installed
2024-04-13 17:38:51,383:INFO:             mlxtend: Not installed
2024-04-13 17:38:51,383:INFO:       statsforecast: Not installed
2024-04-13 17:38:51,383:INFO:        tune_sklearn: Not installed
2024-04-13 17:38:51,383:INFO:                 ray: Not installed
2024-04-13 17:38:51,383:INFO:            hyperopt: Not installed
2024-04-13 17:38:51,383:INFO:              optuna: Not installed
2024-04-13 17:38:51,384:INFO:               skopt: Not installed
2024-04-13 17:38:51,384:INFO:              mlflow: 2.11.3
2024-04-13 17:38:51,384:INFO:              gradio: Not installed
2024-04-13 17:38:51,384:INFO:             fastapi: Not installed
2024-04-13 17:38:51,384:INFO:             uvicorn: Not installed
2024-04-13 17:38:51,384:INFO:              m2cgen: Not installed
2024-04-13 17:38:51,384:INFO:           evidently: Not installed
2024-04-13 17:38:51,384:INFO:               fugue: Not installed
2024-04-13 17:38:51,384:INFO:           streamlit: 1.33.0
2024-04-13 17:38:51,384:INFO:             prophet: Not installed
2024-04-13 17:38:51,384:INFO:None
2024-04-13 17:38:51,384:INFO:Set up data.
2024-04-13 17:38:51,391:INFO:Set up folding strategy.
2024-04-13 17:38:51,391:INFO:Set up train/test split.
2024-04-13 17:38:51,391:INFO:Set up data.
2024-04-13 17:38:51,396:INFO:Set up index.
2024-04-13 17:38:51,397:INFO:Assigning column types.
2024-04-13 17:38:51,403:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 17:38:51,473:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 17:38:51,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 17:38:51,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 17:38:51,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 17:38:51,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,650:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 17:38:51,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 17:38:51,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 17:38:51,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,881:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 17:38:51,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:51,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,116:INFO:Preparing preprocessing pipeline...
2024-04-13 17:38:52,118:INFO:Set up simple imputation.
2024-04-13 17:38:52,118:INFO:Set up feature normalization.
2024-04-13 17:38:52,162:INFO:Finished creating preprocessing pipeline.
2024-04-13 17:38:52,171:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 17:38:52,171:INFO:Creating final display dataframe.
2024-04-13 17:38:52,306:INFO:Setup _display_container:                     Description             Value
0                    Session id              5170
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ae7a
2024-04-13 17:38:52,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 17:38:52,545:INFO:setup() successfully completed in 1.24s...............
2024-04-13 17:38:52,545:INFO:Initializing compare_models()
2024-04-13 17:38:52,545:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 17:38:52,546:INFO:Checking exceptions
2024-04-13 17:38:52,551:INFO:Preparing display monitor
2024-04-13 17:38:52,578:INFO:Initializing Logistic Regression
2024-04-13 17:38:52,578:INFO:Total runtime is 0.0 minutes
2024-04-13 17:38:52,584:INFO:SubProcess create_model() called ==================================
2024-04-13 17:38:52,584:INFO:Initializing create_model()
2024-04-13 17:38:52,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAD0C5E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 17:38:52,584:INFO:Checking exceptions
2024-04-13 17:38:52,585:INFO:Importing libraries
2024-04-13 17:38:52,585:INFO:Copying training dataset
2024-04-13 17:38:52,596:INFO:Defining folds
2024-04-13 17:38:52,596:INFO:Declaring metric variables
2024-04-13 17:38:52,602:INFO:Importing untrained model
2024-04-13 17:38:52,608:INFO:Logistic Regression Imported successfully
2024-04-13 17:38:52,625:INFO:Starting cross validation
2024-04-13 17:38:52,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 17:38:57,444:INFO:Calculating mean and std
2024-04-13 17:38:57,449:INFO:Creating metrics dataframe
2024-04-13 17:38:57,454:INFO:Uploading results into container
2024-04-13 17:38:57,456:INFO:Uploading model into container now
2024-04-13 17:38:57,457:INFO:_master_model_container: 1
2024-04-13 17:38:57,458:INFO:_display_container: 2
2024-04-13 17:38:57,459:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 17:38:57,460:INFO:create_model() successfully completed......................................
2024-04-13 17:38:57,594:INFO:SubProcess create_model() end ==================================
2024-04-13 17:38:57,594:INFO:Creating metrics dataframe
2024-04-13 17:38:57,603:INFO:Initializing Decision Tree Classifier
2024-04-13 17:38:57,604:INFO:Total runtime is 0.08375123739242554 minutes
2024-04-13 17:38:57,608:INFO:SubProcess create_model() called ==================================
2024-04-13 17:38:57,608:INFO:Initializing create_model()
2024-04-13 17:38:57,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAD0C5E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 17:38:57,608:INFO:Checking exceptions
2024-04-13 17:38:57,609:INFO:Importing libraries
2024-04-13 17:38:57,609:INFO:Copying training dataset
2024-04-13 17:38:57,618:INFO:Defining folds
2024-04-13 17:38:57,618:INFO:Declaring metric variables
2024-04-13 17:38:57,622:INFO:Importing untrained model
2024-04-13 17:38:57,626:INFO:Decision Tree Classifier Imported successfully
2024-04-13 17:38:57,634:INFO:Starting cross validation
2024-04-13 17:38:57,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 17:39:01,041:INFO:Calculating mean and std
2024-04-13 17:39:01,044:INFO:Creating metrics dataframe
2024-04-13 17:39:01,047:INFO:Uploading results into container
2024-04-13 17:39:01,048:INFO:Uploading model into container now
2024-04-13 17:39:01,049:INFO:_master_model_container: 2
2024-04-13 17:39:01,050:INFO:_display_container: 2
2024-04-13 17:39:01,050:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5170, splitter='best')
2024-04-13 17:39:01,051:INFO:create_model() successfully completed......................................
2024-04-13 17:39:01,181:INFO:SubProcess create_model() end ==================================
2024-04-13 17:39:01,181:INFO:Creating metrics dataframe
2024-04-13 17:39:01,202:INFO:Initializing create_model()
2024-04-13 17:39:01,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5170, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 17:39:01,202:INFO:Checking exceptions
2024-04-13 17:39:01,204:INFO:Importing libraries
2024-04-13 17:39:01,204:INFO:Copying training dataset
2024-04-13 17:39:01,212:INFO:Defining folds
2024-04-13 17:39:01,213:INFO:Declaring metric variables
2024-04-13 17:39:01,213:INFO:Importing untrained model
2024-04-13 17:39:01,213:INFO:Declaring custom model
2024-04-13 17:39:01,214:INFO:Decision Tree Classifier Imported successfully
2024-04-13 17:39:01,215:INFO:Cross validation set to False
2024-04-13 17:39:01,215:INFO:Fitting Model
2024-04-13 17:39:01,287:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5170, splitter='best')
2024-04-13 17:39:01,287:INFO:create_model() successfully completed......................................
2024-04-13 17:39:01,400:INFO:Initializing create_model()
2024-04-13 17:39:01,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 17:39:01,401:INFO:Checking exceptions
2024-04-13 17:39:01,403:INFO:Importing libraries
2024-04-13 17:39:01,403:INFO:Copying training dataset
2024-04-13 17:39:01,411:INFO:Defining folds
2024-04-13 17:39:01,411:INFO:Declaring metric variables
2024-04-13 17:39:01,411:INFO:Importing untrained model
2024-04-13 17:39:01,412:INFO:Declaring custom model
2024-04-13 17:39:01,412:INFO:Logistic Regression Imported successfully
2024-04-13 17:39:01,413:INFO:Cross validation set to False
2024-04-13 17:39:01,414:INFO:Fitting Model
2024-04-13 17:39:01,439:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 17:39:01,439:INFO:create_model() successfully completed......................................
2024-04-13 17:39:01,562:INFO:_master_model_container: 2
2024-04-13 17:39:01,562:INFO:_display_container: 2
2024-04-13 17:39:01,563:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5170, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 17:39:01,563:INFO:compare_models() successfully completed......................................
2024-04-13 17:39:01,564:INFO:Initializing predict_model()
2024-04-13 17:39:01,564:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7EAFE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5170, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DAB551B0>)
2024-04-13 17:39:01,564:INFO:Checking exceptions
2024-04-13 17:39:01,564:INFO:Preloading libraries
2024-04-13 18:04:43,063:INFO:PyCaret ClassificationExperiment
2024-04-13 18:04:43,064:INFO:Logging name: clf-default-name
2024-04-13 18:04:43,064:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 18:04:43,064:INFO:version 3.3.0
2024-04-13 18:04:43,064:INFO:Initializing setup()
2024-04-13 18:04:43,064:INFO:self.USI: df91
2024-04-13 18:04:43,064:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 18:04:43,064:INFO:Checking environment
2024-04-13 18:04:43,064:INFO:python_version: 3.10.14
2024-04-13 18:04:43,064:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 18:04:43,064:INFO:machine: AMD64
2024-04-13 18:04:43,064:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 18:04:43,070:INFO:Memory: svmem(total=17131573248, available=4334702592, percent=74.7, used=12796870656, free=4334702592)
2024-04-13 18:04:43,070:INFO:Physical Core: 8
2024-04-13 18:04:43,070:INFO:Logical Core: 16
2024-04-13 18:04:43,070:INFO:Checking libraries
2024-04-13 18:04:43,070:INFO:System:
2024-04-13 18:04:43,070:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 18:04:43,070:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 18:04:43,070:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 18:04:43,071:INFO:PyCaret required dependencies:
2024-04-13 18:04:43,071:INFO:                 pip: 23.3.1
2024-04-13 18:04:43,071:INFO:          setuptools: 68.2.2
2024-04-13 18:04:43,071:INFO:             pycaret: 3.3.0
2024-04-13 18:04:43,071:INFO:             IPython: 8.23.0
2024-04-13 18:04:43,071:INFO:          ipywidgets: 8.1.2
2024-04-13 18:04:43,071:INFO:                tqdm: 4.66.2
2024-04-13 18:04:43,071:INFO:               numpy: 1.26.4
2024-04-13 18:04:43,071:INFO:              pandas: 2.1.4
2024-04-13 18:04:43,071:INFO:              jinja2: 3.1.3
2024-04-13 18:04:43,071:INFO:               scipy: 1.11.4
2024-04-13 18:04:43,071:INFO:              joblib: 1.3.2
2024-04-13 18:04:43,071:INFO:             sklearn: 1.4.1.post1
2024-04-13 18:04:43,071:INFO:                pyod: 1.1.3
2024-04-13 18:04:43,072:INFO:            imblearn: 0.12.2
2024-04-13 18:04:43,072:INFO:   category_encoders: 2.6.3
2024-04-13 18:04:43,072:INFO:            lightgbm: 4.3.0
2024-04-13 18:04:43,072:INFO:               numba: 0.59.1
2024-04-13 18:04:43,072:INFO:            requests: 2.31.0
2024-04-13 18:04:43,072:INFO:          matplotlib: 3.7.5
2024-04-13 18:04:43,072:INFO:          scikitplot: 0.3.7
2024-04-13 18:04:43,072:INFO:         yellowbrick: 1.5
2024-04-13 18:04:43,072:INFO:              plotly: 5.20.0
2024-04-13 18:04:43,072:INFO:    plotly-resampler: Not installed
2024-04-13 18:04:43,072:INFO:             kaleido: 0.2.1
2024-04-13 18:04:43,072:INFO:           schemdraw: 0.15
2024-04-13 18:04:43,072:INFO:         statsmodels: 0.14.1
2024-04-13 18:04:43,072:INFO:              sktime: 0.28.0
2024-04-13 18:04:43,072:INFO:               tbats: 1.1.3
2024-04-13 18:04:43,073:INFO:            pmdarima: 2.0.4
2024-04-13 18:04:43,073:INFO:              psutil: 5.9.8
2024-04-13 18:04:43,073:INFO:          markupsafe: 2.1.5
2024-04-13 18:04:43,073:INFO:             pickle5: Not installed
2024-04-13 18:04:43,073:INFO:         cloudpickle: 3.0.0
2024-04-13 18:04:43,073:INFO:         deprecation: 2.1.0
2024-04-13 18:04:43,073:INFO:              xxhash: 3.4.1
2024-04-13 18:04:43,073:INFO:           wurlitzer: 3.0.3
2024-04-13 18:04:43,073:INFO:PyCaret optional dependencies:
2024-04-13 18:04:43,073:INFO:                shap: Not installed
2024-04-13 18:04:43,073:INFO:           interpret: Not installed
2024-04-13 18:04:43,073:INFO:                umap: Not installed
2024-04-13 18:04:43,074:INFO:     ydata_profiling: Not installed
2024-04-13 18:04:43,074:INFO:  explainerdashboard: Not installed
2024-04-13 18:04:43,074:INFO:             autoviz: Not installed
2024-04-13 18:04:43,074:INFO:           fairlearn: Not installed
2024-04-13 18:04:43,074:INFO:          deepchecks: Not installed
2024-04-13 18:04:43,074:INFO:             xgboost: Not installed
2024-04-13 18:04:43,074:INFO:            catboost: Not installed
2024-04-13 18:04:43,074:INFO:              kmodes: Not installed
2024-04-13 18:04:43,074:INFO:             mlxtend: Not installed
2024-04-13 18:04:43,074:INFO:       statsforecast: Not installed
2024-04-13 18:04:43,074:INFO:        tune_sklearn: Not installed
2024-04-13 18:04:43,074:INFO:                 ray: Not installed
2024-04-13 18:04:43,074:INFO:            hyperopt: Not installed
2024-04-13 18:04:43,074:INFO:              optuna: Not installed
2024-04-13 18:04:43,074:INFO:               skopt: Not installed
2024-04-13 18:04:43,075:INFO:              mlflow: 2.11.3
2024-04-13 18:04:43,075:INFO:              gradio: Not installed
2024-04-13 18:04:43,075:INFO:             fastapi: Not installed
2024-04-13 18:04:43,075:INFO:             uvicorn: Not installed
2024-04-13 18:04:43,075:INFO:              m2cgen: Not installed
2024-04-13 18:04:43,075:INFO:           evidently: Not installed
2024-04-13 18:04:43,075:INFO:               fugue: Not installed
2024-04-13 18:04:43,075:INFO:           streamlit: 1.33.0
2024-04-13 18:04:43,075:INFO:             prophet: Not installed
2024-04-13 18:04:43,075:INFO:None
2024-04-13 18:04:43,075:INFO:Set up data.
2024-04-13 18:04:43,081:INFO:Set up folding strategy.
2024-04-13 18:04:43,081:INFO:Set up train/test split.
2024-04-13 18:04:43,081:INFO:Set up data.
2024-04-13 18:04:43,087:INFO:Set up index.
2024-04-13 18:04:43,087:INFO:Assigning column types.
2024-04-13 18:04:43,093:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 18:04:43,163:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:04:43,164:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:04:43,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:04:43,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:04:43,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,324:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 18:04:43,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:04:43,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:04:43,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,555:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 18:04:43,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:43,788:INFO:Preparing preprocessing pipeline...
2024-04-13 18:04:43,790:INFO:Set up simple imputation.
2024-04-13 18:04:43,790:INFO:Set up feature normalization.
2024-04-13 18:04:43,830:INFO:Finished creating preprocessing pipeline.
2024-04-13 18:04:43,837:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 18:04:43,837:INFO:Creating final display dataframe.
2024-04-13 18:04:43,971:INFO:Setup _display_container:                     Description             Value
0                    Session id              4707
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              df91
2024-04-13 18:04:44,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:44,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:44,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:44,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:04:44,210:INFO:setup() successfully completed in 1.15s...............
2024-04-13 18:04:44,212:INFO:Initializing compare_models()
2024-04-13 18:04:44,212:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 18:04:44,212:INFO:Checking exceptions
2024-04-13 18:04:44,218:INFO:Preparing display monitor
2024-04-13 18:04:44,245:INFO:Initializing Logistic Regression
2024-04-13 18:04:44,246:INFO:Total runtime is 1.66932741800944e-05 minutes
2024-04-13 18:04:44,250:INFO:SubProcess create_model() called ==================================
2024-04-13 18:04:44,250:INFO:Initializing create_model()
2024-04-13 18:04:44,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DA3740A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:04:44,251:INFO:Checking exceptions
2024-04-13 18:04:44,251:INFO:Importing libraries
2024-04-13 18:04:44,251:INFO:Copying training dataset
2024-04-13 18:04:44,261:INFO:Defining folds
2024-04-13 18:04:44,261:INFO:Declaring metric variables
2024-04-13 18:04:44,266:INFO:Importing untrained model
2024-04-13 18:04:44,271:INFO:Logistic Regression Imported successfully
2024-04-13 18:04:44,278:INFO:Starting cross validation
2024-04-13 18:04:44,280:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:04:49,241:INFO:Calculating mean and std
2024-04-13 18:04:49,245:INFO:Creating metrics dataframe
2024-04-13 18:04:49,248:INFO:Uploading results into container
2024-04-13 18:04:49,249:INFO:Uploading model into container now
2024-04-13 18:04:49,250:INFO:_master_model_container: 1
2024-04-13 18:04:49,250:INFO:_display_container: 2
2024-04-13 18:04:49,251:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:04:49,252:INFO:create_model() successfully completed......................................
2024-04-13 18:04:49,405:INFO:SubProcess create_model() end ==================================
2024-04-13 18:04:49,406:INFO:Creating metrics dataframe
2024-04-13 18:04:49,414:INFO:Initializing Decision Tree Classifier
2024-04-13 18:04:49,414:INFO:Total runtime is 0.08614491621653239 minutes
2024-04-13 18:04:49,419:INFO:SubProcess create_model() called ==================================
2024-04-13 18:04:49,419:INFO:Initializing create_model()
2024-04-13 18:04:49,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DA3740A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:04:49,419:INFO:Checking exceptions
2024-04-13 18:04:49,419:INFO:Importing libraries
2024-04-13 18:04:49,420:INFO:Copying training dataset
2024-04-13 18:04:49,429:INFO:Defining folds
2024-04-13 18:04:49,429:INFO:Declaring metric variables
2024-04-13 18:04:49,433:INFO:Importing untrained model
2024-04-13 18:04:49,438:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:04:49,446:INFO:Starting cross validation
2024-04-13 18:04:49,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:04:52,842:INFO:Calculating mean and std
2024-04-13 18:04:52,845:INFO:Creating metrics dataframe
2024-04-13 18:04:52,848:INFO:Uploading results into container
2024-04-13 18:04:52,849:INFO:Uploading model into container now
2024-04-13 18:04:52,850:INFO:_master_model_container: 2
2024-04-13 18:04:52,850:INFO:_display_container: 2
2024-04-13 18:04:52,851:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4707, splitter='best')
2024-04-13 18:04:52,851:INFO:create_model() successfully completed......................................
2024-04-13 18:04:52,998:INFO:SubProcess create_model() end ==================================
2024-04-13 18:04:52,998:INFO:Creating metrics dataframe
2024-04-13 18:04:53,019:INFO:Initializing create_model()
2024-04-13 18:04:53,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4707, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:04:53,020:INFO:Checking exceptions
2024-04-13 18:04:53,022:INFO:Importing libraries
2024-04-13 18:04:53,022:INFO:Copying training dataset
2024-04-13 18:04:53,030:INFO:Defining folds
2024-04-13 18:04:53,030:INFO:Declaring metric variables
2024-04-13 18:04:53,030:INFO:Importing untrained model
2024-04-13 18:04:53,030:INFO:Declaring custom model
2024-04-13 18:04:53,031:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:04:53,032:INFO:Cross validation set to False
2024-04-13 18:04:53,032:INFO:Fitting Model
2024-04-13 18:04:53,106:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4707, splitter='best')
2024-04-13 18:04:53,106:INFO:create_model() successfully completed......................................
2024-04-13 18:04:53,229:INFO:Initializing create_model()
2024-04-13 18:04:53,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:04:53,229:INFO:Checking exceptions
2024-04-13 18:04:53,231:INFO:Importing libraries
2024-04-13 18:04:53,232:INFO:Copying training dataset
2024-04-13 18:04:53,240:INFO:Defining folds
2024-04-13 18:04:53,240:INFO:Declaring metric variables
2024-04-13 18:04:53,241:INFO:Importing untrained model
2024-04-13 18:04:53,241:INFO:Declaring custom model
2024-04-13 18:04:53,241:INFO:Logistic Regression Imported successfully
2024-04-13 18:04:53,242:INFO:Cross validation set to False
2024-04-13 18:04:53,243:INFO:Fitting Model
2024-04-13 18:04:53,267:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:04:53,267:INFO:create_model() successfully completed......................................
2024-04-13 18:04:53,404:INFO:_master_model_container: 2
2024-04-13 18:04:53,404:INFO:_display_container: 2
2024-04-13 18:04:53,405:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4707, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 18:04:53,405:INFO:compare_models() successfully completed......................................
2024-04-13 18:04:53,406:INFO:Initializing predict_model()
2024-04-13 18:04:53,406:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE97D720>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4707, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161D5747880>)
2024-04-13 18:04:53,406:INFO:Checking exceptions
2024-04-13 18:04:53,406:INFO:Preloading libraries
2024-04-13 18:14:49,740:INFO:PyCaret ClassificationExperiment
2024-04-13 18:14:49,740:INFO:Logging name: clf-default-name
2024-04-13 18:14:49,740:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 18:14:49,740:INFO:version 3.3.0
2024-04-13 18:14:49,740:INFO:Initializing setup()
2024-04-13 18:14:49,740:INFO:self.USI: 564e
2024-04-13 18:14:49,740:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 18:14:49,740:INFO:Checking environment
2024-04-13 18:14:49,740:INFO:python_version: 3.10.14
2024-04-13 18:14:49,740:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 18:14:49,740:INFO:machine: AMD64
2024-04-13 18:14:49,740:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 18:14:49,746:INFO:Memory: svmem(total=17131573248, available=4446400512, percent=74.0, used=12685172736, free=4446400512)
2024-04-13 18:14:49,746:INFO:Physical Core: 8
2024-04-13 18:14:49,746:INFO:Logical Core: 16
2024-04-13 18:14:49,746:INFO:Checking libraries
2024-04-13 18:14:49,746:INFO:System:
2024-04-13 18:14:49,746:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 18:14:49,746:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 18:14:49,746:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 18:14:49,746:INFO:PyCaret required dependencies:
2024-04-13 18:14:49,747:INFO:                 pip: 23.3.1
2024-04-13 18:14:49,747:INFO:          setuptools: 68.2.2
2024-04-13 18:14:49,747:INFO:             pycaret: 3.3.0
2024-04-13 18:14:49,747:INFO:             IPython: 8.23.0
2024-04-13 18:14:49,747:INFO:          ipywidgets: 8.1.2
2024-04-13 18:14:49,747:INFO:                tqdm: 4.66.2
2024-04-13 18:14:49,747:INFO:               numpy: 1.26.4
2024-04-13 18:14:49,747:INFO:              pandas: 2.1.4
2024-04-13 18:14:49,747:INFO:              jinja2: 3.1.3
2024-04-13 18:14:49,747:INFO:               scipy: 1.11.4
2024-04-13 18:14:49,747:INFO:              joblib: 1.3.2
2024-04-13 18:14:49,747:INFO:             sklearn: 1.4.1.post1
2024-04-13 18:14:49,747:INFO:                pyod: 1.1.3
2024-04-13 18:14:49,748:INFO:            imblearn: 0.12.2
2024-04-13 18:14:49,748:INFO:   category_encoders: 2.6.3
2024-04-13 18:14:49,748:INFO:            lightgbm: 4.3.0
2024-04-13 18:14:49,748:INFO:               numba: 0.59.1
2024-04-13 18:14:49,748:INFO:            requests: 2.31.0
2024-04-13 18:14:49,748:INFO:          matplotlib: 3.7.5
2024-04-13 18:14:49,748:INFO:          scikitplot: 0.3.7
2024-04-13 18:14:49,748:INFO:         yellowbrick: 1.5
2024-04-13 18:14:49,748:INFO:              plotly: 5.20.0
2024-04-13 18:14:49,748:INFO:    plotly-resampler: Not installed
2024-04-13 18:14:49,748:INFO:             kaleido: 0.2.1
2024-04-13 18:14:49,748:INFO:           schemdraw: 0.15
2024-04-13 18:14:49,748:INFO:         statsmodels: 0.14.1
2024-04-13 18:14:49,748:INFO:              sktime: 0.28.0
2024-04-13 18:14:49,748:INFO:               tbats: 1.1.3
2024-04-13 18:14:49,749:INFO:            pmdarima: 2.0.4
2024-04-13 18:14:49,749:INFO:              psutil: 5.9.8
2024-04-13 18:14:49,749:INFO:          markupsafe: 2.1.5
2024-04-13 18:14:49,749:INFO:             pickle5: Not installed
2024-04-13 18:14:49,749:INFO:         cloudpickle: 3.0.0
2024-04-13 18:14:49,749:INFO:         deprecation: 2.1.0
2024-04-13 18:14:49,749:INFO:              xxhash: 3.4.1
2024-04-13 18:14:49,749:INFO:           wurlitzer: 3.0.3
2024-04-13 18:14:49,749:INFO:PyCaret optional dependencies:
2024-04-13 18:14:49,749:INFO:                shap: Not installed
2024-04-13 18:14:49,749:INFO:           interpret: Not installed
2024-04-13 18:14:49,749:INFO:                umap: Not installed
2024-04-13 18:14:49,749:INFO:     ydata_profiling: Not installed
2024-04-13 18:14:49,749:INFO:  explainerdashboard: Not installed
2024-04-13 18:14:49,750:INFO:             autoviz: Not installed
2024-04-13 18:14:49,750:INFO:           fairlearn: Not installed
2024-04-13 18:14:49,750:INFO:          deepchecks: Not installed
2024-04-13 18:14:49,750:INFO:             xgboost: Not installed
2024-04-13 18:14:49,750:INFO:            catboost: Not installed
2024-04-13 18:14:49,750:INFO:              kmodes: Not installed
2024-04-13 18:14:49,750:INFO:             mlxtend: Not installed
2024-04-13 18:14:49,750:INFO:       statsforecast: Not installed
2024-04-13 18:14:49,750:INFO:        tune_sklearn: Not installed
2024-04-13 18:14:49,750:INFO:                 ray: Not installed
2024-04-13 18:14:49,750:INFO:            hyperopt: Not installed
2024-04-13 18:14:49,750:INFO:              optuna: Not installed
2024-04-13 18:14:49,750:INFO:               skopt: Not installed
2024-04-13 18:14:49,750:INFO:              mlflow: 2.11.3
2024-04-13 18:14:49,750:INFO:              gradio: Not installed
2024-04-13 18:14:49,751:INFO:             fastapi: Not installed
2024-04-13 18:14:49,751:INFO:             uvicorn: Not installed
2024-04-13 18:14:49,751:INFO:              m2cgen: Not installed
2024-04-13 18:14:49,751:INFO:           evidently: Not installed
2024-04-13 18:14:49,751:INFO:               fugue: Not installed
2024-04-13 18:14:49,751:INFO:           streamlit: 1.33.0
2024-04-13 18:14:49,751:INFO:             prophet: Not installed
2024-04-13 18:14:49,751:INFO:None
2024-04-13 18:14:49,751:INFO:Set up data.
2024-04-13 18:14:49,757:INFO:Set up folding strategy.
2024-04-13 18:14:49,757:INFO:Set up train/test split.
2024-04-13 18:14:49,757:INFO:Set up data.
2024-04-13 18:14:49,762:INFO:Set up index.
2024-04-13 18:14:49,763:INFO:Assigning column types.
2024-04-13 18:14:49,769:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 18:14:49,839:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:14:49,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:14:49,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:49,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:49,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:14:49,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:14:50,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,001:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 18:14:50,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:14:50,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,186:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:14:50,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,230:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 18:14:50,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,463:INFO:Preparing preprocessing pipeline...
2024-04-13 18:14:50,464:INFO:Set up simple imputation.
2024-04-13 18:14:50,464:INFO:Set up feature normalization.
2024-04-13 18:14:50,504:INFO:Finished creating preprocessing pipeline.
2024-04-13 18:14:50,511:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 18:14:50,511:INFO:Creating final display dataframe.
2024-04-13 18:14:50,646:INFO:Setup _display_container:                     Description             Value
0                    Session id              3127
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              564e
2024-04-13 18:14:50,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:14:50,888:INFO:setup() successfully completed in 1.15s...............
2024-04-13 18:14:50,889:INFO:Initializing compare_models()
2024-04-13 18:14:50,889:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 18:14:50,890:INFO:Checking exceptions
2024-04-13 18:14:50,895:INFO:Preparing display monitor
2024-04-13 18:14:50,921:INFO:Initializing Logistic Regression
2024-04-13 18:14:50,921:INFO:Total runtime is 0.0 minutes
2024-04-13 18:14:50,926:INFO:SubProcess create_model() called ==================================
2024-04-13 18:14:50,926:INFO:Initializing create_model()
2024-04-13 18:14:50,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DE17D780>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:14:50,926:INFO:Checking exceptions
2024-04-13 18:14:50,926:INFO:Importing libraries
2024-04-13 18:14:50,927:INFO:Copying training dataset
2024-04-13 18:14:50,937:INFO:Defining folds
2024-04-13 18:14:50,937:INFO:Declaring metric variables
2024-04-13 18:14:50,942:INFO:Importing untrained model
2024-04-13 18:14:50,946:INFO:Logistic Regression Imported successfully
2024-04-13 18:14:50,955:INFO:Starting cross validation
2024-04-13 18:14:50,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:14:55,818:INFO:Calculating mean and std
2024-04-13 18:14:55,822:INFO:Creating metrics dataframe
2024-04-13 18:14:55,827:INFO:Uploading results into container
2024-04-13 18:14:55,828:INFO:Uploading model into container now
2024-04-13 18:14:55,828:INFO:_master_model_container: 1
2024-04-13 18:14:55,829:INFO:_display_container: 2
2024-04-13 18:14:55,829:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3127, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:14:55,830:INFO:create_model() successfully completed......................................
2024-04-13 18:14:55,968:INFO:SubProcess create_model() end ==================================
2024-04-13 18:14:55,968:INFO:Creating metrics dataframe
2024-04-13 18:14:55,977:INFO:Initializing Decision Tree Classifier
2024-04-13 18:14:55,977:INFO:Total runtime is 0.08427655696868896 minutes
2024-04-13 18:14:55,981:INFO:SubProcess create_model() called ==================================
2024-04-13 18:14:55,982:INFO:Initializing create_model()
2024-04-13 18:14:55,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DE17D780>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:14:55,982:INFO:Checking exceptions
2024-04-13 18:14:55,982:INFO:Importing libraries
2024-04-13 18:14:55,982:INFO:Copying training dataset
2024-04-13 18:14:55,991:INFO:Defining folds
2024-04-13 18:14:55,991:INFO:Declaring metric variables
2024-04-13 18:14:55,995:INFO:Importing untrained model
2024-04-13 18:14:55,999:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:14:56,008:INFO:Starting cross validation
2024-04-13 18:14:56,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:14:59,285:INFO:Calculating mean and std
2024-04-13 18:14:59,288:INFO:Creating metrics dataframe
2024-04-13 18:14:59,291:INFO:Uploading results into container
2024-04-13 18:14:59,292:INFO:Uploading model into container now
2024-04-13 18:14:59,293:INFO:_master_model_container: 2
2024-04-13 18:14:59,293:INFO:_display_container: 2
2024-04-13 18:14:59,294:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3127, splitter='best')
2024-04-13 18:14:59,294:INFO:create_model() successfully completed......................................
2024-04-13 18:14:59,435:INFO:SubProcess create_model() end ==================================
2024-04-13 18:14:59,435:INFO:Creating metrics dataframe
2024-04-13 18:14:59,456:INFO:Initializing create_model()
2024-04-13 18:14:59,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3127, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:14:59,456:INFO:Checking exceptions
2024-04-13 18:14:59,458:INFO:Importing libraries
2024-04-13 18:14:59,459:INFO:Copying training dataset
2024-04-13 18:14:59,467:INFO:Defining folds
2024-04-13 18:14:59,467:INFO:Declaring metric variables
2024-04-13 18:14:59,467:INFO:Importing untrained model
2024-04-13 18:14:59,468:INFO:Declaring custom model
2024-04-13 18:14:59,468:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:14:59,469:INFO:Cross validation set to False
2024-04-13 18:14:59,469:INFO:Fitting Model
2024-04-13 18:14:59,543:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3127, splitter='best')
2024-04-13 18:14:59,543:INFO:create_model() successfully completed......................................
2024-04-13 18:14:59,667:INFO:Initializing create_model()
2024-04-13 18:14:59,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3127, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:14:59,667:INFO:Checking exceptions
2024-04-13 18:14:59,669:INFO:Importing libraries
2024-04-13 18:14:59,670:INFO:Copying training dataset
2024-04-13 18:14:59,678:INFO:Defining folds
2024-04-13 18:14:59,678:INFO:Declaring metric variables
2024-04-13 18:14:59,678:INFO:Importing untrained model
2024-04-13 18:14:59,678:INFO:Declaring custom model
2024-04-13 18:14:59,679:INFO:Logistic Regression Imported successfully
2024-04-13 18:14:59,680:INFO:Cross validation set to False
2024-04-13 18:14:59,680:INFO:Fitting Model
2024-04-13 18:14:59,704:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3127, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:14:59,704:INFO:create_model() successfully completed......................................
2024-04-13 18:14:59,843:INFO:_master_model_container: 2
2024-04-13 18:14:59,843:INFO:_display_container: 2
2024-04-13 18:14:59,844:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3127, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3127, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 18:14:59,844:INFO:compare_models() successfully completed......................................
2024-04-13 18:14:59,844:INFO:Initializing predict_model()
2024-04-13 18:14:59,845:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA877280>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3127, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161D9F5DE10>)
2024-04-13 18:14:59,845:INFO:Checking exceptions
2024-04-13 18:14:59,845:INFO:Preloading libraries
2024-04-13 18:21:31,598:INFO:PyCaret ClassificationExperiment
2024-04-13 18:21:31,598:INFO:Logging name: clf-default-name
2024-04-13 18:21:31,598:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 18:21:31,598:INFO:version 3.3.0
2024-04-13 18:21:31,598:INFO:Initializing setup()
2024-04-13 18:21:31,599:INFO:self.USI: c1ee
2024-04-13 18:21:31,599:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 18:21:31,599:INFO:Checking environment
2024-04-13 18:21:31,599:INFO:python_version: 3.10.14
2024-04-13 18:21:31,599:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 18:21:31,599:INFO:machine: AMD64
2024-04-13 18:21:31,599:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 18:21:31,604:INFO:Memory: svmem(total=17131573248, available=5263466496, percent=69.3, used=11868106752, free=5263466496)
2024-04-13 18:21:31,604:INFO:Physical Core: 8
2024-04-13 18:21:31,605:INFO:Logical Core: 16
2024-04-13 18:21:31,605:INFO:Checking libraries
2024-04-13 18:21:31,605:INFO:System:
2024-04-13 18:21:31,605:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 18:21:31,605:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 18:21:31,605:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 18:21:31,605:INFO:PyCaret required dependencies:
2024-04-13 18:21:31,605:INFO:                 pip: 23.3.1
2024-04-13 18:21:31,605:INFO:          setuptools: 68.2.2
2024-04-13 18:21:31,605:INFO:             pycaret: 3.3.0
2024-04-13 18:21:31,605:INFO:             IPython: 8.23.0
2024-04-13 18:21:31,605:INFO:          ipywidgets: 8.1.2
2024-04-13 18:21:31,605:INFO:                tqdm: 4.66.2
2024-04-13 18:21:31,606:INFO:               numpy: 1.26.4
2024-04-13 18:21:31,606:INFO:              pandas: 2.1.4
2024-04-13 18:21:31,606:INFO:              jinja2: 3.1.3
2024-04-13 18:21:31,606:INFO:               scipy: 1.11.4
2024-04-13 18:21:31,606:INFO:              joblib: 1.3.2
2024-04-13 18:21:31,606:INFO:             sklearn: 1.4.1.post1
2024-04-13 18:21:31,606:INFO:                pyod: 1.1.3
2024-04-13 18:21:31,606:INFO:            imblearn: 0.12.2
2024-04-13 18:21:31,606:INFO:   category_encoders: 2.6.3
2024-04-13 18:21:31,606:INFO:            lightgbm: 4.3.0
2024-04-13 18:21:31,606:INFO:               numba: 0.59.1
2024-04-13 18:21:31,606:INFO:            requests: 2.31.0
2024-04-13 18:21:31,606:INFO:          matplotlib: 3.7.5
2024-04-13 18:21:31,606:INFO:          scikitplot: 0.3.7
2024-04-13 18:21:31,606:INFO:         yellowbrick: 1.5
2024-04-13 18:21:31,607:INFO:              plotly: 5.20.0
2024-04-13 18:21:31,607:INFO:    plotly-resampler: Not installed
2024-04-13 18:21:31,607:INFO:             kaleido: 0.2.1
2024-04-13 18:21:31,607:INFO:           schemdraw: 0.15
2024-04-13 18:21:31,607:INFO:         statsmodels: 0.14.1
2024-04-13 18:21:31,607:INFO:              sktime: 0.28.0
2024-04-13 18:21:31,607:INFO:               tbats: 1.1.3
2024-04-13 18:21:31,607:INFO:            pmdarima: 2.0.4
2024-04-13 18:21:31,607:INFO:              psutil: 5.9.8
2024-04-13 18:21:31,607:INFO:          markupsafe: 2.1.5
2024-04-13 18:21:31,607:INFO:             pickle5: Not installed
2024-04-13 18:21:31,607:INFO:         cloudpickle: 3.0.0
2024-04-13 18:21:31,607:INFO:         deprecation: 2.1.0
2024-04-13 18:21:31,607:INFO:              xxhash: 3.4.1
2024-04-13 18:21:31,608:INFO:           wurlitzer: 3.0.3
2024-04-13 18:21:31,608:INFO:PyCaret optional dependencies:
2024-04-13 18:21:31,608:INFO:                shap: Not installed
2024-04-13 18:21:31,608:INFO:           interpret: Not installed
2024-04-13 18:21:31,608:INFO:                umap: Not installed
2024-04-13 18:21:31,608:INFO:     ydata_profiling: Not installed
2024-04-13 18:21:31,608:INFO:  explainerdashboard: Not installed
2024-04-13 18:21:31,608:INFO:             autoviz: Not installed
2024-04-13 18:21:31,608:INFO:           fairlearn: Not installed
2024-04-13 18:21:31,608:INFO:          deepchecks: Not installed
2024-04-13 18:21:31,608:INFO:             xgboost: Not installed
2024-04-13 18:21:31,608:INFO:            catboost: Not installed
2024-04-13 18:21:31,608:INFO:              kmodes: Not installed
2024-04-13 18:21:31,608:INFO:             mlxtend: Not installed
2024-04-13 18:21:31,608:INFO:       statsforecast: Not installed
2024-04-13 18:21:31,609:INFO:        tune_sklearn: Not installed
2024-04-13 18:21:31,609:INFO:                 ray: Not installed
2024-04-13 18:21:31,609:INFO:            hyperopt: Not installed
2024-04-13 18:21:31,609:INFO:              optuna: Not installed
2024-04-13 18:21:31,609:INFO:               skopt: Not installed
2024-04-13 18:21:31,609:INFO:              mlflow: 2.11.3
2024-04-13 18:21:31,609:INFO:              gradio: Not installed
2024-04-13 18:21:31,609:INFO:             fastapi: Not installed
2024-04-13 18:21:31,609:INFO:             uvicorn: Not installed
2024-04-13 18:21:31,609:INFO:              m2cgen: Not installed
2024-04-13 18:21:31,609:INFO:           evidently: Not installed
2024-04-13 18:21:31,609:INFO:               fugue: Not installed
2024-04-13 18:21:31,609:INFO:           streamlit: 1.33.0
2024-04-13 18:21:31,610:INFO:             prophet: Not installed
2024-04-13 18:21:31,610:INFO:None
2024-04-13 18:21:31,610:INFO:Set up data.
2024-04-13 18:21:31,620:INFO:Set up folding strategy.
2024-04-13 18:21:31,620:INFO:Set up train/test split.
2024-04-13 18:21:31,620:INFO:Set up data.
2024-04-13 18:21:31,626:INFO:Set up index.
2024-04-13 18:21:31,627:INFO:Assigning column types.
2024-04-13 18:21:31,632:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 18:21:31,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:21:31,704:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:21:31,749:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:31,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:31,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:21:31,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:21:31,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:31,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:31,865:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 18:21:31,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:21:31,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:31,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,049:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:21:32,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,094:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 18:21:32,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,325:INFO:Preparing preprocessing pipeline...
2024-04-13 18:21:32,326:INFO:Set up simple imputation.
2024-04-13 18:21:32,326:INFO:Set up feature normalization.
2024-04-13 18:21:32,366:INFO:Finished creating preprocessing pipeline.
2024-04-13 18:21:32,373:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 18:21:32,373:INFO:Creating final display dataframe.
2024-04-13 18:21:32,508:INFO:Setup _display_container:                     Description             Value
0                    Session id              5723
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              c1ee
2024-04-13 18:21:32,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:21:32,747:INFO:setup() successfully completed in 1.15s...............
2024-04-13 18:21:32,748:INFO:Initializing compare_models()
2024-04-13 18:21:32,749:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 18:21:32,749:INFO:Checking exceptions
2024-04-13 18:21:32,754:INFO:Preparing display monitor
2024-04-13 18:21:32,780:INFO:Initializing Logistic Regression
2024-04-13 18:21:32,781:INFO:Total runtime is 1.6669432322184246e-05 minutes
2024-04-13 18:21:32,785:INFO:SubProcess create_model() called ==================================
2024-04-13 18:21:32,785:INFO:Initializing create_model()
2024-04-13 18:21:32,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAC534C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:21:32,785:INFO:Checking exceptions
2024-04-13 18:21:32,786:INFO:Importing libraries
2024-04-13 18:21:32,786:INFO:Copying training dataset
2024-04-13 18:21:32,796:INFO:Defining folds
2024-04-13 18:21:32,796:INFO:Declaring metric variables
2024-04-13 18:21:32,800:INFO:Importing untrained model
2024-04-13 18:21:32,806:INFO:Logistic Regression Imported successfully
2024-04-13 18:21:32,814:INFO:Starting cross validation
2024-04-13 18:21:32,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:21:37,847:INFO:Calculating mean and std
2024-04-13 18:21:37,850:INFO:Creating metrics dataframe
2024-04-13 18:21:37,855:INFO:Uploading results into container
2024-04-13 18:21:37,856:INFO:Uploading model into container now
2024-04-13 18:21:37,857:INFO:_master_model_container: 1
2024-04-13 18:21:37,857:INFO:_display_container: 2
2024-04-13 18:21:37,858:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5723, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:21:37,858:INFO:create_model() successfully completed......................................
2024-04-13 18:21:38,002:INFO:SubProcess create_model() end ==================================
2024-04-13 18:21:38,003:INFO:Creating metrics dataframe
2024-04-13 18:21:38,011:INFO:Initializing Decision Tree Classifier
2024-04-13 18:21:38,011:INFO:Total runtime is 0.08717103799184164 minutes
2024-04-13 18:21:38,015:INFO:SubProcess create_model() called ==================================
2024-04-13 18:21:38,016:INFO:Initializing create_model()
2024-04-13 18:21:38,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAC534C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:21:38,016:INFO:Checking exceptions
2024-04-13 18:21:38,016:INFO:Importing libraries
2024-04-13 18:21:38,016:INFO:Copying training dataset
2024-04-13 18:21:38,025:INFO:Defining folds
2024-04-13 18:21:38,026:INFO:Declaring metric variables
2024-04-13 18:21:38,030:INFO:Importing untrained model
2024-04-13 18:21:38,035:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:21:38,043:INFO:Starting cross validation
2024-04-13 18:21:38,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:21:41,364:INFO:Calculating mean and std
2024-04-13 18:21:41,366:INFO:Creating metrics dataframe
2024-04-13 18:21:41,369:INFO:Uploading results into container
2024-04-13 18:21:41,370:INFO:Uploading model into container now
2024-04-13 18:21:41,371:INFO:_master_model_container: 2
2024-04-13 18:21:41,371:INFO:_display_container: 2
2024-04-13 18:21:41,372:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5723, splitter='best')
2024-04-13 18:21:41,372:INFO:create_model() successfully completed......................................
2024-04-13 18:21:41,508:INFO:SubProcess create_model() end ==================================
2024-04-13 18:21:41,508:INFO:Creating metrics dataframe
2024-04-13 18:21:41,529:INFO:Initializing create_model()
2024-04-13 18:21:41,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5723, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:21:41,529:INFO:Checking exceptions
2024-04-13 18:21:41,531:INFO:Importing libraries
2024-04-13 18:21:41,531:INFO:Copying training dataset
2024-04-13 18:21:41,540:INFO:Defining folds
2024-04-13 18:21:41,540:INFO:Declaring metric variables
2024-04-13 18:21:41,540:INFO:Importing untrained model
2024-04-13 18:21:41,540:INFO:Declaring custom model
2024-04-13 18:21:41,541:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:21:41,542:INFO:Cross validation set to False
2024-04-13 18:21:41,542:INFO:Fitting Model
2024-04-13 18:21:41,615:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5723, splitter='best')
2024-04-13 18:21:41,615:INFO:create_model() successfully completed......................................
2024-04-13 18:21:41,740:INFO:Initializing create_model()
2024-04-13 18:21:41,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5723, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:21:41,740:INFO:Checking exceptions
2024-04-13 18:21:41,743:INFO:Importing libraries
2024-04-13 18:21:41,743:INFO:Copying training dataset
2024-04-13 18:21:41,751:INFO:Defining folds
2024-04-13 18:21:41,751:INFO:Declaring metric variables
2024-04-13 18:21:41,752:INFO:Importing untrained model
2024-04-13 18:21:41,752:INFO:Declaring custom model
2024-04-13 18:21:41,753:INFO:Logistic Regression Imported successfully
2024-04-13 18:21:41,754:INFO:Cross validation set to False
2024-04-13 18:21:41,754:INFO:Fitting Model
2024-04-13 18:21:41,777:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5723, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:21:41,777:INFO:create_model() successfully completed......................................
2024-04-13 18:21:41,915:INFO:_master_model_container: 2
2024-04-13 18:21:41,915:INFO:_display_container: 2
2024-04-13 18:21:41,916:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5723, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5723, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 18:21:41,916:INFO:compare_models() successfully completed......................................
2024-04-13 18:21:41,917:INFO:Initializing predict_model()
2024-04-13 18:21:41,917:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DE73CE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5723, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161D5747880>)
2024-04-13 18:21:41,917:INFO:Checking exceptions
2024-04-13 18:21:41,917:INFO:Preloading libraries
2024-04-13 18:22:53,884:INFO:PyCaret ClassificationExperiment
2024-04-13 18:22:53,884:INFO:Logging name: clf-default-name
2024-04-13 18:22:53,884:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 18:22:53,884:INFO:version 3.3.0
2024-04-13 18:22:53,884:INFO:Initializing setup()
2024-04-13 18:22:53,884:INFO:self.USI: 689b
2024-04-13 18:22:53,884:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 18:22:53,884:INFO:Checking environment
2024-04-13 18:22:53,885:INFO:python_version: 3.10.14
2024-04-13 18:22:53,885:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 18:22:53,885:INFO:machine: AMD64
2024-04-13 18:22:53,885:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 18:22:53,891:INFO:Memory: svmem(total=17131573248, available=5077303296, percent=70.4, used=12054269952, free=5077303296)
2024-04-13 18:22:53,891:INFO:Physical Core: 8
2024-04-13 18:22:53,891:INFO:Logical Core: 16
2024-04-13 18:22:53,891:INFO:Checking libraries
2024-04-13 18:22:53,891:INFO:System:
2024-04-13 18:22:53,891:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 18:22:53,891:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 18:22:53,891:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 18:22:53,891:INFO:PyCaret required dependencies:
2024-04-13 18:22:53,892:INFO:                 pip: 23.3.1
2024-04-13 18:22:53,892:INFO:          setuptools: 68.2.2
2024-04-13 18:22:53,892:INFO:             pycaret: 3.3.0
2024-04-13 18:22:53,892:INFO:             IPython: 8.23.0
2024-04-13 18:22:53,892:INFO:          ipywidgets: 8.1.2
2024-04-13 18:22:53,892:INFO:                tqdm: 4.66.2
2024-04-13 18:22:53,892:INFO:               numpy: 1.26.4
2024-04-13 18:22:53,892:INFO:              pandas: 2.1.4
2024-04-13 18:22:53,892:INFO:              jinja2: 3.1.3
2024-04-13 18:22:53,892:INFO:               scipy: 1.11.4
2024-04-13 18:22:53,892:INFO:              joblib: 1.3.2
2024-04-13 18:22:53,892:INFO:             sklearn: 1.4.1.post1
2024-04-13 18:22:53,892:INFO:                pyod: 1.1.3
2024-04-13 18:22:53,892:INFO:            imblearn: 0.12.2
2024-04-13 18:22:53,892:INFO:   category_encoders: 2.6.3
2024-04-13 18:22:53,893:INFO:            lightgbm: 4.3.0
2024-04-13 18:22:53,893:INFO:               numba: 0.59.1
2024-04-13 18:22:53,893:INFO:            requests: 2.31.0
2024-04-13 18:22:53,893:INFO:          matplotlib: 3.7.5
2024-04-13 18:22:53,893:INFO:          scikitplot: 0.3.7
2024-04-13 18:22:53,893:INFO:         yellowbrick: 1.5
2024-04-13 18:22:53,893:INFO:              plotly: 5.20.0
2024-04-13 18:22:53,893:INFO:    plotly-resampler: Not installed
2024-04-13 18:22:53,893:INFO:             kaleido: 0.2.1
2024-04-13 18:22:53,893:INFO:           schemdraw: 0.15
2024-04-13 18:22:53,893:INFO:         statsmodels: 0.14.1
2024-04-13 18:22:53,893:INFO:              sktime: 0.28.0
2024-04-13 18:22:53,893:INFO:               tbats: 1.1.3
2024-04-13 18:22:53,893:INFO:            pmdarima: 2.0.4
2024-04-13 18:22:53,894:INFO:              psutil: 5.9.8
2024-04-13 18:22:53,894:INFO:          markupsafe: 2.1.5
2024-04-13 18:22:53,894:INFO:             pickle5: Not installed
2024-04-13 18:22:53,894:INFO:         cloudpickle: 3.0.0
2024-04-13 18:22:53,894:INFO:         deprecation: 2.1.0
2024-04-13 18:22:53,894:INFO:              xxhash: 3.4.1
2024-04-13 18:22:53,894:INFO:           wurlitzer: 3.0.3
2024-04-13 18:22:53,894:INFO:PyCaret optional dependencies:
2024-04-13 18:22:53,894:INFO:                shap: Not installed
2024-04-13 18:22:53,894:INFO:           interpret: Not installed
2024-04-13 18:22:53,894:INFO:                umap: Not installed
2024-04-13 18:22:53,894:INFO:     ydata_profiling: Not installed
2024-04-13 18:22:53,895:INFO:  explainerdashboard: Not installed
2024-04-13 18:22:53,895:INFO:             autoviz: Not installed
2024-04-13 18:22:53,895:INFO:           fairlearn: Not installed
2024-04-13 18:22:53,895:INFO:          deepchecks: Not installed
2024-04-13 18:22:53,895:INFO:             xgboost: Not installed
2024-04-13 18:22:53,895:INFO:            catboost: Not installed
2024-04-13 18:22:53,895:INFO:              kmodes: Not installed
2024-04-13 18:22:53,895:INFO:             mlxtend: Not installed
2024-04-13 18:22:53,895:INFO:       statsforecast: Not installed
2024-04-13 18:22:53,895:INFO:        tune_sklearn: Not installed
2024-04-13 18:22:53,895:INFO:                 ray: Not installed
2024-04-13 18:22:53,895:INFO:            hyperopt: Not installed
2024-04-13 18:22:53,895:INFO:              optuna: Not installed
2024-04-13 18:22:53,895:INFO:               skopt: Not installed
2024-04-13 18:22:53,895:INFO:              mlflow: 2.11.3
2024-04-13 18:22:53,896:INFO:              gradio: Not installed
2024-04-13 18:22:53,896:INFO:             fastapi: Not installed
2024-04-13 18:22:53,896:INFO:             uvicorn: Not installed
2024-04-13 18:22:53,896:INFO:              m2cgen: Not installed
2024-04-13 18:22:53,896:INFO:           evidently: Not installed
2024-04-13 18:22:53,896:INFO:               fugue: Not installed
2024-04-13 18:22:53,896:INFO:           streamlit: 1.33.0
2024-04-13 18:22:53,896:INFO:             prophet: Not installed
2024-04-13 18:22:53,896:INFO:None
2024-04-13 18:22:53,896:INFO:Set up data.
2024-04-13 18:22:53,902:INFO:Set up folding strategy.
2024-04-13 18:22:53,902:INFO:Set up train/test split.
2024-04-13 18:22:53,902:INFO:Set up data.
2024-04-13 18:22:53,908:INFO:Set up index.
2024-04-13 18:22:53,908:INFO:Assigning column types.
2024-04-13 18:22:53,915:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 18:22:53,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:22:53,985:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:22:54,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:22:54,101:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:22:54,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,147:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 18:22:54,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:22:54,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,333:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:22:54,376:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,377:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 18:22:54,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,610:INFO:Preparing preprocessing pipeline...
2024-04-13 18:22:54,612:INFO:Set up simple imputation.
2024-04-13 18:22:54,612:INFO:Set up feature normalization.
2024-04-13 18:22:54,652:INFO:Finished creating preprocessing pipeline.
2024-04-13 18:22:54,659:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 18:22:54,659:INFO:Creating final display dataframe.
2024-04-13 18:22:54,832:INFO:Setup _display_container:                     Description             Value
0                    Session id              8285
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              689b
2024-04-13 18:22:54,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:54,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:55,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:55,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:22:55,084:INFO:setup() successfully completed in 1.2s...............
2024-04-13 18:22:55,085:INFO:Initializing compare_models()
2024-04-13 18:22:55,086:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 18:22:55,086:INFO:Checking exceptions
2024-04-13 18:22:55,091:INFO:Preparing display monitor
2024-04-13 18:22:55,120:INFO:Initializing Decision Tree Classifier
2024-04-13 18:22:55,121:INFO:Total runtime is 1.6657511393229165e-05 minutes
2024-04-13 18:22:55,125:INFO:SubProcess create_model() called ==================================
2024-04-13 18:22:55,125:INFO:Initializing create_model()
2024-04-13 18:22:55,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DA3740A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:22:55,125:INFO:Checking exceptions
2024-04-13 18:22:55,126:INFO:Importing libraries
2024-04-13 18:22:55,126:INFO:Copying training dataset
2024-04-13 18:22:55,137:INFO:Defining folds
2024-04-13 18:22:55,137:INFO:Declaring metric variables
2024-04-13 18:22:55,141:INFO:Importing untrained model
2024-04-13 18:22:55,146:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:22:55,155:INFO:Starting cross validation
2024-04-13 18:22:55,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:23:00,118:INFO:Calculating mean and std
2024-04-13 18:23:00,121:INFO:Creating metrics dataframe
2024-04-13 18:23:00,124:INFO:Uploading results into container
2024-04-13 18:23:00,126:INFO:Uploading model into container now
2024-04-13 18:23:00,127:INFO:_master_model_container: 1
2024-04-13 18:23:00,127:INFO:_display_container: 2
2024-04-13 18:23:00,128:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8285, splitter='best')
2024-04-13 18:23:00,128:INFO:create_model() successfully completed......................................
2024-04-13 18:23:00,276:INFO:SubProcess create_model() end ==================================
2024-04-13 18:23:00,276:INFO:Creating metrics dataframe
2024-04-13 18:23:00,285:INFO:Initializing Logistic Regression
2024-04-13 18:23:00,285:INFO:Total runtime is 0.08609484831492105 minutes
2024-04-13 18:23:00,289:INFO:SubProcess create_model() called ==================================
2024-04-13 18:23:00,290:INFO:Initializing create_model()
2024-04-13 18:23:00,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DA3740A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:23:00,290:INFO:Checking exceptions
2024-04-13 18:23:00,290:INFO:Importing libraries
2024-04-13 18:23:00,290:INFO:Copying training dataset
2024-04-13 18:23:00,299:INFO:Defining folds
2024-04-13 18:23:00,300:INFO:Declaring metric variables
2024-04-13 18:23:00,304:INFO:Importing untrained model
2024-04-13 18:23:00,309:INFO:Logistic Regression Imported successfully
2024-04-13 18:23:00,317:INFO:Starting cross validation
2024-04-13 18:23:00,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:23:03,613:INFO:Calculating mean and std
2024-04-13 18:23:03,617:INFO:Creating metrics dataframe
2024-04-13 18:23:03,622:INFO:Uploading results into container
2024-04-13 18:23:03,623:INFO:Uploading model into container now
2024-04-13 18:23:03,624:INFO:_master_model_container: 2
2024-04-13 18:23:03,625:INFO:_display_container: 2
2024-04-13 18:23:03,625:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8285, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:23:03,625:INFO:create_model() successfully completed......................................
2024-04-13 18:23:03,767:INFO:SubProcess create_model() end ==================================
2024-04-13 18:23:03,767:INFO:Creating metrics dataframe
2024-04-13 18:23:03,789:INFO:Initializing create_model()
2024-04-13 18:23:03,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8285, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:23:03,789:INFO:Checking exceptions
2024-04-13 18:23:03,791:INFO:Importing libraries
2024-04-13 18:23:03,791:INFO:Copying training dataset
2024-04-13 18:23:03,799:INFO:Defining folds
2024-04-13 18:23:03,799:INFO:Declaring metric variables
2024-04-13 18:23:03,799:INFO:Importing untrained model
2024-04-13 18:23:03,800:INFO:Declaring custom model
2024-04-13 18:23:03,800:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:23:03,801:INFO:Cross validation set to False
2024-04-13 18:23:03,801:INFO:Fitting Model
2024-04-13 18:23:03,874:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8285, splitter='best')
2024-04-13 18:23:03,874:INFO:create_model() successfully completed......................................
2024-04-13 18:23:03,998:INFO:Initializing create_model()
2024-04-13 18:23:03,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8285, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:23:03,998:INFO:Checking exceptions
2024-04-13 18:23:04,000:INFO:Importing libraries
2024-04-13 18:23:04,001:INFO:Copying training dataset
2024-04-13 18:23:04,009:INFO:Defining folds
2024-04-13 18:23:04,009:INFO:Declaring metric variables
2024-04-13 18:23:04,010:INFO:Importing untrained model
2024-04-13 18:23:04,010:INFO:Declaring custom model
2024-04-13 18:23:04,010:INFO:Logistic Regression Imported successfully
2024-04-13 18:23:04,012:INFO:Cross validation set to False
2024-04-13 18:23:04,012:INFO:Fitting Model
2024-04-13 18:23:04,035:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8285, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:23:04,035:INFO:create_model() successfully completed......................................
2024-04-13 18:23:04,172:INFO:_master_model_container: 2
2024-04-13 18:23:04,173:INFO:_display_container: 2
2024-04-13 18:23:04,173:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8285, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8285, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 18:23:04,174:INFO:compare_models() successfully completed......................................
2024-04-13 18:23:04,174:INFO:Initializing predict_model()
2024-04-13 18:23:04,174:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161D7EEAF50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8285, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DAB57130>)
2024-04-13 18:23:04,175:INFO:Checking exceptions
2024-04-13 18:23:04,175:INFO:Preloading libraries
2024-04-13 18:23:50,343:INFO:PyCaret ClassificationExperiment
2024-04-13 18:23:50,343:INFO:Logging name: clf-default-name
2024-04-13 18:23:50,344:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 18:23:50,344:INFO:version 3.3.0
2024-04-13 18:23:50,344:INFO:Initializing setup()
2024-04-13 18:23:50,344:INFO:self.USI: 4169
2024-04-13 18:23:50,344:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 18:23:50,344:INFO:Checking environment
2024-04-13 18:23:50,344:INFO:python_version: 3.10.14
2024-04-13 18:23:50,344:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 18:23:50,344:INFO:machine: AMD64
2024-04-13 18:23:50,344:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 18:23:50,349:INFO:Memory: svmem(total=17131573248, available=5143388160, percent=70.0, used=11988185088, free=5143388160)
2024-04-13 18:23:50,350:INFO:Physical Core: 8
2024-04-13 18:23:50,350:INFO:Logical Core: 16
2024-04-13 18:23:50,350:INFO:Checking libraries
2024-04-13 18:23:50,350:INFO:System:
2024-04-13 18:23:50,350:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 18:23:50,350:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 18:23:50,350:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 18:23:50,350:INFO:PyCaret required dependencies:
2024-04-13 18:23:50,350:INFO:                 pip: 23.3.1
2024-04-13 18:23:50,350:INFO:          setuptools: 68.2.2
2024-04-13 18:23:50,350:INFO:             pycaret: 3.3.0
2024-04-13 18:23:50,350:INFO:             IPython: 8.23.0
2024-04-13 18:23:50,350:INFO:          ipywidgets: 8.1.2
2024-04-13 18:23:50,351:INFO:                tqdm: 4.66.2
2024-04-13 18:23:50,351:INFO:               numpy: 1.26.4
2024-04-13 18:23:50,351:INFO:              pandas: 2.1.4
2024-04-13 18:23:50,351:INFO:              jinja2: 3.1.3
2024-04-13 18:23:50,351:INFO:               scipy: 1.11.4
2024-04-13 18:23:50,351:INFO:              joblib: 1.3.2
2024-04-13 18:23:50,351:INFO:             sklearn: 1.4.1.post1
2024-04-13 18:23:50,351:INFO:                pyod: 1.1.3
2024-04-13 18:23:50,351:INFO:            imblearn: 0.12.2
2024-04-13 18:23:50,351:INFO:   category_encoders: 2.6.3
2024-04-13 18:23:50,351:INFO:            lightgbm: 4.3.0
2024-04-13 18:23:50,351:INFO:               numba: 0.59.1
2024-04-13 18:23:50,351:INFO:            requests: 2.31.0
2024-04-13 18:23:50,352:INFO:          matplotlib: 3.7.5
2024-04-13 18:23:50,352:INFO:          scikitplot: 0.3.7
2024-04-13 18:23:50,352:INFO:         yellowbrick: 1.5
2024-04-13 18:23:50,352:INFO:              plotly: 5.20.0
2024-04-13 18:23:50,352:INFO:    plotly-resampler: Not installed
2024-04-13 18:23:50,352:INFO:             kaleido: 0.2.1
2024-04-13 18:23:50,352:INFO:           schemdraw: 0.15
2024-04-13 18:23:50,352:INFO:         statsmodels: 0.14.1
2024-04-13 18:23:50,352:INFO:              sktime: 0.28.0
2024-04-13 18:23:50,352:INFO:               tbats: 1.1.3
2024-04-13 18:23:50,352:INFO:            pmdarima: 2.0.4
2024-04-13 18:23:50,352:INFO:              psutil: 5.9.8
2024-04-13 18:23:50,352:INFO:          markupsafe: 2.1.5
2024-04-13 18:23:50,352:INFO:             pickle5: Not installed
2024-04-13 18:23:50,352:INFO:         cloudpickle: 3.0.0
2024-04-13 18:23:50,352:INFO:         deprecation: 2.1.0
2024-04-13 18:23:50,353:INFO:              xxhash: 3.4.1
2024-04-13 18:23:50,353:INFO:           wurlitzer: 3.0.3
2024-04-13 18:23:50,353:INFO:PyCaret optional dependencies:
2024-04-13 18:23:50,353:INFO:                shap: Not installed
2024-04-13 18:23:50,353:INFO:           interpret: Not installed
2024-04-13 18:23:50,353:INFO:                umap: Not installed
2024-04-13 18:23:50,353:INFO:     ydata_profiling: Not installed
2024-04-13 18:23:50,353:INFO:  explainerdashboard: Not installed
2024-04-13 18:23:50,353:INFO:             autoviz: Not installed
2024-04-13 18:23:50,353:INFO:           fairlearn: Not installed
2024-04-13 18:23:50,353:INFO:          deepchecks: Not installed
2024-04-13 18:23:50,353:INFO:             xgboost: Not installed
2024-04-13 18:23:50,353:INFO:            catboost: Not installed
2024-04-13 18:23:50,353:INFO:              kmodes: Not installed
2024-04-13 18:23:50,354:INFO:             mlxtend: Not installed
2024-04-13 18:23:50,354:INFO:       statsforecast: Not installed
2024-04-13 18:23:50,354:INFO:        tune_sklearn: Not installed
2024-04-13 18:23:50,354:INFO:                 ray: Not installed
2024-04-13 18:23:50,354:INFO:            hyperopt: Not installed
2024-04-13 18:23:50,354:INFO:              optuna: Not installed
2024-04-13 18:23:50,354:INFO:               skopt: Not installed
2024-04-13 18:23:50,354:INFO:              mlflow: 2.11.3
2024-04-13 18:23:50,354:INFO:              gradio: Not installed
2024-04-13 18:23:50,354:INFO:             fastapi: Not installed
2024-04-13 18:23:50,354:INFO:             uvicorn: Not installed
2024-04-13 18:23:50,354:INFO:              m2cgen: Not installed
2024-04-13 18:23:50,354:INFO:           evidently: Not installed
2024-04-13 18:23:50,354:INFO:               fugue: Not installed
2024-04-13 18:23:50,354:INFO:           streamlit: 1.33.0
2024-04-13 18:23:50,355:INFO:             prophet: Not installed
2024-04-13 18:23:50,355:INFO:None
2024-04-13 18:23:50,355:INFO:Set up data.
2024-04-13 18:23:50,360:INFO:Set up folding strategy.
2024-04-13 18:23:50,360:INFO:Set up train/test split.
2024-04-13 18:23:50,360:INFO:Set up data.
2024-04-13 18:23:50,366:INFO:Set up index.
2024-04-13 18:23:50,366:INFO:Assigning column types.
2024-04-13 18:23:50,372:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 18:23:50,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:23:50,443:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:23:50,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 18:23:50,558:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:23:50,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,603:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 18:23:50,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:23:50,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,788:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 18:23:50,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,834:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 18:23:50,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:50,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,066:INFO:Preparing preprocessing pipeline...
2024-04-13 18:23:51,067:INFO:Set up simple imputation.
2024-04-13 18:23:51,067:INFO:Set up feature normalization.
2024-04-13 18:23:51,107:INFO:Finished creating preprocessing pipeline.
2024-04-13 18:23:51,115:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 18:23:51,115:INFO:Creating final display dataframe.
2024-04-13 18:23:51,258:INFO:Setup _display_container:                     Description             Value
0                    Session id              3468
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4169
2024-04-13 18:23:51,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 18:23:51,497:INFO:setup() successfully completed in 1.16s...............
2024-04-13 18:23:51,499:INFO:Initializing compare_models()
2024-04-13 18:23:51,499:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 18:23:51,499:INFO:Checking exceptions
2024-04-13 18:23:51,505:INFO:Preparing display monitor
2024-04-13 18:23:51,532:INFO:Initializing Decision Tree Classifier
2024-04-13 18:23:51,532:INFO:Total runtime is 0.0 minutes
2024-04-13 18:23:51,536:INFO:SubProcess create_model() called ==================================
2024-04-13 18:23:51,536:INFO:Initializing create_model()
2024-04-13 18:23:51,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEBCABC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:23:51,537:INFO:Checking exceptions
2024-04-13 18:23:51,537:INFO:Importing libraries
2024-04-13 18:23:51,537:INFO:Copying training dataset
2024-04-13 18:23:51,547:INFO:Defining folds
2024-04-13 18:23:51,547:INFO:Declaring metric variables
2024-04-13 18:23:51,552:INFO:Importing untrained model
2024-04-13 18:23:51,556:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:23:51,565:INFO:Starting cross validation
2024-04-13 18:23:51,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:23:56,332:INFO:Calculating mean and std
2024-04-13 18:23:56,335:INFO:Creating metrics dataframe
2024-04-13 18:23:56,340:INFO:Uploading results into container
2024-04-13 18:23:56,341:INFO:Uploading model into container now
2024-04-13 18:23:56,342:INFO:_master_model_container: 1
2024-04-13 18:23:56,343:INFO:_display_container: 2
2024-04-13 18:23:56,343:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3468, splitter='best')
2024-04-13 18:23:56,344:INFO:create_model() successfully completed......................................
2024-04-13 18:23:56,482:INFO:SubProcess create_model() end ==================================
2024-04-13 18:23:56,482:INFO:Creating metrics dataframe
2024-04-13 18:23:56,491:INFO:Initializing Logistic Regression
2024-04-13 18:23:56,491:INFO:Total runtime is 0.08264175256093344 minutes
2024-04-13 18:23:56,495:INFO:SubProcess create_model() called ==================================
2024-04-13 18:23:56,495:INFO:Initializing create_model()
2024-04-13 18:23:56,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEBCABC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:23:56,496:INFO:Checking exceptions
2024-04-13 18:23:56,496:INFO:Importing libraries
2024-04-13 18:23:56,496:INFO:Copying training dataset
2024-04-13 18:23:56,505:INFO:Defining folds
2024-04-13 18:23:56,505:INFO:Declaring metric variables
2024-04-13 18:23:56,509:INFO:Importing untrained model
2024-04-13 18:23:56,513:INFO:Logistic Regression Imported successfully
2024-04-13 18:23:56,521:INFO:Starting cross validation
2024-04-13 18:23:56,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 18:23:59,707:INFO:Calculating mean and std
2024-04-13 18:23:59,710:INFO:Creating metrics dataframe
2024-04-13 18:23:59,715:INFO:Uploading results into container
2024-04-13 18:23:59,716:INFO:Uploading model into container now
2024-04-13 18:23:59,717:INFO:_master_model_container: 2
2024-04-13 18:23:59,717:INFO:_display_container: 2
2024-04-13 18:23:59,718:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:23:59,718:INFO:create_model() successfully completed......................................
2024-04-13 18:23:59,869:INFO:SubProcess create_model() end ==================================
2024-04-13 18:23:59,869:INFO:Creating metrics dataframe
2024-04-13 18:23:59,894:INFO:Initializing create_model()
2024-04-13 18:23:59,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3468, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:23:59,894:INFO:Checking exceptions
2024-04-13 18:23:59,897:INFO:Importing libraries
2024-04-13 18:23:59,897:INFO:Copying training dataset
2024-04-13 18:23:59,906:INFO:Defining folds
2024-04-13 18:23:59,906:INFO:Declaring metric variables
2024-04-13 18:23:59,906:INFO:Importing untrained model
2024-04-13 18:23:59,906:INFO:Declaring custom model
2024-04-13 18:23:59,907:INFO:Decision Tree Classifier Imported successfully
2024-04-13 18:23:59,908:INFO:Cross validation set to False
2024-04-13 18:23:59,908:INFO:Fitting Model
2024-04-13 18:23:59,982:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3468, splitter='best')
2024-04-13 18:23:59,982:INFO:create_model() successfully completed......................................
2024-04-13 18:24:00,109:INFO:Initializing create_model()
2024-04-13 18:24:00,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 18:24:00,109:INFO:Checking exceptions
2024-04-13 18:24:00,111:INFO:Importing libraries
2024-04-13 18:24:00,111:INFO:Copying training dataset
2024-04-13 18:24:00,119:INFO:Defining folds
2024-04-13 18:24:00,119:INFO:Declaring metric variables
2024-04-13 18:24:00,120:INFO:Importing untrained model
2024-04-13 18:24:00,120:INFO:Declaring custom model
2024-04-13 18:24:00,120:INFO:Logistic Regression Imported successfully
2024-04-13 18:24:00,122:INFO:Cross validation set to False
2024-04-13 18:24:00,122:INFO:Fitting Model
2024-04-13 18:24:00,145:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 18:24:00,145:INFO:create_model() successfully completed......................................
2024-04-13 18:24:00,281:INFO:_master_model_container: 2
2024-04-13 18:24:00,281:INFO:_display_container: 2
2024-04-13 18:24:00,282:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3468, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 18:24:00,282:INFO:compare_models() successfully completed......................................
2024-04-13 18:24:00,283:INFO:Initializing predict_model()
2024-04-13 18:24:00,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3468, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DA387760>)
2024-04-13 18:24:00,283:INFO:Checking exceptions
2024-04-13 18:24:00,283:INFO:Preloading libraries
2024-04-13 19:45:18,850:INFO:PyCaret ClassificationExperiment
2024-04-13 19:45:18,850:INFO:Logging name: clf-default-name
2024-04-13 19:45:18,850:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:45:18,850:INFO:version 3.3.0
2024-04-13 19:45:18,850:INFO:Initializing setup()
2024-04-13 19:45:18,850:INFO:self.USI: fccb
2024-04-13 19:45:18,850:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:45:18,851:INFO:Checking environment
2024-04-13 19:45:18,851:INFO:python_version: 3.10.14
2024-04-13 19:45:18,851:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:45:18,851:INFO:machine: AMD64
2024-04-13 19:45:18,851:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:45:18,858:INFO:Memory: svmem(total=17131573248, available=4808728576, percent=71.9, used=12322844672, free=4808728576)
2024-04-13 19:45:18,858:INFO:Physical Core: 8
2024-04-13 19:45:18,858:INFO:Logical Core: 16
2024-04-13 19:45:18,858:INFO:Checking libraries
2024-04-13 19:45:18,859:INFO:System:
2024-04-13 19:45:18,859:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:45:18,859:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:45:18,859:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:45:18,859:INFO:PyCaret required dependencies:
2024-04-13 19:45:18,860:INFO:                 pip: 23.3.1
2024-04-13 19:45:18,860:INFO:          setuptools: 68.2.2
2024-04-13 19:45:18,860:INFO:             pycaret: 3.3.0
2024-04-13 19:45:18,861:INFO:             IPython: 8.23.0
2024-04-13 19:45:18,861:INFO:          ipywidgets: 8.1.2
2024-04-13 19:45:18,861:INFO:                tqdm: 4.66.2
2024-04-13 19:45:18,861:INFO:               numpy: 1.26.4
2024-04-13 19:45:18,861:INFO:              pandas: 2.1.4
2024-04-13 19:45:18,861:INFO:              jinja2: 3.1.3
2024-04-13 19:45:18,861:INFO:               scipy: 1.11.4
2024-04-13 19:45:18,861:INFO:              joblib: 1.3.2
2024-04-13 19:45:18,861:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:45:18,861:INFO:                pyod: 1.1.3
2024-04-13 19:45:18,861:INFO:            imblearn: 0.12.2
2024-04-13 19:45:18,861:INFO:   category_encoders: 2.6.3
2024-04-13 19:45:18,861:INFO:            lightgbm: 4.3.0
2024-04-13 19:45:18,861:INFO:               numba: 0.59.1
2024-04-13 19:45:18,861:INFO:            requests: 2.31.0
2024-04-13 19:45:18,862:INFO:          matplotlib: 3.7.5
2024-04-13 19:45:18,862:INFO:          scikitplot: 0.3.7
2024-04-13 19:45:18,862:INFO:         yellowbrick: 1.5
2024-04-13 19:45:18,862:INFO:              plotly: 5.20.0
2024-04-13 19:45:18,862:INFO:    plotly-resampler: Not installed
2024-04-13 19:45:18,862:INFO:             kaleido: 0.2.1
2024-04-13 19:45:18,862:INFO:           schemdraw: 0.15
2024-04-13 19:45:18,862:INFO:         statsmodels: 0.14.1
2024-04-13 19:45:18,862:INFO:              sktime: 0.28.0
2024-04-13 19:45:18,862:INFO:               tbats: 1.1.3
2024-04-13 19:45:18,862:INFO:            pmdarima: 2.0.4
2024-04-13 19:45:18,862:INFO:              psutil: 5.9.8
2024-04-13 19:45:18,862:INFO:          markupsafe: 2.1.5
2024-04-13 19:45:18,862:INFO:             pickle5: Not installed
2024-04-13 19:45:18,862:INFO:         cloudpickle: 3.0.0
2024-04-13 19:45:18,862:INFO:         deprecation: 2.1.0
2024-04-13 19:45:18,863:INFO:              xxhash: 3.4.1
2024-04-13 19:45:18,863:INFO:           wurlitzer: 3.0.3
2024-04-13 19:45:18,863:INFO:PyCaret optional dependencies:
2024-04-13 19:45:18,863:INFO:                shap: Not installed
2024-04-13 19:45:18,863:INFO:           interpret: Not installed
2024-04-13 19:45:18,863:INFO:                umap: Not installed
2024-04-13 19:45:18,863:INFO:     ydata_profiling: Not installed
2024-04-13 19:45:18,863:INFO:  explainerdashboard: Not installed
2024-04-13 19:45:18,863:INFO:             autoviz: Not installed
2024-04-13 19:45:18,863:INFO:           fairlearn: Not installed
2024-04-13 19:45:18,863:INFO:          deepchecks: Not installed
2024-04-13 19:45:18,863:INFO:             xgboost: Not installed
2024-04-13 19:45:18,863:INFO:            catboost: Not installed
2024-04-13 19:45:18,863:INFO:              kmodes: Not installed
2024-04-13 19:45:18,864:INFO:             mlxtend: Not installed
2024-04-13 19:45:18,864:INFO:       statsforecast: Not installed
2024-04-13 19:45:18,864:INFO:        tune_sklearn: Not installed
2024-04-13 19:45:18,864:INFO:                 ray: Not installed
2024-04-13 19:45:18,864:INFO:            hyperopt: Not installed
2024-04-13 19:45:18,864:INFO:              optuna: Not installed
2024-04-13 19:45:18,864:INFO:               skopt: Not installed
2024-04-13 19:45:18,864:INFO:              mlflow: 2.11.3
2024-04-13 19:45:18,864:INFO:              gradio: Not installed
2024-04-13 19:45:18,864:INFO:             fastapi: Not installed
2024-04-13 19:45:18,864:INFO:             uvicorn: Not installed
2024-04-13 19:45:18,864:INFO:              m2cgen: Not installed
2024-04-13 19:45:18,864:INFO:           evidently: Not installed
2024-04-13 19:45:18,864:INFO:               fugue: Not installed
2024-04-13 19:45:18,865:INFO:           streamlit: 1.33.0
2024-04-13 19:45:18,865:INFO:             prophet: Not installed
2024-04-13 19:45:18,865:INFO:None
2024-04-13 19:45:18,865:INFO:Set up data.
2024-04-13 19:45:18,907:INFO:Set up folding strategy.
2024-04-13 19:45:18,909:INFO:Set up train/test split.
2024-04-13 19:45:18,909:INFO:Set up data.
2024-04-13 19:45:18,915:INFO:Set up index.
2024-04-13 19:45:18,916:INFO:Assigning column types.
2024-04-13 19:45:18,925:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:45:19,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:45:19,005:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:45:19,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,126:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:45:19,127:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:45:19,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,172:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:45:19,244:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:45:19,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,359:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:45:19,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,403:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:45:19,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,634:INFO:Preparing preprocessing pipeline...
2024-04-13 19:45:19,636:INFO:Set up simple imputation.
2024-04-13 19:45:19,637:INFO:Set up feature normalization.
2024-04-13 19:45:19,689:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:45:19,697:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:45:19,697:INFO:Creating final display dataframe.
2024-04-13 19:45:19,838:INFO:Setup _display_container:                     Description             Value
0                    Session id              8184
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              fccb
2024-04-13 19:45:19,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:19,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:20,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:20,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:45:20,089:INFO:setup() successfully completed in 1.26s...............
2024-04-13 19:45:20,093:INFO:Initializing compare_models()
2024-04-13 19:45:20,093:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:45:20,093:INFO:Checking exceptions
2024-04-13 19:45:20,100:INFO:Preparing display monitor
2024-04-13 19:45:20,133:INFO:Initializing Logistic Regression
2024-04-13 19:45:20,134:INFO:Total runtime is 1.6669432322184246e-05 minutes
2024-04-13 19:45:20,145:INFO:SubProcess create_model() called ==================================
2024-04-13 19:45:20,147:INFO:Initializing create_model()
2024-04-13 19:45:20,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAC75960>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:45:20,147:INFO:Checking exceptions
2024-04-13 19:45:20,147:INFO:Importing libraries
2024-04-13 19:45:20,147:INFO:Copying training dataset
2024-04-13 19:45:20,162:INFO:Defining folds
2024-04-13 19:45:20,162:INFO:Declaring metric variables
2024-04-13 19:45:20,170:INFO:Importing untrained model
2024-04-13 19:45:20,177:INFO:Logistic Regression Imported successfully
2024-04-13 19:45:20,188:INFO:Starting cross validation
2024-04-13 19:45:20,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:45:25,314:INFO:Calculating mean and std
2024-04-13 19:45:25,316:INFO:Creating metrics dataframe
2024-04-13 19:45:25,322:INFO:Uploading results into container
2024-04-13 19:45:25,324:INFO:Uploading model into container now
2024-04-13 19:45:25,325:INFO:_master_model_container: 1
2024-04-13 19:45:25,326:INFO:_display_container: 2
2024-04-13 19:45:25,327:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8184, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:45:25,327:INFO:create_model() successfully completed......................................
2024-04-13 19:45:25,748:INFO:SubProcess create_model() end ==================================
2024-04-13 19:45:25,748:INFO:Creating metrics dataframe
2024-04-13 19:45:25,758:INFO:Initializing Decision Tree Classifier
2024-04-13 19:45:25,758:INFO:Total runtime is 0.09375181595484416 minutes
2024-04-13 19:45:25,762:INFO:SubProcess create_model() called ==================================
2024-04-13 19:45:25,762:INFO:Initializing create_model()
2024-04-13 19:45:25,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAC75960>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:45:25,763:INFO:Checking exceptions
2024-04-13 19:45:25,763:INFO:Importing libraries
2024-04-13 19:45:25,763:INFO:Copying training dataset
2024-04-13 19:45:25,772:INFO:Defining folds
2024-04-13 19:45:25,773:INFO:Declaring metric variables
2024-04-13 19:45:25,777:INFO:Importing untrained model
2024-04-13 19:45:25,781:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:45:25,790:INFO:Starting cross validation
2024-04-13 19:45:25,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:45:29,096:INFO:Calculating mean and std
2024-04-13 19:45:29,099:INFO:Creating metrics dataframe
2024-04-13 19:45:29,102:INFO:Uploading results into container
2024-04-13 19:45:29,103:INFO:Uploading model into container now
2024-04-13 19:45:29,104:INFO:_master_model_container: 2
2024-04-13 19:45:29,104:INFO:_display_container: 2
2024-04-13 19:45:29,105:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8184, splitter='best')
2024-04-13 19:45:29,105:INFO:create_model() successfully completed......................................
2024-04-13 19:45:29,242:INFO:SubProcess create_model() end ==================================
2024-04-13 19:45:29,242:INFO:Creating metrics dataframe
2024-04-13 19:45:29,263:INFO:Initializing create_model()
2024-04-13 19:45:29,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8184, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:45:29,263:INFO:Checking exceptions
2024-04-13 19:45:29,265:INFO:Importing libraries
2024-04-13 19:45:29,265:INFO:Copying training dataset
2024-04-13 19:45:29,274:INFO:Defining folds
2024-04-13 19:45:29,274:INFO:Declaring metric variables
2024-04-13 19:45:29,274:INFO:Importing untrained model
2024-04-13 19:45:29,274:INFO:Declaring custom model
2024-04-13 19:45:29,275:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:45:29,276:INFO:Cross validation set to False
2024-04-13 19:45:29,276:INFO:Fitting Model
2024-04-13 19:45:29,348:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8184, splitter='best')
2024-04-13 19:45:29,349:INFO:create_model() successfully completed......................................
2024-04-13 19:45:29,478:INFO:Initializing create_model()
2024-04-13 19:45:29,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8184, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:45:29,478:INFO:Checking exceptions
2024-04-13 19:45:29,480:INFO:Importing libraries
2024-04-13 19:45:29,481:INFO:Copying training dataset
2024-04-13 19:45:29,489:INFO:Defining folds
2024-04-13 19:45:29,489:INFO:Declaring metric variables
2024-04-13 19:45:29,489:INFO:Importing untrained model
2024-04-13 19:45:29,489:INFO:Declaring custom model
2024-04-13 19:45:29,490:INFO:Logistic Regression Imported successfully
2024-04-13 19:45:29,491:INFO:Cross validation set to False
2024-04-13 19:45:29,491:INFO:Fitting Model
2024-04-13 19:45:29,516:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8184, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:45:29,516:INFO:create_model() successfully completed......................................
2024-04-13 19:45:29,654:INFO:_master_model_container: 2
2024-04-13 19:45:29,654:INFO:_display_container: 2
2024-04-13 19:45:29,655:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8184, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8184, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:45:29,655:INFO:compare_models() successfully completed......................................
2024-04-13 19:45:29,656:INFO:Initializing predict_model()
2024-04-13 19:45:29,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF064910>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8184, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DAB57250>)
2024-04-13 19:45:29,656:INFO:Checking exceptions
2024-04-13 19:45:29,656:INFO:Preloading libraries
2024-04-13 19:46:47,182:INFO:PyCaret ClassificationExperiment
2024-04-13 19:46:47,182:INFO:Logging name: clf-default-name
2024-04-13 19:46:47,182:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:46:47,182:INFO:version 3.3.0
2024-04-13 19:46:47,182:INFO:Initializing setup()
2024-04-13 19:46:47,182:INFO:self.USI: 4ec4
2024-04-13 19:46:47,182:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:46:47,182:INFO:Checking environment
2024-04-13 19:46:47,182:INFO:python_version: 3.10.14
2024-04-13 19:46:47,182:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:46:47,182:INFO:machine: AMD64
2024-04-13 19:46:47,182:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:46:47,188:INFO:Memory: svmem(total=17131573248, available=4771745792, percent=72.1, used=12359827456, free=4771745792)
2024-04-13 19:46:47,188:INFO:Physical Core: 8
2024-04-13 19:46:47,188:INFO:Logical Core: 16
2024-04-13 19:46:47,188:INFO:Checking libraries
2024-04-13 19:46:47,188:INFO:System:
2024-04-13 19:46:47,188:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:46:47,189:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:46:47,189:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:46:47,189:INFO:PyCaret required dependencies:
2024-04-13 19:46:47,189:INFO:                 pip: 23.3.1
2024-04-13 19:46:47,189:INFO:          setuptools: 68.2.2
2024-04-13 19:46:47,189:INFO:             pycaret: 3.3.0
2024-04-13 19:46:47,189:INFO:             IPython: 8.23.0
2024-04-13 19:46:47,189:INFO:          ipywidgets: 8.1.2
2024-04-13 19:46:47,189:INFO:                tqdm: 4.66.2
2024-04-13 19:46:47,189:INFO:               numpy: 1.26.4
2024-04-13 19:46:47,189:INFO:              pandas: 2.1.4
2024-04-13 19:46:47,189:INFO:              jinja2: 3.1.3
2024-04-13 19:46:47,189:INFO:               scipy: 1.11.4
2024-04-13 19:46:47,189:INFO:              joblib: 1.3.2
2024-04-13 19:46:47,190:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:46:47,190:INFO:                pyod: 1.1.3
2024-04-13 19:46:47,190:INFO:            imblearn: 0.12.2
2024-04-13 19:46:47,190:INFO:   category_encoders: 2.6.3
2024-04-13 19:46:47,190:INFO:            lightgbm: 4.3.0
2024-04-13 19:46:47,190:INFO:               numba: 0.59.1
2024-04-13 19:46:47,190:INFO:            requests: 2.31.0
2024-04-13 19:46:47,190:INFO:          matplotlib: 3.7.5
2024-04-13 19:46:47,190:INFO:          scikitplot: 0.3.7
2024-04-13 19:46:47,190:INFO:         yellowbrick: 1.5
2024-04-13 19:46:47,190:INFO:              plotly: 5.20.0
2024-04-13 19:46:47,190:INFO:    plotly-resampler: Not installed
2024-04-13 19:46:47,190:INFO:             kaleido: 0.2.1
2024-04-13 19:46:47,190:INFO:           schemdraw: 0.15
2024-04-13 19:46:47,190:INFO:         statsmodels: 0.14.1
2024-04-13 19:46:47,191:INFO:              sktime: 0.28.0
2024-04-13 19:46:47,191:INFO:               tbats: 1.1.3
2024-04-13 19:46:47,191:INFO:            pmdarima: 2.0.4
2024-04-13 19:46:47,191:INFO:              psutil: 5.9.8
2024-04-13 19:46:47,191:INFO:          markupsafe: 2.1.5
2024-04-13 19:46:47,191:INFO:             pickle5: Not installed
2024-04-13 19:46:47,191:INFO:         cloudpickle: 3.0.0
2024-04-13 19:46:47,191:INFO:         deprecation: 2.1.0
2024-04-13 19:46:47,191:INFO:              xxhash: 3.4.1
2024-04-13 19:46:47,191:INFO:           wurlitzer: 3.0.3
2024-04-13 19:46:47,191:INFO:PyCaret optional dependencies:
2024-04-13 19:46:47,191:INFO:                shap: Not installed
2024-04-13 19:46:47,191:INFO:           interpret: Not installed
2024-04-13 19:46:47,192:INFO:                umap: Not installed
2024-04-13 19:46:47,192:INFO:     ydata_profiling: Not installed
2024-04-13 19:46:47,192:INFO:  explainerdashboard: Not installed
2024-04-13 19:46:47,192:INFO:             autoviz: Not installed
2024-04-13 19:46:47,192:INFO:           fairlearn: Not installed
2024-04-13 19:46:47,192:INFO:          deepchecks: Not installed
2024-04-13 19:46:47,192:INFO:             xgboost: Not installed
2024-04-13 19:46:47,192:INFO:            catboost: Not installed
2024-04-13 19:46:47,192:INFO:              kmodes: Not installed
2024-04-13 19:46:47,192:INFO:             mlxtend: Not installed
2024-04-13 19:46:47,192:INFO:       statsforecast: Not installed
2024-04-13 19:46:47,192:INFO:        tune_sklearn: Not installed
2024-04-13 19:46:47,192:INFO:                 ray: Not installed
2024-04-13 19:46:47,192:INFO:            hyperopt: Not installed
2024-04-13 19:46:47,192:INFO:              optuna: Not installed
2024-04-13 19:46:47,192:INFO:               skopt: Not installed
2024-04-13 19:46:47,193:INFO:              mlflow: 2.11.3
2024-04-13 19:46:47,193:INFO:              gradio: Not installed
2024-04-13 19:46:47,193:INFO:             fastapi: Not installed
2024-04-13 19:46:47,193:INFO:             uvicorn: Not installed
2024-04-13 19:46:47,193:INFO:              m2cgen: Not installed
2024-04-13 19:46:47,193:INFO:           evidently: Not installed
2024-04-13 19:46:47,193:INFO:               fugue: Not installed
2024-04-13 19:46:47,193:INFO:           streamlit: 1.33.0
2024-04-13 19:46:47,193:INFO:             prophet: Not installed
2024-04-13 19:46:47,193:INFO:None
2024-04-13 19:46:47,193:INFO:Set up data.
2024-04-13 19:46:47,199:INFO:Set up folding strategy.
2024-04-13 19:46:47,199:INFO:Set up train/test split.
2024-04-13 19:46:47,199:INFO:Set up data.
2024-04-13 19:46:47,210:INFO:Set up index.
2024-04-13 19:46:47,212:INFO:Assigning column types.
2024-04-13 19:46:47,218:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:46:47,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:46:47,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:46:47,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,402:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:46:47,403:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:46:47,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,448:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:46:47,517:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:46:47,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:46:47,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,673:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:46:47,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:47,899:INFO:Preparing preprocessing pipeline...
2024-04-13 19:46:47,901:INFO:Set up simple imputation.
2024-04-13 19:46:47,901:INFO:Set up feature normalization.
2024-04-13 19:46:47,940:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:46:47,947:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:46:47,948:INFO:Creating final display dataframe.
2024-04-13 19:46:48,081:INFO:Setup _display_container:                     Description             Value
0                    Session id              1588
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4ec4
2024-04-13 19:46:48,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:48,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:48,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:48,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:46:48,314:INFO:setup() successfully completed in 1.14s...............
2024-04-13 19:46:48,316:INFO:Initializing compare_models()
2024-04-13 19:46:48,316:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:46:48,316:INFO:Checking exceptions
2024-04-13 19:46:48,322:INFO:Preparing display monitor
2024-04-13 19:46:48,348:INFO:Initializing Logistic Regression
2024-04-13 19:46:48,348:INFO:Total runtime is 0.0 minutes
2024-04-13 19:46:48,352:INFO:SubProcess create_model() called ==================================
2024-04-13 19:46:48,353:INFO:Initializing create_model()
2024-04-13 19:46:48,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DA88FAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:46:48,353:INFO:Checking exceptions
2024-04-13 19:46:48,353:INFO:Importing libraries
2024-04-13 19:46:48,353:INFO:Copying training dataset
2024-04-13 19:46:48,364:INFO:Defining folds
2024-04-13 19:46:48,364:INFO:Declaring metric variables
2024-04-13 19:46:48,369:INFO:Importing untrained model
2024-04-13 19:46:48,373:INFO:Logistic Regression Imported successfully
2024-04-13 19:46:48,383:INFO:Starting cross validation
2024-04-13 19:46:48,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:46:53,258:INFO:Calculating mean and std
2024-04-13 19:46:53,262:INFO:Creating metrics dataframe
2024-04-13 19:46:53,266:INFO:Uploading results into container
2024-04-13 19:46:53,267:INFO:Uploading model into container now
2024-04-13 19:46:53,268:INFO:_master_model_container: 1
2024-04-13 19:46:53,268:INFO:_display_container: 2
2024-04-13 19:46:53,269:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1588, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:46:53,269:INFO:create_model() successfully completed......................................
2024-04-13 19:46:53,404:INFO:SubProcess create_model() end ==================================
2024-04-13 19:46:53,404:INFO:Creating metrics dataframe
2024-04-13 19:46:53,413:INFO:Initializing Decision Tree Classifier
2024-04-13 19:46:53,413:INFO:Total runtime is 0.08440999587376913 minutes
2024-04-13 19:46:53,417:INFO:SubProcess create_model() called ==================================
2024-04-13 19:46:53,417:INFO:Initializing create_model()
2024-04-13 19:46:53,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DA88FAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:46:53,418:INFO:Checking exceptions
2024-04-13 19:46:53,418:INFO:Importing libraries
2024-04-13 19:46:53,418:INFO:Copying training dataset
2024-04-13 19:46:53,427:INFO:Defining folds
2024-04-13 19:46:53,427:INFO:Declaring metric variables
2024-04-13 19:46:53,431:INFO:Importing untrained model
2024-04-13 19:46:53,436:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:46:53,443:INFO:Starting cross validation
2024-04-13 19:46:53,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:46:56,721:INFO:Calculating mean and std
2024-04-13 19:46:56,723:INFO:Creating metrics dataframe
2024-04-13 19:46:56,726:INFO:Uploading results into container
2024-04-13 19:46:56,727:INFO:Uploading model into container now
2024-04-13 19:46:56,729:INFO:_master_model_container: 2
2024-04-13 19:46:56,729:INFO:_display_container: 2
2024-04-13 19:46:56,730:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1588, splitter='best')
2024-04-13 19:46:56,730:INFO:create_model() successfully completed......................................
2024-04-13 19:46:56,875:INFO:SubProcess create_model() end ==================================
2024-04-13 19:46:56,875:INFO:Creating metrics dataframe
2024-04-13 19:46:56,896:INFO:Initializing create_model()
2024-04-13 19:46:56,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1588, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:46:56,896:INFO:Checking exceptions
2024-04-13 19:46:56,898:INFO:Importing libraries
2024-04-13 19:46:56,899:INFO:Copying training dataset
2024-04-13 19:46:56,906:INFO:Defining folds
2024-04-13 19:46:56,907:INFO:Declaring metric variables
2024-04-13 19:46:56,907:INFO:Importing untrained model
2024-04-13 19:46:56,907:INFO:Declaring custom model
2024-04-13 19:46:56,908:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:46:56,909:INFO:Cross validation set to False
2024-04-13 19:46:56,909:INFO:Fitting Model
2024-04-13 19:46:56,983:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1588, splitter='best')
2024-04-13 19:46:56,983:INFO:create_model() successfully completed......................................
2024-04-13 19:46:57,125:INFO:Initializing create_model()
2024-04-13 19:46:57,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1588, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:46:57,126:INFO:Checking exceptions
2024-04-13 19:46:57,128:INFO:Importing libraries
2024-04-13 19:46:57,128:INFO:Copying training dataset
2024-04-13 19:46:57,136:INFO:Defining folds
2024-04-13 19:46:57,136:INFO:Declaring metric variables
2024-04-13 19:46:57,137:INFO:Importing untrained model
2024-04-13 19:46:57,137:INFO:Declaring custom model
2024-04-13 19:46:57,137:INFO:Logistic Regression Imported successfully
2024-04-13 19:46:57,139:INFO:Cross validation set to False
2024-04-13 19:46:57,139:INFO:Fitting Model
2024-04-13 19:46:57,162:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1588, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:46:57,162:INFO:create_model() successfully completed......................................
2024-04-13 19:46:57,299:INFO:_master_model_container: 2
2024-04-13 19:46:57,299:INFO:_display_container: 2
2024-04-13 19:46:57,300:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1588, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1588, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:46:57,300:INFO:compare_models() successfully completed......................................
2024-04-13 19:46:57,301:INFO:Initializing predict_model()
2024-04-13 19:46:57,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE4BB50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1588, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161D7A3BF40>)
2024-04-13 19:46:57,301:INFO:Checking exceptions
2024-04-13 19:46:57,301:INFO:Preloading libraries
2024-04-13 19:48:24,838:INFO:PyCaret ClassificationExperiment
2024-04-13 19:48:24,839:INFO:Logging name: clf-default-name
2024-04-13 19:48:24,839:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:48:24,839:INFO:version 3.3.0
2024-04-13 19:48:24,839:INFO:Initializing setup()
2024-04-13 19:48:24,839:INFO:self.USI: ca92
2024-04-13 19:48:24,839:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:48:24,839:INFO:Checking environment
2024-04-13 19:48:24,839:INFO:python_version: 3.10.14
2024-04-13 19:48:24,839:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:48:24,839:INFO:machine: AMD64
2024-04-13 19:48:24,839:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:48:24,845:INFO:Memory: svmem(total=17131573248, available=2850095104, percent=83.4, used=14281478144, free=2850095104)
2024-04-13 19:48:24,845:INFO:Physical Core: 8
2024-04-13 19:48:24,845:INFO:Logical Core: 16
2024-04-13 19:48:24,845:INFO:Checking libraries
2024-04-13 19:48:24,845:INFO:System:
2024-04-13 19:48:24,845:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:48:24,845:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:48:24,845:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:48:24,845:INFO:PyCaret required dependencies:
2024-04-13 19:48:24,845:INFO:                 pip: 23.3.1
2024-04-13 19:48:24,845:INFO:          setuptools: 68.2.2
2024-04-13 19:48:24,846:INFO:             pycaret: 3.3.0
2024-04-13 19:48:24,846:INFO:             IPython: 8.23.0
2024-04-13 19:48:24,846:INFO:          ipywidgets: 8.1.2
2024-04-13 19:48:24,846:INFO:                tqdm: 4.66.2
2024-04-13 19:48:24,846:INFO:               numpy: 1.26.4
2024-04-13 19:48:24,846:INFO:              pandas: 2.1.4
2024-04-13 19:48:24,846:INFO:              jinja2: 3.1.3
2024-04-13 19:48:24,846:INFO:               scipy: 1.11.4
2024-04-13 19:48:24,846:INFO:              joblib: 1.3.2
2024-04-13 19:48:24,846:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:48:24,846:INFO:                pyod: 1.1.3
2024-04-13 19:48:24,846:INFO:            imblearn: 0.12.2
2024-04-13 19:48:24,846:INFO:   category_encoders: 2.6.3
2024-04-13 19:48:24,846:INFO:            lightgbm: 4.3.0
2024-04-13 19:48:24,847:INFO:               numba: 0.59.1
2024-04-13 19:48:24,847:INFO:            requests: 2.31.0
2024-04-13 19:48:24,847:INFO:          matplotlib: 3.7.5
2024-04-13 19:48:24,847:INFO:          scikitplot: 0.3.7
2024-04-13 19:48:24,847:INFO:         yellowbrick: 1.5
2024-04-13 19:48:24,847:INFO:              plotly: 5.20.0
2024-04-13 19:48:24,847:INFO:    plotly-resampler: Not installed
2024-04-13 19:48:24,847:INFO:             kaleido: 0.2.1
2024-04-13 19:48:24,847:INFO:           schemdraw: 0.15
2024-04-13 19:48:24,847:INFO:         statsmodels: 0.14.1
2024-04-13 19:48:24,847:INFO:              sktime: 0.28.0
2024-04-13 19:48:24,847:INFO:               tbats: 1.1.3
2024-04-13 19:48:24,847:INFO:            pmdarima: 2.0.4
2024-04-13 19:48:24,847:INFO:              psutil: 5.9.8
2024-04-13 19:48:24,847:INFO:          markupsafe: 2.1.5
2024-04-13 19:48:24,848:INFO:             pickle5: Not installed
2024-04-13 19:48:24,848:INFO:         cloudpickle: 3.0.0
2024-04-13 19:48:24,848:INFO:         deprecation: 2.1.0
2024-04-13 19:48:24,848:INFO:              xxhash: 3.4.1
2024-04-13 19:48:24,848:INFO:           wurlitzer: 3.0.3
2024-04-13 19:48:24,848:INFO:PyCaret optional dependencies:
2024-04-13 19:48:24,848:INFO:                shap: Not installed
2024-04-13 19:48:24,848:INFO:           interpret: Not installed
2024-04-13 19:48:24,848:INFO:                umap: Not installed
2024-04-13 19:48:24,848:INFO:     ydata_profiling: Not installed
2024-04-13 19:48:24,848:INFO:  explainerdashboard: Not installed
2024-04-13 19:48:24,848:INFO:             autoviz: Not installed
2024-04-13 19:48:24,848:INFO:           fairlearn: Not installed
2024-04-13 19:48:24,848:INFO:          deepchecks: Not installed
2024-04-13 19:48:24,849:INFO:             xgboost: Not installed
2024-04-13 19:48:24,849:INFO:            catboost: Not installed
2024-04-13 19:48:24,849:INFO:              kmodes: Not installed
2024-04-13 19:48:24,849:INFO:             mlxtend: Not installed
2024-04-13 19:48:24,849:INFO:       statsforecast: Not installed
2024-04-13 19:48:24,849:INFO:        tune_sklearn: Not installed
2024-04-13 19:48:24,849:INFO:                 ray: Not installed
2024-04-13 19:48:24,849:INFO:            hyperopt: Not installed
2024-04-13 19:48:24,849:INFO:              optuna: Not installed
2024-04-13 19:48:24,849:INFO:               skopt: Not installed
2024-04-13 19:48:24,849:INFO:              mlflow: 2.11.3
2024-04-13 19:48:24,849:INFO:              gradio: Not installed
2024-04-13 19:48:24,849:INFO:             fastapi: Not installed
2024-04-13 19:48:24,849:INFO:             uvicorn: Not installed
2024-04-13 19:48:24,849:INFO:              m2cgen: Not installed
2024-04-13 19:48:24,850:INFO:           evidently: Not installed
2024-04-13 19:48:24,850:INFO:               fugue: Not installed
2024-04-13 19:48:24,850:INFO:           streamlit: 1.33.0
2024-04-13 19:48:24,850:INFO:             prophet: Not installed
2024-04-13 19:48:24,850:INFO:None
2024-04-13 19:48:24,850:INFO:Set up data.
2024-04-13 19:48:24,856:INFO:Set up folding strategy.
2024-04-13 19:48:24,856:INFO:Set up train/test split.
2024-04-13 19:48:24,856:INFO:Set up data.
2024-04-13 19:48:24,861:INFO:Set up index.
2024-04-13 19:48:24,861:INFO:Assigning column types.
2024-04-13 19:48:24,867:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:48:24,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:48:24,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:24,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:24,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:48:25,048:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:25,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,091:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:48:25,161:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:25,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,273:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:25,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,316:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:48:25,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,541:INFO:Preparing preprocessing pipeline...
2024-04-13 19:48:25,543:INFO:Set up simple imputation.
2024-04-13 19:48:25,543:INFO:Set up feature normalization.
2024-04-13 19:48:25,582:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:48:25,589:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:48:25,589:INFO:Creating final display dataframe.
2024-04-13 19:48:25,722:INFO:Setup _display_container:                     Description             Value
0                    Session id              2321
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ca92
2024-04-13 19:48:25,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:25,964:INFO:setup() successfully completed in 1.13s...............
2024-04-13 19:48:25,965:INFO:Initializing compare_models()
2024-04-13 19:48:25,965:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:48:25,966:INFO:Checking exceptions
2024-04-13 19:48:25,972:INFO:Preparing display monitor
2024-04-13 19:48:25,997:INFO:Initializing Logistic Regression
2024-04-13 19:48:25,997:INFO:Total runtime is 0.0 minutes
2024-04-13 19:48:26,001:INFO:SubProcess create_model() called ==================================
2024-04-13 19:48:26,002:INFO:Initializing create_model()
2024-04-13 19:48:26,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAD0F310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:26,002:INFO:Checking exceptions
2024-04-13 19:48:26,002:INFO:Importing libraries
2024-04-13 19:48:26,002:INFO:Copying training dataset
2024-04-13 19:48:26,012:INFO:Defining folds
2024-04-13 19:48:26,012:INFO:Declaring metric variables
2024-04-13 19:48:26,017:INFO:Importing untrained model
2024-04-13 19:48:26,021:INFO:Logistic Regression Imported successfully
2024-04-13 19:48:26,030:INFO:Starting cross validation
2024-04-13 19:48:26,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:48:26,171:INFO:Calculating mean and std
2024-04-13 19:48:26,172:INFO:Creating metrics dataframe
2024-04-13 19:48:26,174:INFO:Uploading results into container
2024-04-13 19:48:26,174:INFO:Uploading model into container now
2024-04-13 19:48:26,175:INFO:_master_model_container: 1
2024-04-13 19:48:26,175:INFO:_display_container: 2
2024-04-13 19:48:26,175:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:48:26,175:INFO:create_model() successfully completed......................................
2024-04-13 19:48:26,300:INFO:SubProcess create_model() end ==================================
2024-04-13 19:48:26,301:INFO:Creating metrics dataframe
2024-04-13 19:48:26,309:INFO:Initializing Decision Tree Classifier
2024-04-13 19:48:26,309:INFO:Total runtime is 0.0051880359649658205 minutes
2024-04-13 19:48:26,313:INFO:SubProcess create_model() called ==================================
2024-04-13 19:48:26,314:INFO:Initializing create_model()
2024-04-13 19:48:26,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAD0F310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:26,314:INFO:Checking exceptions
2024-04-13 19:48:26,314:INFO:Importing libraries
2024-04-13 19:48:26,314:INFO:Copying training dataset
2024-04-13 19:48:26,325:INFO:Defining folds
2024-04-13 19:48:26,325:INFO:Declaring metric variables
2024-04-13 19:48:26,329:INFO:Importing untrained model
2024-04-13 19:48:26,333:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:48:26,341:INFO:Starting cross validation
2024-04-13 19:48:26,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:48:26,524:INFO:Calculating mean and std
2024-04-13 19:48:26,525:INFO:Creating metrics dataframe
2024-04-13 19:48:26,527:INFO:Uploading results into container
2024-04-13 19:48:26,527:INFO:Uploading model into container now
2024-04-13 19:48:26,528:INFO:_master_model_container: 2
2024-04-13 19:48:26,528:INFO:_display_container: 2
2024-04-13 19:48:26,528:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2321, splitter='best')
2024-04-13 19:48:26,528:INFO:create_model() successfully completed......................................
2024-04-13 19:48:26,648:INFO:SubProcess create_model() end ==================================
2024-04-13 19:48:26,648:INFO:Creating metrics dataframe
2024-04-13 19:48:26,667:INFO:Initializing create_model()
2024-04-13 19:48:26,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2321, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:26,667:INFO:Checking exceptions
2024-04-13 19:48:26,670:INFO:Importing libraries
2024-04-13 19:48:26,670:INFO:Copying training dataset
2024-04-13 19:48:26,678:INFO:Defining folds
2024-04-13 19:48:26,678:INFO:Declaring metric variables
2024-04-13 19:48:26,678:INFO:Importing untrained model
2024-04-13 19:48:26,678:INFO:Declaring custom model
2024-04-13 19:48:26,679:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:48:26,680:INFO:Cross validation set to False
2024-04-13 19:48:26,680:INFO:Fitting Model
2024-04-13 19:48:26,755:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2321, splitter='best')
2024-04-13 19:48:26,755:INFO:create_model() successfully completed......................................
2024-04-13 19:48:26,881:INFO:Initializing create_model()
2024-04-13 19:48:26,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:26,881:INFO:Checking exceptions
2024-04-13 19:48:26,883:INFO:Importing libraries
2024-04-13 19:48:26,884:INFO:Copying training dataset
2024-04-13 19:48:26,892:INFO:Defining folds
2024-04-13 19:48:26,892:INFO:Declaring metric variables
2024-04-13 19:48:26,892:INFO:Importing untrained model
2024-04-13 19:48:26,892:INFO:Declaring custom model
2024-04-13 19:48:26,893:INFO:Logistic Regression Imported successfully
2024-04-13 19:48:26,894:INFO:Cross validation set to False
2024-04-13 19:48:26,894:INFO:Fitting Model
2024-04-13 19:48:26,918:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:48:26,918:INFO:create_model() successfully completed......................................
2024-04-13 19:48:27,059:INFO:_master_model_container: 2
2024-04-13 19:48:27,059:INFO:_display_container: 2
2024-04-13 19:48:27,060:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2321, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:48:27,061:INFO:compare_models() successfully completed......................................
2024-04-13 19:48:27,061:INFO:Initializing predict_model()
2024-04-13 19:48:27,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DA7E9DE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2321, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEC56EF0>)
2024-04-13 19:48:27,062:INFO:Checking exceptions
2024-04-13 19:48:27,062:INFO:Preloading libraries
2024-04-13 19:48:40,568:INFO:PyCaret ClassificationExperiment
2024-04-13 19:48:40,568:INFO:Logging name: clf-default-name
2024-04-13 19:48:40,568:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:48:40,568:INFO:version 3.3.0
2024-04-13 19:48:40,568:INFO:Initializing setup()
2024-04-13 19:48:40,568:INFO:self.USI: d5da
2024-04-13 19:48:40,568:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:48:40,568:INFO:Checking environment
2024-04-13 19:48:40,568:INFO:python_version: 3.10.14
2024-04-13 19:48:40,569:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:48:40,569:INFO:machine: AMD64
2024-04-13 19:48:40,569:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:48:40,575:INFO:Memory: svmem(total=17131573248, available=3163590656, percent=81.5, used=13967982592, free=3163590656)
2024-04-13 19:48:40,575:INFO:Physical Core: 8
2024-04-13 19:48:40,575:INFO:Logical Core: 16
2024-04-13 19:48:40,575:INFO:Checking libraries
2024-04-13 19:48:40,575:INFO:System:
2024-04-13 19:48:40,575:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:48:40,575:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:48:40,575:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:48:40,575:INFO:PyCaret required dependencies:
2024-04-13 19:48:40,576:INFO:                 pip: 23.3.1
2024-04-13 19:48:40,576:INFO:          setuptools: 68.2.2
2024-04-13 19:48:40,576:INFO:             pycaret: 3.3.0
2024-04-13 19:48:40,576:INFO:             IPython: 8.23.0
2024-04-13 19:48:40,576:INFO:          ipywidgets: 8.1.2
2024-04-13 19:48:40,576:INFO:                tqdm: 4.66.2
2024-04-13 19:48:40,576:INFO:               numpy: 1.26.4
2024-04-13 19:48:40,576:INFO:              pandas: 2.1.4
2024-04-13 19:48:40,576:INFO:              jinja2: 3.1.3
2024-04-13 19:48:40,576:INFO:               scipy: 1.11.4
2024-04-13 19:48:40,576:INFO:              joblib: 1.3.2
2024-04-13 19:48:40,576:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:48:40,576:INFO:                pyod: 1.1.3
2024-04-13 19:48:40,576:INFO:            imblearn: 0.12.2
2024-04-13 19:48:40,576:INFO:   category_encoders: 2.6.3
2024-04-13 19:48:40,577:INFO:            lightgbm: 4.3.0
2024-04-13 19:48:40,577:INFO:               numba: 0.59.1
2024-04-13 19:48:40,577:INFO:            requests: 2.31.0
2024-04-13 19:48:40,577:INFO:          matplotlib: 3.7.5
2024-04-13 19:48:40,577:INFO:          scikitplot: 0.3.7
2024-04-13 19:48:40,577:INFO:         yellowbrick: 1.5
2024-04-13 19:48:40,577:INFO:              plotly: 5.20.0
2024-04-13 19:48:40,577:INFO:    plotly-resampler: Not installed
2024-04-13 19:48:40,577:INFO:             kaleido: 0.2.1
2024-04-13 19:48:40,577:INFO:           schemdraw: 0.15
2024-04-13 19:48:40,577:INFO:         statsmodels: 0.14.1
2024-04-13 19:48:40,577:INFO:              sktime: 0.28.0
2024-04-13 19:48:40,577:INFO:               tbats: 1.1.3
2024-04-13 19:48:40,577:INFO:            pmdarima: 2.0.4
2024-04-13 19:48:40,577:INFO:              psutil: 5.9.8
2024-04-13 19:48:40,578:INFO:          markupsafe: 2.1.5
2024-04-13 19:48:40,578:INFO:             pickle5: Not installed
2024-04-13 19:48:40,578:INFO:         cloudpickle: 3.0.0
2024-04-13 19:48:40,578:INFO:         deprecation: 2.1.0
2024-04-13 19:48:40,578:INFO:              xxhash: 3.4.1
2024-04-13 19:48:40,578:INFO:           wurlitzer: 3.0.3
2024-04-13 19:48:40,578:INFO:PyCaret optional dependencies:
2024-04-13 19:48:40,578:INFO:                shap: Not installed
2024-04-13 19:48:40,578:INFO:           interpret: Not installed
2024-04-13 19:48:40,578:INFO:                umap: Not installed
2024-04-13 19:48:40,578:INFO:     ydata_profiling: Not installed
2024-04-13 19:48:40,578:INFO:  explainerdashboard: Not installed
2024-04-13 19:48:40,578:INFO:             autoviz: Not installed
2024-04-13 19:48:40,578:INFO:           fairlearn: Not installed
2024-04-13 19:48:40,578:INFO:          deepchecks: Not installed
2024-04-13 19:48:40,579:INFO:             xgboost: Not installed
2024-04-13 19:48:40,579:INFO:            catboost: Not installed
2024-04-13 19:48:40,579:INFO:              kmodes: Not installed
2024-04-13 19:48:40,579:INFO:             mlxtend: Not installed
2024-04-13 19:48:40,579:INFO:       statsforecast: Not installed
2024-04-13 19:48:40,579:INFO:        tune_sklearn: Not installed
2024-04-13 19:48:40,579:INFO:                 ray: Not installed
2024-04-13 19:48:40,579:INFO:            hyperopt: Not installed
2024-04-13 19:48:40,579:INFO:              optuna: Not installed
2024-04-13 19:48:40,579:INFO:               skopt: Not installed
2024-04-13 19:48:40,579:INFO:              mlflow: 2.11.3
2024-04-13 19:48:40,579:INFO:              gradio: Not installed
2024-04-13 19:48:40,579:INFO:             fastapi: Not installed
2024-04-13 19:48:40,579:INFO:             uvicorn: Not installed
2024-04-13 19:48:40,579:INFO:              m2cgen: Not installed
2024-04-13 19:48:40,580:INFO:           evidently: Not installed
2024-04-13 19:48:40,580:INFO:               fugue: Not installed
2024-04-13 19:48:40,580:INFO:           streamlit: 1.33.0
2024-04-13 19:48:40,580:INFO:             prophet: Not installed
2024-04-13 19:48:40,580:INFO:None
2024-04-13 19:48:40,580:INFO:Set up data.
2024-04-13 19:48:40,585:INFO:Set up folding strategy.
2024-04-13 19:48:40,586:INFO:Set up train/test split.
2024-04-13 19:48:40,586:INFO:Set up data.
2024-04-13 19:48:40,591:INFO:Set up index.
2024-04-13 19:48:40,592:INFO:Assigning column types.
2024-04-13 19:48:40,597:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:48:40,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:48:40,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:40,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:40,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:40,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:48:40,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:40,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:40,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:40,822:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:48:40,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:40,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:40,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:48:41,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,046:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:48:41,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,272:INFO:Preparing preprocessing pipeline...
2024-04-13 19:48:41,273:INFO:Set up simple imputation.
2024-04-13 19:48:41,273:INFO:Set up feature normalization.
2024-04-13 19:48:41,312:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:48:41,320:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:48:41,320:INFO:Creating final display dataframe.
2024-04-13 19:48:41,453:INFO:Setup _display_container:                     Description             Value
0                    Session id               363
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d5da
2024-04-13 19:48:41,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:48:41,689:INFO:setup() successfully completed in 1.12s...............
2024-04-13 19:48:41,691:INFO:Initializing compare_models()
2024-04-13 19:48:41,691:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:48:41,691:INFO:Checking exceptions
2024-04-13 19:48:41,696:INFO:Preparing display monitor
2024-04-13 19:48:41,722:INFO:Initializing Logistic Regression
2024-04-13 19:48:41,722:INFO:Total runtime is 0.0 minutes
2024-04-13 19:48:41,727:INFO:SubProcess create_model() called ==================================
2024-04-13 19:48:41,728:INFO:Initializing create_model()
2024-04-13 19:48:41,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DE631150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:41,732:INFO:Checking exceptions
2024-04-13 19:48:41,732:INFO:Importing libraries
2024-04-13 19:48:41,732:INFO:Copying training dataset
2024-04-13 19:48:41,747:INFO:Defining folds
2024-04-13 19:48:41,747:INFO:Declaring metric variables
2024-04-13 19:48:41,754:INFO:Importing untrained model
2024-04-13 19:48:41,759:INFO:Logistic Regression Imported successfully
2024-04-13 19:48:41,770:INFO:Starting cross validation
2024-04-13 19:48:41,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:48:41,918:INFO:Calculating mean and std
2024-04-13 19:48:41,919:INFO:Creating metrics dataframe
2024-04-13 19:48:41,921:INFO:Uploading results into container
2024-04-13 19:48:41,922:INFO:Uploading model into container now
2024-04-13 19:48:41,922:INFO:_master_model_container: 1
2024-04-13 19:48:41,922:INFO:_display_container: 2
2024-04-13 19:48:41,923:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:48:41,923:INFO:create_model() successfully completed......................................
2024-04-13 19:48:42,049:INFO:SubProcess create_model() end ==================================
2024-04-13 19:48:42,049:INFO:Creating metrics dataframe
2024-04-13 19:48:42,057:INFO:Initializing Decision Tree Classifier
2024-04-13 19:48:42,058:INFO:Total runtime is 0.005605089664459229 minutes
2024-04-13 19:48:42,062:INFO:SubProcess create_model() called ==================================
2024-04-13 19:48:42,062:INFO:Initializing create_model()
2024-04-13 19:48:42,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DE631150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:42,062:INFO:Checking exceptions
2024-04-13 19:48:42,062:INFO:Importing libraries
2024-04-13 19:48:42,062:INFO:Copying training dataset
2024-04-13 19:48:42,070:INFO:Defining folds
2024-04-13 19:48:42,071:INFO:Declaring metric variables
2024-04-13 19:48:42,075:INFO:Importing untrained model
2024-04-13 19:48:42,079:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:48:42,087:INFO:Starting cross validation
2024-04-13 19:48:42,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:48:42,266:INFO:Calculating mean and std
2024-04-13 19:48:42,267:INFO:Creating metrics dataframe
2024-04-13 19:48:42,269:INFO:Uploading results into container
2024-04-13 19:48:42,269:INFO:Uploading model into container now
2024-04-13 19:48:42,270:INFO:_master_model_container: 2
2024-04-13 19:48:42,270:INFO:_display_container: 2
2024-04-13 19:48:42,270:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=363, splitter='best')
2024-04-13 19:48:42,270:INFO:create_model() successfully completed......................................
2024-04-13 19:48:42,394:INFO:SubProcess create_model() end ==================================
2024-04-13 19:48:42,394:INFO:Creating metrics dataframe
2024-04-13 19:48:42,414:INFO:Initializing create_model()
2024-04-13 19:48:42,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=363, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:42,414:INFO:Checking exceptions
2024-04-13 19:48:42,416:INFO:Importing libraries
2024-04-13 19:48:42,416:INFO:Copying training dataset
2024-04-13 19:48:42,425:INFO:Defining folds
2024-04-13 19:48:42,425:INFO:Declaring metric variables
2024-04-13 19:48:42,425:INFO:Importing untrained model
2024-04-13 19:48:42,425:INFO:Declaring custom model
2024-04-13 19:48:42,426:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:48:42,427:INFO:Cross validation set to False
2024-04-13 19:48:42,427:INFO:Fitting Model
2024-04-13 19:48:42,500:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=363, splitter='best')
2024-04-13 19:48:42,500:INFO:create_model() successfully completed......................................
2024-04-13 19:48:42,627:INFO:Initializing create_model()
2024-04-13 19:48:42,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:48:42,627:INFO:Checking exceptions
2024-04-13 19:48:42,629:INFO:Importing libraries
2024-04-13 19:48:42,629:INFO:Copying training dataset
2024-04-13 19:48:42,637:INFO:Defining folds
2024-04-13 19:48:42,637:INFO:Declaring metric variables
2024-04-13 19:48:42,638:INFO:Importing untrained model
2024-04-13 19:48:42,638:INFO:Declaring custom model
2024-04-13 19:48:42,638:INFO:Logistic Regression Imported successfully
2024-04-13 19:48:42,639:INFO:Cross validation set to False
2024-04-13 19:48:42,640:INFO:Fitting Model
2024-04-13 19:48:42,663:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:48:42,663:INFO:create_model() successfully completed......................................
2024-04-13 19:48:42,804:INFO:_master_model_container: 2
2024-04-13 19:48:42,804:INFO:_display_container: 2
2024-04-13 19:48:42,805:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=363, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:48:42,806:INFO:compare_models() successfully completed......................................
2024-04-13 19:48:42,806:INFO:Initializing predict_model()
2024-04-13 19:48:42,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEB77790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=363, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DF166C20>)
2024-04-13 19:48:42,807:INFO:Checking exceptions
2024-04-13 19:48:42,807:INFO:Preloading libraries
2024-04-13 19:49:00,646:INFO:PyCaret ClassificationExperiment
2024-04-13 19:49:00,646:INFO:Logging name: clf-default-name
2024-04-13 19:49:00,646:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:49:00,646:INFO:version 3.3.0
2024-04-13 19:49:00,647:INFO:Initializing setup()
2024-04-13 19:49:00,647:INFO:self.USI: b0f6
2024-04-13 19:49:00,647:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:49:00,647:INFO:Checking environment
2024-04-13 19:49:00,647:INFO:python_version: 3.10.14
2024-04-13 19:49:00,647:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:49:00,647:INFO:machine: AMD64
2024-04-13 19:49:00,647:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:49:00,653:INFO:Memory: svmem(total=17131573248, available=3128569856, percent=81.7, used=14003003392, free=3128569856)
2024-04-13 19:49:00,653:INFO:Physical Core: 8
2024-04-13 19:49:00,653:INFO:Logical Core: 16
2024-04-13 19:49:00,653:INFO:Checking libraries
2024-04-13 19:49:00,653:INFO:System:
2024-04-13 19:49:00,653:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:49:00,654:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:49:00,654:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:49:00,654:INFO:PyCaret required dependencies:
2024-04-13 19:49:00,654:INFO:                 pip: 23.3.1
2024-04-13 19:49:00,654:INFO:          setuptools: 68.2.2
2024-04-13 19:49:00,654:INFO:             pycaret: 3.3.0
2024-04-13 19:49:00,654:INFO:             IPython: 8.23.0
2024-04-13 19:49:00,654:INFO:          ipywidgets: 8.1.2
2024-04-13 19:49:00,654:INFO:                tqdm: 4.66.2
2024-04-13 19:49:00,654:INFO:               numpy: 1.26.4
2024-04-13 19:49:00,654:INFO:              pandas: 2.1.4
2024-04-13 19:49:00,654:INFO:              jinja2: 3.1.3
2024-04-13 19:49:00,654:INFO:               scipy: 1.11.4
2024-04-13 19:49:00,654:INFO:              joblib: 1.3.2
2024-04-13 19:49:00,655:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:49:00,655:INFO:                pyod: 1.1.3
2024-04-13 19:49:00,655:INFO:            imblearn: 0.12.2
2024-04-13 19:49:00,655:INFO:   category_encoders: 2.6.3
2024-04-13 19:49:00,655:INFO:            lightgbm: 4.3.0
2024-04-13 19:49:00,655:INFO:               numba: 0.59.1
2024-04-13 19:49:00,655:INFO:            requests: 2.31.0
2024-04-13 19:49:00,655:INFO:          matplotlib: 3.7.5
2024-04-13 19:49:00,655:INFO:          scikitplot: 0.3.7
2024-04-13 19:49:00,655:INFO:         yellowbrick: 1.5
2024-04-13 19:49:00,655:INFO:              plotly: 5.20.0
2024-04-13 19:49:00,655:INFO:    plotly-resampler: Not installed
2024-04-13 19:49:00,655:INFO:             kaleido: 0.2.1
2024-04-13 19:49:00,655:INFO:           schemdraw: 0.15
2024-04-13 19:49:00,655:INFO:         statsmodels: 0.14.1
2024-04-13 19:49:00,656:INFO:              sktime: 0.28.0
2024-04-13 19:49:00,656:INFO:               tbats: 1.1.3
2024-04-13 19:49:00,656:INFO:            pmdarima: 2.0.4
2024-04-13 19:49:00,656:INFO:              psutil: 5.9.8
2024-04-13 19:49:00,656:INFO:          markupsafe: 2.1.5
2024-04-13 19:49:00,656:INFO:             pickle5: Not installed
2024-04-13 19:49:00,656:INFO:         cloudpickle: 3.0.0
2024-04-13 19:49:00,656:INFO:         deprecation: 2.1.0
2024-04-13 19:49:00,656:INFO:              xxhash: 3.4.1
2024-04-13 19:49:00,656:INFO:           wurlitzer: 3.0.3
2024-04-13 19:49:00,656:INFO:PyCaret optional dependencies:
2024-04-13 19:49:00,656:INFO:                shap: Not installed
2024-04-13 19:49:00,656:INFO:           interpret: Not installed
2024-04-13 19:49:00,656:INFO:                umap: Not installed
2024-04-13 19:49:00,657:INFO:     ydata_profiling: Not installed
2024-04-13 19:49:00,657:INFO:  explainerdashboard: Not installed
2024-04-13 19:49:00,657:INFO:             autoviz: Not installed
2024-04-13 19:49:00,657:INFO:           fairlearn: Not installed
2024-04-13 19:49:00,657:INFO:          deepchecks: Not installed
2024-04-13 19:49:00,657:INFO:             xgboost: Not installed
2024-04-13 19:49:00,657:INFO:            catboost: Not installed
2024-04-13 19:49:00,657:INFO:              kmodes: Not installed
2024-04-13 19:49:00,657:INFO:             mlxtend: Not installed
2024-04-13 19:49:00,657:INFO:       statsforecast: Not installed
2024-04-13 19:49:00,657:INFO:        tune_sklearn: Not installed
2024-04-13 19:49:00,657:INFO:                 ray: Not installed
2024-04-13 19:49:00,657:INFO:            hyperopt: Not installed
2024-04-13 19:49:00,657:INFO:              optuna: Not installed
2024-04-13 19:49:00,657:INFO:               skopt: Not installed
2024-04-13 19:49:00,658:INFO:              mlflow: 2.11.3
2024-04-13 19:49:00,658:INFO:              gradio: Not installed
2024-04-13 19:49:00,658:INFO:             fastapi: Not installed
2024-04-13 19:49:00,658:INFO:             uvicorn: Not installed
2024-04-13 19:49:00,658:INFO:              m2cgen: Not installed
2024-04-13 19:49:00,658:INFO:           evidently: Not installed
2024-04-13 19:49:00,658:INFO:               fugue: Not installed
2024-04-13 19:49:00,658:INFO:           streamlit: 1.33.0
2024-04-13 19:49:00,658:INFO:             prophet: Not installed
2024-04-13 19:49:00,658:INFO:None
2024-04-13 19:49:00,658:INFO:Set up data.
2024-04-13 19:49:00,664:INFO:Set up folding strategy.
2024-04-13 19:49:00,664:INFO:Set up train/test split.
2024-04-13 19:49:00,665:INFO:Set up data.
2024-04-13 19:49:00,670:INFO:Set up index.
2024-04-13 19:49:00,671:INFO:Assigning column types.
2024-04-13 19:49:00,677:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:49:00,768:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:49:00,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:49:00,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:00,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:00,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:49:00,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:49:00,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:00,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:00,928:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:49:00,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:49:01,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,111:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:49:01,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,154:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:49:01,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,379:INFO:Preparing preprocessing pipeline...
2024-04-13 19:49:01,380:INFO:Set up simple imputation.
2024-04-13 19:49:01,380:INFO:Set up feature normalization.
2024-04-13 19:49:01,419:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:49:01,427:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:49:01,427:INFO:Creating final display dataframe.
2024-04-13 19:49:01,562:INFO:Setup _display_container:                     Description             Value
0                    Session id              8848
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b0f6
2024-04-13 19:49:01,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:49:01,797:INFO:setup() successfully completed in 1.15s...............
2024-04-13 19:49:01,799:INFO:Initializing compare_models()
2024-04-13 19:49:01,799:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:49:01,799:INFO:Checking exceptions
2024-04-13 19:49:01,805:INFO:Preparing display monitor
2024-04-13 19:49:01,830:INFO:Initializing Logistic Regression
2024-04-13 19:49:01,830:INFO:Total runtime is 0.0 minutes
2024-04-13 19:49:01,834:INFO:SubProcess create_model() called ==================================
2024-04-13 19:49:01,835:INFO:Initializing create_model()
2024-04-13 19:49:01,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAC74A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:49:01,835:INFO:Checking exceptions
2024-04-13 19:49:01,835:INFO:Importing libraries
2024-04-13 19:49:01,835:INFO:Copying training dataset
2024-04-13 19:49:01,845:INFO:Defining folds
2024-04-13 19:49:01,846:INFO:Declaring metric variables
2024-04-13 19:49:01,851:INFO:Importing untrained model
2024-04-13 19:49:01,855:INFO:Logistic Regression Imported successfully
2024-04-13 19:49:01,864:INFO:Starting cross validation
2024-04-13 19:49:01,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:49:02,000:INFO:Calculating mean and std
2024-04-13 19:49:02,001:INFO:Creating metrics dataframe
2024-04-13 19:49:02,003:INFO:Uploading results into container
2024-04-13 19:49:02,003:INFO:Uploading model into container now
2024-04-13 19:49:02,004:INFO:_master_model_container: 1
2024-04-13 19:49:02,004:INFO:_display_container: 2
2024-04-13 19:49:02,004:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8848, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:49:02,004:INFO:create_model() successfully completed......................................
2024-04-13 19:49:02,131:INFO:SubProcess create_model() end ==================================
2024-04-13 19:49:02,131:INFO:Creating metrics dataframe
2024-04-13 19:49:02,140:INFO:Initializing Decision Tree Classifier
2024-04-13 19:49:02,140:INFO:Total runtime is 0.005171362559000651 minutes
2024-04-13 19:49:02,144:INFO:SubProcess create_model() called ==================================
2024-04-13 19:49:02,145:INFO:Initializing create_model()
2024-04-13 19:49:02,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DAC74A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:49:02,145:INFO:Checking exceptions
2024-04-13 19:49:02,145:INFO:Importing libraries
2024-04-13 19:49:02,145:INFO:Copying training dataset
2024-04-13 19:49:02,153:INFO:Defining folds
2024-04-13 19:49:02,153:INFO:Declaring metric variables
2024-04-13 19:49:02,158:INFO:Importing untrained model
2024-04-13 19:49:02,162:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:49:02,169:INFO:Starting cross validation
2024-04-13 19:49:02,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:49:02,348:INFO:Calculating mean and std
2024-04-13 19:49:02,349:INFO:Creating metrics dataframe
2024-04-13 19:49:02,351:INFO:Uploading results into container
2024-04-13 19:49:02,351:INFO:Uploading model into container now
2024-04-13 19:49:02,352:INFO:_master_model_container: 2
2024-04-13 19:49:02,352:INFO:_display_container: 2
2024-04-13 19:49:02,352:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best')
2024-04-13 19:49:02,352:INFO:create_model() successfully completed......................................
2024-04-13 19:49:02,476:INFO:SubProcess create_model() end ==================================
2024-04-13 19:49:02,476:INFO:Creating metrics dataframe
2024-04-13 19:49:02,496:INFO:Initializing create_model()
2024-04-13 19:49:02,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:49:02,497:INFO:Checking exceptions
2024-04-13 19:49:02,499:INFO:Importing libraries
2024-04-13 19:49:02,499:INFO:Copying training dataset
2024-04-13 19:49:02,508:INFO:Defining folds
2024-04-13 19:49:02,508:INFO:Declaring metric variables
2024-04-13 19:49:02,508:INFO:Importing untrained model
2024-04-13 19:49:02,508:INFO:Declaring custom model
2024-04-13 19:49:02,509:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:49:02,510:INFO:Cross validation set to False
2024-04-13 19:49:02,510:INFO:Fitting Model
2024-04-13 19:49:02,584:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best')
2024-04-13 19:49:02,584:INFO:create_model() successfully completed......................................
2024-04-13 19:49:02,710:INFO:Initializing create_model()
2024-04-13 19:49:02,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8848, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:49:02,710:INFO:Checking exceptions
2024-04-13 19:49:02,712:INFO:Importing libraries
2024-04-13 19:49:02,712:INFO:Copying training dataset
2024-04-13 19:49:02,720:INFO:Defining folds
2024-04-13 19:49:02,720:INFO:Declaring metric variables
2024-04-13 19:49:02,720:INFO:Importing untrained model
2024-04-13 19:49:02,720:INFO:Declaring custom model
2024-04-13 19:49:02,721:INFO:Logistic Regression Imported successfully
2024-04-13 19:49:02,722:INFO:Cross validation set to False
2024-04-13 19:49:02,722:INFO:Fitting Model
2024-04-13 19:49:02,746:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8848, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:49:02,746:INFO:create_model() successfully completed......................................
2024-04-13 19:49:02,886:INFO:_master_model_container: 2
2024-04-13 19:49:02,886:INFO:_display_container: 2
2024-04-13 19:49:02,887:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8848, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:49:02,887:INFO:compare_models() successfully completed......................................
2024-04-13 19:49:02,888:INFO:Initializing predict_model()
2024-04-13 19:49:02,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEBE8160>)
2024-04-13 19:49:02,889:INFO:Checking exceptions
2024-04-13 19:49:02,889:INFO:Preloading libraries
2024-04-13 19:49:03,956:INFO:Initializing predict_model()
2024-04-13 19:49:03,956:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8848, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DECD6B00>)
2024-04-13 19:49:03,957:INFO:Checking exceptions
2024-04-13 19:49:03,957:INFO:Preloading libraries
2024-04-13 19:49:05,037:INFO:Initializing tune_model()
2024-04-13 19:49:05,037:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>)
2024-04-13 19:49:05,037:INFO:Checking exceptions
2024-04-13 19:49:05,056:INFO:Copying training dataset
2024-04-13 19:49:05,064:INFO:Checking base model
2024-04-13 19:49:05,064:INFO:Base model : Decision Tree Classifier
2024-04-13 19:49:05,068:INFO:Declaring metric variables
2024-04-13 19:49:05,073:INFO:Defining Hyperparameters
2024-04-13 19:49:05,205:INFO:Tuning with n_jobs=-1
2024-04-13 19:49:05,205:INFO:Initializing RandomizedSearchCV
2024-04-13 19:49:05,477:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'gini'}
2024-04-13 19:49:05,477:INFO:Hyperparameter search completed
2024-04-13 19:49:05,477:INFO:SubProcess create_model() called ==================================
2024-04-13 19:49:05,478:INFO:Initializing create_model()
2024-04-13 19:49:05,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DECF71C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.002, 'max_features': 'log2', 'max_depth': 16, 'criterion': 'gini'})
2024-04-13 19:49:05,478:INFO:Checking exceptions
2024-04-13 19:49:05,478:INFO:Importing libraries
2024-04-13 19:49:05,478:INFO:Copying training dataset
2024-04-13 19:49:05,486:INFO:Defining folds
2024-04-13 19:49:05,486:INFO:Declaring metric variables
2024-04-13 19:49:05,490:INFO:Importing untrained model
2024-04-13 19:49:05,491:INFO:Declaring custom model
2024-04-13 19:49:05,496:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:49:05,503:INFO:Starting cross validation
2024-04-13 19:49:05,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:49:05,634:INFO:Calculating mean and std
2024-04-13 19:49:05,635:INFO:Creating metrics dataframe
2024-04-13 19:49:05,641:INFO:Finalizing model
2024-04-13 19:49:05,663:INFO:Uploading results into container
2024-04-13 19:49:05,664:INFO:Uploading model into container now
2024-04-13 19:49:05,664:INFO:_master_model_container: 3
2024-04-13 19:49:05,665:INFO:_display_container: 5
2024-04-13 19:49:05,665:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best')
2024-04-13 19:49:05,665:INFO:create_model() successfully completed......................................
2024-04-13 19:49:05,790:INFO:SubProcess create_model() end ==================================
2024-04-13 19:49:05,790:INFO:choose_better activated
2024-04-13 19:49:05,795:INFO:SubProcess create_model() called ==================================
2024-04-13 19:49:05,796:INFO:Initializing create_model()
2024-04-13 19:49:05,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:49:05,796:INFO:Checking exceptions
2024-04-13 19:49:05,798:INFO:Importing libraries
2024-04-13 19:49:05,798:INFO:Copying training dataset
2024-04-13 19:49:05,806:INFO:Defining folds
2024-04-13 19:49:05,806:INFO:Declaring metric variables
2024-04-13 19:49:05,806:INFO:Importing untrained model
2024-04-13 19:49:05,806:INFO:Declaring custom model
2024-04-13 19:49:05,807:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:49:05,807:INFO:Starting cross validation
2024-04-13 19:49:05,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:49:05,986:INFO:Calculating mean and std
2024-04-13 19:49:05,987:INFO:Creating metrics dataframe
2024-04-13 19:49:05,989:INFO:Finalizing model
2024-04-13 19:49:06,060:INFO:Uploading results into container
2024-04-13 19:49:06,060:INFO:Uploading model into container now
2024-04-13 19:49:06,061:INFO:_master_model_container: 4
2024-04-13 19:49:06,061:INFO:_display_container: 6
2024-04-13 19:49:06,061:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best')
2024-04-13 19:49:06,062:INFO:create_model() successfully completed......................................
2024-04-13 19:49:06,182:INFO:SubProcess create_model() end ==================================
2024-04-13 19:49:06,182:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best') result for F1 is 0.5473
2024-04-13 19:49:06,183:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best') result for F1 is 0.4489
2024-04-13 19:49:06,183:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best') is best model
2024-04-13 19:49:06,183:INFO:choose_better completed
2024-04-13 19:49:06,184:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 19:49:06,197:INFO:_master_model_container: 4
2024-04-13 19:49:06,197:INFO:_display_container: 5
2024-04-13 19:49:06,197:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best')
2024-04-13 19:49:06,197:INFO:tune_model() successfully completed......................................
2024-04-13 19:49:06,323:INFO:Initializing predict_model()
2024-04-13 19:49:06,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DE8CBE20>)
2024-04-13 19:49:06,323:INFO:Checking exceptions
2024-04-13 19:49:06,323:INFO:Preloading libraries
2024-04-13 19:49:06,602:INFO:Initializing finalize_model()
2024-04-13 19:49:06,602:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 19:49:06,603:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best')
2024-04-13 19:49:06,608:INFO:Initializing create_model()
2024-04-13 19:49:06,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF42440>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8848, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:49:06,608:INFO:Checking exceptions
2024-04-13 19:49:06,610:INFO:Importing libraries
2024-04-13 19:49:06,610:INFO:Copying training dataset
2024-04-13 19:49:06,610:INFO:Defining folds
2024-04-13 19:49:06,610:INFO:Declaring metric variables
2024-04-13 19:49:06,610:INFO:Importing untrained model
2024-04-13 19:49:06,611:INFO:Declaring custom model
2024-04-13 19:49:06,611:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:49:06,612:INFO:Cross validation set to False
2024-04-13 19:49:06,612:INFO:Fitting Model
2024-04-13 19:49:06,708:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8848,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:49:06,708:INFO:create_model() successfully completed......................................
2024-04-13 19:49:06,828:INFO:_master_model_container: 4
2024-04-13 19:49:06,828:INFO:_display_container: 6
2024-04-13 19:49:06,836:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8848,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:49:06,836:INFO:finalize_model() successfully completed......................................
2024-04-13 19:49:06,974:INFO:Initializing save_model()
2024-04-13 19:49:06,974:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8848,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 19:49:06,974:INFO:Adding model into prep_pipe
2024-04-13 19:49:06,975:WARNING:Only Model saved as it was a pipeline.
2024-04-13 19:49:06,981:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 19:49:06,990:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8848,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:49:06,990:INFO:save_model() successfully completed......................................
2024-04-13 19:49:07,112:INFO:Initializing load_model()
2024-04-13 19:49:07,112:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-13 19:50:09,633:INFO:PyCaret ClassificationExperiment
2024-04-13 19:50:09,633:INFO:Logging name: clf-default-name
2024-04-13 19:50:09,633:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:50:09,633:INFO:version 3.3.0
2024-04-13 19:50:09,633:INFO:Initializing setup()
2024-04-13 19:50:09,633:INFO:self.USI: 94ac
2024-04-13 19:50:09,633:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:50:09,633:INFO:Checking environment
2024-04-13 19:50:09,634:INFO:python_version: 3.10.14
2024-04-13 19:50:09,634:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:50:09,634:INFO:machine: AMD64
2024-04-13 19:50:09,634:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:50:09,639:INFO:Memory: svmem(total=17131573248, available=3043500032, percent=82.2, used=14088073216, free=3043500032)
2024-04-13 19:50:09,640:INFO:Physical Core: 8
2024-04-13 19:50:09,640:INFO:Logical Core: 16
2024-04-13 19:50:09,640:INFO:Checking libraries
2024-04-13 19:50:09,640:INFO:System:
2024-04-13 19:50:09,640:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:50:09,640:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:50:09,640:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:50:09,640:INFO:PyCaret required dependencies:
2024-04-13 19:50:09,640:INFO:                 pip: 23.3.1
2024-04-13 19:50:09,640:INFO:          setuptools: 68.2.2
2024-04-13 19:50:09,640:INFO:             pycaret: 3.3.0
2024-04-13 19:50:09,640:INFO:             IPython: 8.23.0
2024-04-13 19:50:09,641:INFO:          ipywidgets: 8.1.2
2024-04-13 19:50:09,641:INFO:                tqdm: 4.66.2
2024-04-13 19:50:09,641:INFO:               numpy: 1.26.4
2024-04-13 19:50:09,641:INFO:              pandas: 2.1.4
2024-04-13 19:50:09,641:INFO:              jinja2: 3.1.3
2024-04-13 19:50:09,641:INFO:               scipy: 1.11.4
2024-04-13 19:50:09,641:INFO:              joblib: 1.3.2
2024-04-13 19:50:09,641:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:50:09,641:INFO:                pyod: 1.1.3
2024-04-13 19:50:09,641:INFO:            imblearn: 0.12.2
2024-04-13 19:50:09,641:INFO:   category_encoders: 2.6.3
2024-04-13 19:50:09,641:INFO:            lightgbm: 4.3.0
2024-04-13 19:50:09,641:INFO:               numba: 0.59.1
2024-04-13 19:50:09,641:INFO:            requests: 2.31.0
2024-04-13 19:50:09,641:INFO:          matplotlib: 3.7.5
2024-04-13 19:50:09,642:INFO:          scikitplot: 0.3.7
2024-04-13 19:50:09,642:INFO:         yellowbrick: 1.5
2024-04-13 19:50:09,642:INFO:              plotly: 5.20.0
2024-04-13 19:50:09,642:INFO:    plotly-resampler: Not installed
2024-04-13 19:50:09,642:INFO:             kaleido: 0.2.1
2024-04-13 19:50:09,642:INFO:           schemdraw: 0.15
2024-04-13 19:50:09,642:INFO:         statsmodels: 0.14.1
2024-04-13 19:50:09,642:INFO:              sktime: 0.28.0
2024-04-13 19:50:09,642:INFO:               tbats: 1.1.3
2024-04-13 19:50:09,642:INFO:            pmdarima: 2.0.4
2024-04-13 19:50:09,642:INFO:              psutil: 5.9.8
2024-04-13 19:50:09,642:INFO:          markupsafe: 2.1.5
2024-04-13 19:50:09,642:INFO:             pickle5: Not installed
2024-04-13 19:50:09,642:INFO:         cloudpickle: 3.0.0
2024-04-13 19:50:09,642:INFO:         deprecation: 2.1.0
2024-04-13 19:50:09,643:INFO:              xxhash: 3.4.1
2024-04-13 19:50:09,643:INFO:           wurlitzer: 3.0.3
2024-04-13 19:50:09,643:INFO:PyCaret optional dependencies:
2024-04-13 19:50:09,643:INFO:                shap: Not installed
2024-04-13 19:50:09,643:INFO:           interpret: Not installed
2024-04-13 19:50:09,643:INFO:                umap: Not installed
2024-04-13 19:50:09,643:INFO:     ydata_profiling: Not installed
2024-04-13 19:50:09,643:INFO:  explainerdashboard: Not installed
2024-04-13 19:50:09,643:INFO:             autoviz: Not installed
2024-04-13 19:50:09,643:INFO:           fairlearn: Not installed
2024-04-13 19:50:09,643:INFO:          deepchecks: Not installed
2024-04-13 19:50:09,643:INFO:             xgboost: Not installed
2024-04-13 19:50:09,643:INFO:            catboost: Not installed
2024-04-13 19:50:09,643:INFO:              kmodes: Not installed
2024-04-13 19:50:09,643:INFO:             mlxtend: Not installed
2024-04-13 19:50:09,644:INFO:       statsforecast: Not installed
2024-04-13 19:50:09,644:INFO:        tune_sklearn: Not installed
2024-04-13 19:50:09,644:INFO:                 ray: Not installed
2024-04-13 19:50:09,644:INFO:            hyperopt: Not installed
2024-04-13 19:50:09,644:INFO:              optuna: Not installed
2024-04-13 19:50:09,644:INFO:               skopt: Not installed
2024-04-13 19:50:09,644:INFO:              mlflow: 2.11.3
2024-04-13 19:50:09,644:INFO:              gradio: Not installed
2024-04-13 19:50:09,644:INFO:             fastapi: Not installed
2024-04-13 19:50:09,644:INFO:             uvicorn: Not installed
2024-04-13 19:50:09,644:INFO:              m2cgen: Not installed
2024-04-13 19:50:09,644:INFO:           evidently: Not installed
2024-04-13 19:50:09,644:INFO:               fugue: Not installed
2024-04-13 19:50:09,644:INFO:           streamlit: 1.33.0
2024-04-13 19:50:09,644:INFO:             prophet: Not installed
2024-04-13 19:50:09,645:INFO:None
2024-04-13 19:50:09,645:INFO:Set up data.
2024-04-13 19:50:09,651:INFO:Set up folding strategy.
2024-04-13 19:50:09,652:INFO:Set up train/test split.
2024-04-13 19:50:09,652:INFO:Set up data.
2024-04-13 19:50:09,664:INFO:Set up index.
2024-04-13 19:50:09,665:INFO:Assigning column types.
2024-04-13 19:50:09,671:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:50:09,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:50:09,741:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:50:09,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:09,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:09,853:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:50:09,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:50:09,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:09,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:09,897:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:50:09,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:50:10,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,080:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:50:10,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,123:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:50:10,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,348:INFO:Preparing preprocessing pipeline...
2024-04-13 19:50:10,350:INFO:Set up simple imputation.
2024-04-13 19:50:10,350:INFO:Set up feature normalization.
2024-04-13 19:50:10,389:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:50:10,396:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:50:10,396:INFO:Creating final display dataframe.
2024-04-13 19:50:10,530:INFO:Setup _display_container:                     Description             Value
0                    Session id              6658
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              94ac
2024-04-13 19:50:10,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:50:10,763:INFO:setup() successfully completed in 1.13s...............
2024-04-13 19:50:10,764:INFO:Initializing compare_models()
2024-04-13 19:50:10,764:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:50:10,764:INFO:Checking exceptions
2024-04-13 19:50:10,769:INFO:Preparing display monitor
2024-04-13 19:50:10,796:INFO:Initializing Logistic Regression
2024-04-13 19:50:10,796:INFO:Total runtime is 0.0 minutes
2024-04-13 19:50:10,800:INFO:SubProcess create_model() called ==================================
2024-04-13 19:50:10,801:INFO:Initializing create_model()
2024-04-13 19:50:10,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DF09BF40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:50:10,801:INFO:Checking exceptions
2024-04-13 19:50:10,801:INFO:Importing libraries
2024-04-13 19:50:10,801:INFO:Copying training dataset
2024-04-13 19:50:10,811:INFO:Defining folds
2024-04-13 19:50:10,812:INFO:Declaring metric variables
2024-04-13 19:50:10,816:INFO:Importing untrained model
2024-04-13 19:50:10,821:INFO:Logistic Regression Imported successfully
2024-04-13 19:50:10,830:INFO:Starting cross validation
2024-04-13 19:50:10,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:50:10,964:INFO:Calculating mean and std
2024-04-13 19:50:10,965:INFO:Creating metrics dataframe
2024-04-13 19:50:10,967:INFO:Uploading results into container
2024-04-13 19:50:10,967:INFO:Uploading model into container now
2024-04-13 19:50:10,968:INFO:_master_model_container: 1
2024-04-13 19:50:10,968:INFO:_display_container: 2
2024-04-13 19:50:10,968:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6658, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:50:10,968:INFO:create_model() successfully completed......................................
2024-04-13 19:50:11,134:INFO:SubProcess create_model() end ==================================
2024-04-13 19:50:11,134:INFO:Creating metrics dataframe
2024-04-13 19:50:11,142:INFO:Initializing Decision Tree Classifier
2024-04-13 19:50:11,142:INFO:Total runtime is 0.005755221843719483 minutes
2024-04-13 19:50:11,147:INFO:SubProcess create_model() called ==================================
2024-04-13 19:50:11,147:INFO:Initializing create_model()
2024-04-13 19:50:11,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DF09BF40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:50:11,148:INFO:Checking exceptions
2024-04-13 19:50:11,148:INFO:Importing libraries
2024-04-13 19:50:11,148:INFO:Copying training dataset
2024-04-13 19:50:11,156:INFO:Defining folds
2024-04-13 19:50:11,156:INFO:Declaring metric variables
2024-04-13 19:50:11,160:INFO:Importing untrained model
2024-04-13 19:50:11,164:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:50:11,172:INFO:Starting cross validation
2024-04-13 19:50:11,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:50:11,349:INFO:Calculating mean and std
2024-04-13 19:50:11,350:INFO:Creating metrics dataframe
2024-04-13 19:50:11,352:INFO:Uploading results into container
2024-04-13 19:50:11,352:INFO:Uploading model into container now
2024-04-13 19:50:11,353:INFO:_master_model_container: 2
2024-04-13 19:50:11,353:INFO:_display_container: 2
2024-04-13 19:50:11,353:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best')
2024-04-13 19:50:11,353:INFO:create_model() successfully completed......................................
2024-04-13 19:50:11,510:INFO:SubProcess create_model() end ==================================
2024-04-13 19:50:11,510:INFO:Creating metrics dataframe
2024-04-13 19:50:11,529:INFO:Initializing create_model()
2024-04-13 19:50:11,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:50:11,529:INFO:Checking exceptions
2024-04-13 19:50:11,531:INFO:Importing libraries
2024-04-13 19:50:11,531:INFO:Copying training dataset
2024-04-13 19:50:11,539:INFO:Defining folds
2024-04-13 19:50:11,539:INFO:Declaring metric variables
2024-04-13 19:50:11,540:INFO:Importing untrained model
2024-04-13 19:50:11,540:INFO:Declaring custom model
2024-04-13 19:50:11,540:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:50:11,542:INFO:Cross validation set to False
2024-04-13 19:50:11,542:INFO:Fitting Model
2024-04-13 19:50:11,613:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best')
2024-04-13 19:50:11,614:INFO:create_model() successfully completed......................................
2024-04-13 19:50:11,776:INFO:Initializing create_model()
2024-04-13 19:50:11,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6658, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:50:11,777:INFO:Checking exceptions
2024-04-13 19:50:11,778:INFO:Importing libraries
2024-04-13 19:50:11,778:INFO:Copying training dataset
2024-04-13 19:50:11,786:INFO:Defining folds
2024-04-13 19:50:11,787:INFO:Declaring metric variables
2024-04-13 19:50:11,787:INFO:Importing untrained model
2024-04-13 19:50:11,787:INFO:Declaring custom model
2024-04-13 19:50:11,788:INFO:Logistic Regression Imported successfully
2024-04-13 19:50:11,789:INFO:Cross validation set to False
2024-04-13 19:50:11,789:INFO:Fitting Model
2024-04-13 19:50:11,821:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6658, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:50:11,821:INFO:create_model() successfully completed......................................
2024-04-13 19:50:12,007:INFO:_master_model_container: 2
2024-04-13 19:50:12,007:INFO:_display_container: 2
2024-04-13 19:50:12,008:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6658, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:50:12,008:INFO:compare_models() successfully completed......................................
2024-04-13 19:50:12,009:INFO:Initializing predict_model()
2024-04-13 19:50:12,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DED940D0>)
2024-04-13 19:50:12,009:INFO:Checking exceptions
2024-04-13 19:50:12,009:INFO:Preloading libraries
2024-04-13 19:50:13,062:INFO:Initializing predict_model()
2024-04-13 19:50:13,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6658, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E3711240>)
2024-04-13 19:50:13,062:INFO:Checking exceptions
2024-04-13 19:50:13,062:INFO:Preloading libraries
2024-04-13 19:50:14,138:INFO:Initializing tune_model()
2024-04-13 19:50:14,138:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>)
2024-04-13 19:50:14,138:INFO:Checking exceptions
2024-04-13 19:50:14,157:INFO:Copying training dataset
2024-04-13 19:50:14,165:INFO:Checking base model
2024-04-13 19:50:14,165:INFO:Base model : Decision Tree Classifier
2024-04-13 19:50:14,170:INFO:Declaring metric variables
2024-04-13 19:50:14,174:INFO:Defining Hyperparameters
2024-04-13 19:50:14,364:INFO:Tuning with n_jobs=-1
2024-04-13 19:50:14,364:INFO:Initializing RandomizedSearchCV
2024-04-13 19:50:14,616:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'entropy'}
2024-04-13 19:50:14,616:INFO:Hyperparameter search completed
2024-04-13 19:50:14,616:INFO:SubProcess create_model() called ==================================
2024-04-13 19:50:14,617:INFO:Initializing create_model()
2024-04-13 19:50:14,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DF118340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.02, 'max_features': 'log2', 'max_depth': 16, 'criterion': 'entropy'})
2024-04-13 19:50:14,617:INFO:Checking exceptions
2024-04-13 19:50:14,617:INFO:Importing libraries
2024-04-13 19:50:14,617:INFO:Copying training dataset
2024-04-13 19:50:14,625:INFO:Defining folds
2024-04-13 19:50:14,625:INFO:Declaring metric variables
2024-04-13 19:50:14,630:INFO:Importing untrained model
2024-04-13 19:50:14,630:INFO:Declaring custom model
2024-04-13 19:50:14,634:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:50:14,642:INFO:Starting cross validation
2024-04-13 19:50:14,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:50:14,773:INFO:Calculating mean and std
2024-04-13 19:50:14,774:INFO:Creating metrics dataframe
2024-04-13 19:50:14,780:INFO:Finalizing model
2024-04-13 19:50:14,802:INFO:Uploading results into container
2024-04-13 19:50:14,802:INFO:Uploading model into container now
2024-04-13 19:50:14,803:INFO:_master_model_container: 3
2024-04-13 19:50:14,803:INFO:_display_container: 5
2024-04-13 19:50:14,804:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best')
2024-04-13 19:50:14,804:INFO:create_model() successfully completed......................................
2024-04-13 19:50:14,962:INFO:SubProcess create_model() end ==================================
2024-04-13 19:50:14,962:INFO:choose_better activated
2024-04-13 19:50:14,967:INFO:SubProcess create_model() called ==================================
2024-04-13 19:50:14,968:INFO:Initializing create_model()
2024-04-13 19:50:14,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:50:14,968:INFO:Checking exceptions
2024-04-13 19:50:14,970:INFO:Importing libraries
2024-04-13 19:50:14,970:INFO:Copying training dataset
2024-04-13 19:50:14,978:INFO:Defining folds
2024-04-13 19:50:14,978:INFO:Declaring metric variables
2024-04-13 19:50:14,978:INFO:Importing untrained model
2024-04-13 19:50:14,978:INFO:Declaring custom model
2024-04-13 19:50:14,979:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:50:14,979:INFO:Starting cross validation
2024-04-13 19:50:14,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:50:15,171:INFO:Calculating mean and std
2024-04-13 19:50:15,172:INFO:Creating metrics dataframe
2024-04-13 19:50:15,174:INFO:Finalizing model
2024-04-13 19:50:15,245:INFO:Uploading results into container
2024-04-13 19:50:15,246:INFO:Uploading model into container now
2024-04-13 19:50:15,246:INFO:_master_model_container: 4
2024-04-13 19:50:15,246:INFO:_display_container: 6
2024-04-13 19:50:15,247:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best')
2024-04-13 19:50:15,247:INFO:create_model() successfully completed......................................
2024-04-13 19:50:15,406:INFO:SubProcess create_model() end ==================================
2024-04-13 19:50:15,406:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best') result for F1 is 0.5472
2024-04-13 19:50:15,407:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best') result for F1 is 0.4473
2024-04-13 19:50:15,407:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best') is best model
2024-04-13 19:50:15,407:INFO:choose_better completed
2024-04-13 19:50:15,408:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 19:50:15,420:INFO:_master_model_container: 4
2024-04-13 19:50:15,420:INFO:_display_container: 5
2024-04-13 19:50:15,421:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best')
2024-04-13 19:50:15,421:INFO:tune_model() successfully completed......................................
2024-04-13 19:50:15,579:INFO:Initializing predict_model()
2024-04-13 19:50:15,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DED95240>)
2024-04-13 19:50:15,580:INFO:Checking exceptions
2024-04-13 19:50:15,580:INFO:Preloading libraries
2024-04-13 19:50:15,884:INFO:Initializing finalize_model()
2024-04-13 19:50:15,884:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 19:50:15,885:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best')
2024-04-13 19:50:15,889:INFO:Initializing create_model()
2024-04-13 19:50:15,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEE738B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6658, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:50:15,890:INFO:Checking exceptions
2024-04-13 19:50:15,891:INFO:Importing libraries
2024-04-13 19:50:15,891:INFO:Copying training dataset
2024-04-13 19:50:15,892:INFO:Defining folds
2024-04-13 19:50:15,892:INFO:Declaring metric variables
2024-04-13 19:50:15,892:INFO:Importing untrained model
2024-04-13 19:50:15,892:INFO:Declaring custom model
2024-04-13 19:50:15,893:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:50:15,894:INFO:Cross validation set to False
2024-04-13 19:50:15,894:INFO:Fitting Model
2024-04-13 19:50:15,989:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6658,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:50:15,990:INFO:create_model() successfully completed......................................
2024-04-13 19:50:16,145:INFO:_master_model_container: 4
2024-04-13 19:50:16,146:INFO:_display_container: 6
2024-04-13 19:50:16,154:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6658,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:50:16,154:INFO:finalize_model() successfully completed......................................
2024-04-13 19:50:16,327:INFO:Initializing save_model()
2024-04-13 19:50:16,327:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6658,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 19:50:16,328:INFO:Adding model into prep_pipe
2024-04-13 19:50:16,328:WARNING:Only Model saved as it was a pipeline.
2024-04-13 19:50:16,334:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 19:50:16,342:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6658,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:50:16,342:INFO:save_model() successfully completed......................................
2024-04-13 19:50:16,501:INFO:Initializing load_model()
2024-04-13 19:50:16,501:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-13 19:54:10,618:INFO:PyCaret ClassificationExperiment
2024-04-13 19:54:10,618:INFO:Logging name: clf-default-name
2024-04-13 19:54:10,618:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:54:10,618:INFO:version 3.3.0
2024-04-13 19:54:10,618:INFO:Initializing setup()
2024-04-13 19:54:10,618:INFO:self.USI: 66f8
2024-04-13 19:54:10,618:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:54:10,618:INFO:Checking environment
2024-04-13 19:54:10,618:INFO:python_version: 3.10.14
2024-04-13 19:54:10,618:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:54:10,618:INFO:machine: AMD64
2024-04-13 19:54:10,618:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:54:10,624:INFO:Memory: svmem(total=17131573248, available=2870804480, percent=83.2, used=14260768768, free=2870804480)
2024-04-13 19:54:10,624:INFO:Physical Core: 8
2024-04-13 19:54:10,624:INFO:Logical Core: 16
2024-04-13 19:54:10,624:INFO:Checking libraries
2024-04-13 19:54:10,624:INFO:System:
2024-04-13 19:54:10,624:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:54:10,624:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:54:10,624:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:54:10,624:INFO:PyCaret required dependencies:
2024-04-13 19:54:10,624:INFO:                 pip: 23.3.1
2024-04-13 19:54:10,624:INFO:          setuptools: 68.2.2
2024-04-13 19:54:10,625:INFO:             pycaret: 3.3.0
2024-04-13 19:54:10,625:INFO:             IPython: 8.23.0
2024-04-13 19:54:10,625:INFO:          ipywidgets: 8.1.2
2024-04-13 19:54:10,625:INFO:                tqdm: 4.66.2
2024-04-13 19:54:10,625:INFO:               numpy: 1.26.4
2024-04-13 19:54:10,625:INFO:              pandas: 2.1.4
2024-04-13 19:54:10,625:INFO:              jinja2: 3.1.3
2024-04-13 19:54:10,625:INFO:               scipy: 1.11.4
2024-04-13 19:54:10,625:INFO:              joblib: 1.3.2
2024-04-13 19:54:10,625:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:54:10,625:INFO:                pyod: 1.1.3
2024-04-13 19:54:10,625:INFO:            imblearn: 0.12.2
2024-04-13 19:54:10,625:INFO:   category_encoders: 2.6.3
2024-04-13 19:54:10,625:INFO:            lightgbm: 4.3.0
2024-04-13 19:54:10,625:INFO:               numba: 0.59.1
2024-04-13 19:54:10,626:INFO:            requests: 2.31.0
2024-04-13 19:54:10,626:INFO:          matplotlib: 3.7.5
2024-04-13 19:54:10,626:INFO:          scikitplot: 0.3.7
2024-04-13 19:54:10,626:INFO:         yellowbrick: 1.5
2024-04-13 19:54:10,626:INFO:              plotly: 5.20.0
2024-04-13 19:54:10,626:INFO:    plotly-resampler: Not installed
2024-04-13 19:54:10,626:INFO:             kaleido: 0.2.1
2024-04-13 19:54:10,626:INFO:           schemdraw: 0.15
2024-04-13 19:54:10,626:INFO:         statsmodels: 0.14.1
2024-04-13 19:54:10,626:INFO:              sktime: 0.28.0
2024-04-13 19:54:10,626:INFO:               tbats: 1.1.3
2024-04-13 19:54:10,626:INFO:            pmdarima: 2.0.4
2024-04-13 19:54:10,626:INFO:              psutil: 5.9.8
2024-04-13 19:54:10,626:INFO:          markupsafe: 2.1.5
2024-04-13 19:54:10,626:INFO:             pickle5: Not installed
2024-04-13 19:54:10,627:INFO:         cloudpickle: 3.0.0
2024-04-13 19:54:10,627:INFO:         deprecation: 2.1.0
2024-04-13 19:54:10,627:INFO:              xxhash: 3.4.1
2024-04-13 19:54:10,627:INFO:           wurlitzer: 3.0.3
2024-04-13 19:54:10,627:INFO:PyCaret optional dependencies:
2024-04-13 19:54:10,627:INFO:                shap: Not installed
2024-04-13 19:54:10,627:INFO:           interpret: Not installed
2024-04-13 19:54:10,627:INFO:                umap: Not installed
2024-04-13 19:54:10,627:INFO:     ydata_profiling: Not installed
2024-04-13 19:54:10,627:INFO:  explainerdashboard: Not installed
2024-04-13 19:54:10,627:INFO:             autoviz: Not installed
2024-04-13 19:54:10,627:INFO:           fairlearn: Not installed
2024-04-13 19:54:10,627:INFO:          deepchecks: Not installed
2024-04-13 19:54:10,627:INFO:             xgboost: Not installed
2024-04-13 19:54:10,628:INFO:            catboost: Not installed
2024-04-13 19:54:10,628:INFO:              kmodes: Not installed
2024-04-13 19:54:10,628:INFO:             mlxtend: Not installed
2024-04-13 19:54:10,628:INFO:       statsforecast: Not installed
2024-04-13 19:54:10,628:INFO:        tune_sklearn: Not installed
2024-04-13 19:54:10,628:INFO:                 ray: Not installed
2024-04-13 19:54:10,628:INFO:            hyperopt: Not installed
2024-04-13 19:54:10,628:INFO:              optuna: Not installed
2024-04-13 19:54:10,628:INFO:               skopt: Not installed
2024-04-13 19:54:10,628:INFO:              mlflow: 2.11.3
2024-04-13 19:54:10,628:INFO:              gradio: Not installed
2024-04-13 19:54:10,628:INFO:             fastapi: Not installed
2024-04-13 19:54:10,628:INFO:             uvicorn: Not installed
2024-04-13 19:54:10,629:INFO:              m2cgen: Not installed
2024-04-13 19:54:10,629:INFO:           evidently: Not installed
2024-04-13 19:54:10,629:INFO:               fugue: Not installed
2024-04-13 19:54:10,629:INFO:           streamlit: 1.33.0
2024-04-13 19:54:10,629:INFO:             prophet: Not installed
2024-04-13 19:54:10,629:INFO:None
2024-04-13 19:54:10,629:INFO:Set up data.
2024-04-13 19:54:10,635:INFO:Set up folding strategy.
2024-04-13 19:54:10,635:INFO:Set up train/test split.
2024-04-13 19:54:10,635:INFO:Set up data.
2024-04-13 19:54:10,640:INFO:Set up index.
2024-04-13 19:54:10,640:INFO:Assigning column types.
2024-04-13 19:54:10,646:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:54:10,715:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:54:10,716:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:10,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:10,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:10,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:54:10,829:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:10,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:10,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:10,873:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:54:10,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:10,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:10,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,058:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:11,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,101:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:54:11,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,326:INFO:Preparing preprocessing pipeline...
2024-04-13 19:54:11,328:INFO:Set up simple imputation.
2024-04-13 19:54:11,328:INFO:Set up feature normalization.
2024-04-13 19:54:11,367:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:54:11,374:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:54:11,374:INFO:Creating final display dataframe.
2024-04-13 19:54:11,508:INFO:Setup _display_container:                     Description             Value
0                    Session id              2643
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              66f8
2024-04-13 19:54:11,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:11,742:INFO:setup() successfully completed in 1.13s...............
2024-04-13 19:54:11,742:INFO:Initializing compare_models()
2024-04-13 19:54:11,742:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:54:11,743:INFO:Checking exceptions
2024-04-13 19:54:11,748:INFO:Preparing display monitor
2024-04-13 19:54:11,774:INFO:Initializing Logistic Regression
2024-04-13 19:54:11,774:INFO:Total runtime is 0.0 minutes
2024-04-13 19:54:11,778:INFO:SubProcess create_model() called ==================================
2024-04-13 19:54:11,779:INFO:Initializing create_model()
2024-04-13 19:54:11,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161D9FFAEC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:11,779:INFO:Checking exceptions
2024-04-13 19:54:11,779:INFO:Importing libraries
2024-04-13 19:54:11,779:INFO:Copying training dataset
2024-04-13 19:54:11,789:INFO:Defining folds
2024-04-13 19:54:11,789:INFO:Declaring metric variables
2024-04-13 19:54:11,794:INFO:Importing untrained model
2024-04-13 19:54:11,798:INFO:Logistic Regression Imported successfully
2024-04-13 19:54:11,809:INFO:Starting cross validation
2024-04-13 19:54:11,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:54:11,944:INFO:Calculating mean and std
2024-04-13 19:54:11,945:INFO:Creating metrics dataframe
2024-04-13 19:54:11,947:INFO:Uploading results into container
2024-04-13 19:54:11,947:INFO:Uploading model into container now
2024-04-13 19:54:11,948:INFO:_master_model_container: 1
2024-04-13 19:54:11,948:INFO:_display_container: 2
2024-04-13 19:54:11,948:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2643, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:54:11,949:INFO:create_model() successfully completed......................................
2024-04-13 19:54:12,111:INFO:SubProcess create_model() end ==================================
2024-04-13 19:54:12,111:INFO:Creating metrics dataframe
2024-04-13 19:54:12,120:INFO:Initializing Decision Tree Classifier
2024-04-13 19:54:12,120:INFO:Total runtime is 0.005755225817362468 minutes
2024-04-13 19:54:12,124:INFO:SubProcess create_model() called ==================================
2024-04-13 19:54:12,125:INFO:Initializing create_model()
2024-04-13 19:54:12,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161D9FFAEC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:12,125:INFO:Checking exceptions
2024-04-13 19:54:12,125:INFO:Importing libraries
2024-04-13 19:54:12,125:INFO:Copying training dataset
2024-04-13 19:54:12,133:INFO:Defining folds
2024-04-13 19:54:12,133:INFO:Declaring metric variables
2024-04-13 19:54:12,138:INFO:Importing untrained model
2024-04-13 19:54:12,142:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:54:12,150:INFO:Starting cross validation
2024-04-13 19:54:12,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:54:12,358:INFO:Calculating mean and std
2024-04-13 19:54:12,359:INFO:Creating metrics dataframe
2024-04-13 19:54:12,361:INFO:Uploading results into container
2024-04-13 19:54:12,361:INFO:Uploading model into container now
2024-04-13 19:54:12,362:INFO:_master_model_container: 2
2024-04-13 19:54:12,362:INFO:_display_container: 2
2024-04-13 19:54:12,362:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2643, splitter='best')
2024-04-13 19:54:12,362:INFO:create_model() successfully completed......................................
2024-04-13 19:54:12,519:INFO:SubProcess create_model() end ==================================
2024-04-13 19:54:12,520:INFO:Creating metrics dataframe
2024-04-13 19:54:12,538:INFO:Initializing create_model()
2024-04-13 19:54:12,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2643, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:12,539:INFO:Checking exceptions
2024-04-13 19:54:12,541:INFO:Importing libraries
2024-04-13 19:54:12,541:INFO:Copying training dataset
2024-04-13 19:54:12,549:INFO:Defining folds
2024-04-13 19:54:12,549:INFO:Declaring metric variables
2024-04-13 19:54:12,550:INFO:Importing untrained model
2024-04-13 19:54:12,550:INFO:Declaring custom model
2024-04-13 19:54:12,550:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:54:12,552:INFO:Cross validation set to False
2024-04-13 19:54:12,552:INFO:Fitting Model
2024-04-13 19:54:12,624:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2643, splitter='best')
2024-04-13 19:54:12,624:INFO:create_model() successfully completed......................................
2024-04-13 19:54:12,790:INFO:Initializing create_model()
2024-04-13 19:54:12,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2643, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:12,790:INFO:Checking exceptions
2024-04-13 19:54:12,792:INFO:Importing libraries
2024-04-13 19:54:12,792:INFO:Copying training dataset
2024-04-13 19:54:12,800:INFO:Defining folds
2024-04-13 19:54:12,800:INFO:Declaring metric variables
2024-04-13 19:54:12,800:INFO:Importing untrained model
2024-04-13 19:54:12,801:INFO:Declaring custom model
2024-04-13 19:54:12,801:INFO:Logistic Regression Imported successfully
2024-04-13 19:54:12,802:INFO:Cross validation set to False
2024-04-13 19:54:12,803:INFO:Fitting Model
2024-04-13 19:54:12,826:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2643, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:54:12,826:INFO:create_model() successfully completed......................................
2024-04-13 19:54:13,001:INFO:_master_model_container: 2
2024-04-13 19:54:13,001:INFO:_display_container: 2
2024-04-13 19:54:13,002:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2643, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2643, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:54:13,002:INFO:compare_models() successfully completed......................................
2024-04-13 19:54:13,003:INFO:Initializing predict_model()
2024-04-13 19:54:13,003:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DEF31810>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2643, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E2FEE9E0>)
2024-04-13 19:54:13,004:INFO:Checking exceptions
2024-04-13 19:54:13,004:INFO:Preloading libraries
2024-04-13 19:54:46,271:INFO:PyCaret ClassificationExperiment
2024-04-13 19:54:46,271:INFO:Logging name: clf-default-name
2024-04-13 19:54:46,271:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:54:46,271:INFO:version 3.3.0
2024-04-13 19:54:46,271:INFO:Initializing setup()
2024-04-13 19:54:46,271:INFO:self.USI: 3e02
2024-04-13 19:54:46,271:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:54:46,271:INFO:Checking environment
2024-04-13 19:54:46,271:INFO:python_version: 3.10.14
2024-04-13 19:54:46,271:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:54:46,271:INFO:machine: AMD64
2024-04-13 19:54:46,271:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:54:46,276:INFO:Memory: svmem(total=17131573248, available=4788269056, percent=72.1, used=12343304192, free=4788269056)
2024-04-13 19:54:46,277:INFO:Physical Core: 8
2024-04-13 19:54:46,277:INFO:Logical Core: 16
2024-04-13 19:54:46,277:INFO:Checking libraries
2024-04-13 19:54:46,277:INFO:System:
2024-04-13 19:54:46,277:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:54:46,277:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:54:46,277:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:54:46,277:INFO:PyCaret required dependencies:
2024-04-13 19:54:46,277:INFO:                 pip: 23.3.1
2024-04-13 19:54:46,277:INFO:          setuptools: 68.2.2
2024-04-13 19:54:46,277:INFO:             pycaret: 3.3.0
2024-04-13 19:54:46,277:INFO:             IPython: 8.23.0
2024-04-13 19:54:46,278:INFO:          ipywidgets: 8.1.2
2024-04-13 19:54:46,278:INFO:                tqdm: 4.66.2
2024-04-13 19:54:46,278:INFO:               numpy: 1.26.4
2024-04-13 19:54:46,278:INFO:              pandas: 2.1.4
2024-04-13 19:54:46,278:INFO:              jinja2: 3.1.3
2024-04-13 19:54:46,278:INFO:               scipy: 1.11.4
2024-04-13 19:54:46,278:INFO:              joblib: 1.3.2
2024-04-13 19:54:46,278:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:54:46,278:INFO:                pyod: 1.1.3
2024-04-13 19:54:46,278:INFO:            imblearn: 0.12.2
2024-04-13 19:54:46,278:INFO:   category_encoders: 2.6.3
2024-04-13 19:54:46,278:INFO:            lightgbm: 4.3.0
2024-04-13 19:54:46,278:INFO:               numba: 0.59.1
2024-04-13 19:54:46,278:INFO:            requests: 2.31.0
2024-04-13 19:54:46,278:INFO:          matplotlib: 3.7.5
2024-04-13 19:54:46,279:INFO:          scikitplot: 0.3.7
2024-04-13 19:54:46,279:INFO:         yellowbrick: 1.5
2024-04-13 19:54:46,279:INFO:              plotly: 5.20.0
2024-04-13 19:54:46,279:INFO:    plotly-resampler: Not installed
2024-04-13 19:54:46,279:INFO:             kaleido: 0.2.1
2024-04-13 19:54:46,279:INFO:           schemdraw: 0.15
2024-04-13 19:54:46,279:INFO:         statsmodels: 0.14.1
2024-04-13 19:54:46,279:INFO:              sktime: 0.28.0
2024-04-13 19:54:46,279:INFO:               tbats: 1.1.3
2024-04-13 19:54:46,279:INFO:            pmdarima: 2.0.4
2024-04-13 19:54:46,279:INFO:              psutil: 5.9.8
2024-04-13 19:54:46,279:INFO:          markupsafe: 2.1.5
2024-04-13 19:54:46,279:INFO:             pickle5: Not installed
2024-04-13 19:54:46,279:INFO:         cloudpickle: 3.0.0
2024-04-13 19:54:46,279:INFO:         deprecation: 2.1.0
2024-04-13 19:54:46,280:INFO:              xxhash: 3.4.1
2024-04-13 19:54:46,280:INFO:           wurlitzer: 3.0.3
2024-04-13 19:54:46,280:INFO:PyCaret optional dependencies:
2024-04-13 19:54:46,280:INFO:                shap: Not installed
2024-04-13 19:54:46,280:INFO:           interpret: Not installed
2024-04-13 19:54:46,280:INFO:                umap: Not installed
2024-04-13 19:54:46,280:INFO:     ydata_profiling: Not installed
2024-04-13 19:54:46,280:INFO:  explainerdashboard: Not installed
2024-04-13 19:54:46,280:INFO:             autoviz: Not installed
2024-04-13 19:54:46,280:INFO:           fairlearn: Not installed
2024-04-13 19:54:46,280:INFO:          deepchecks: Not installed
2024-04-13 19:54:46,280:INFO:             xgboost: Not installed
2024-04-13 19:54:46,280:INFO:            catboost: Not installed
2024-04-13 19:54:46,280:INFO:              kmodes: Not installed
2024-04-13 19:54:46,280:INFO:             mlxtend: Not installed
2024-04-13 19:54:46,281:INFO:       statsforecast: Not installed
2024-04-13 19:54:46,281:INFO:        tune_sklearn: Not installed
2024-04-13 19:54:46,281:INFO:                 ray: Not installed
2024-04-13 19:54:46,281:INFO:            hyperopt: Not installed
2024-04-13 19:54:46,281:INFO:              optuna: Not installed
2024-04-13 19:54:46,281:INFO:               skopt: Not installed
2024-04-13 19:54:46,281:INFO:              mlflow: 2.11.3
2024-04-13 19:54:46,281:INFO:              gradio: Not installed
2024-04-13 19:54:46,281:INFO:             fastapi: Not installed
2024-04-13 19:54:46,281:INFO:             uvicorn: Not installed
2024-04-13 19:54:46,281:INFO:              m2cgen: Not installed
2024-04-13 19:54:46,281:INFO:           evidently: Not installed
2024-04-13 19:54:46,281:INFO:               fugue: Not installed
2024-04-13 19:54:46,281:INFO:           streamlit: 1.33.0
2024-04-13 19:54:46,281:INFO:             prophet: Not installed
2024-04-13 19:54:46,282:INFO:None
2024-04-13 19:54:46,282:INFO:Set up data.
2024-04-13 19:54:46,287:INFO:Set up folding strategy.
2024-04-13 19:54:46,287:INFO:Set up train/test split.
2024-04-13 19:54:46,287:INFO:Set up data.
2024-04-13 19:54:46,293:INFO:Set up index.
2024-04-13 19:54:46,294:INFO:Assigning column types.
2024-04-13 19:54:46,299:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:54:46,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:54:46,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:46,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:54:46,481:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:46,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:54:46,594:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:46,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:54:46,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,749:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:54:46,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:46,973:INFO:Preparing preprocessing pipeline...
2024-04-13 19:54:46,975:INFO:Set up simple imputation.
2024-04-13 19:54:46,975:INFO:Set up feature normalization.
2024-04-13 19:54:47,014:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:54:47,021:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:54:47,022:INFO:Creating final display dataframe.
2024-04-13 19:54:47,155:INFO:Setup _display_container:                     Description             Value
0                    Session id              6772
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3e02
2024-04-13 19:54:47,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:47,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:47,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:47,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:54:47,391:INFO:setup() successfully completed in 1.12s...............
2024-04-13 19:54:47,393:INFO:Initializing compare_models()
2024-04-13 19:54:47,393:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:54:47,393:INFO:Checking exceptions
2024-04-13 19:54:47,399:INFO:Preparing display monitor
2024-04-13 19:54:47,425:INFO:Initializing Logistic Regression
2024-04-13 19:54:47,425:INFO:Total runtime is 0.0 minutes
2024-04-13 19:54:47,429:INFO:SubProcess create_model() called ==================================
2024-04-13 19:54:47,429:INFO:Initializing create_model()
2024-04-13 19:54:47,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEC9F220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:47,429:INFO:Checking exceptions
2024-04-13 19:54:47,430:INFO:Importing libraries
2024-04-13 19:54:47,430:INFO:Copying training dataset
2024-04-13 19:54:47,439:INFO:Defining folds
2024-04-13 19:54:47,439:INFO:Declaring metric variables
2024-04-13 19:54:47,444:INFO:Importing untrained model
2024-04-13 19:54:47,448:INFO:Logistic Regression Imported successfully
2024-04-13 19:54:47,456:INFO:Starting cross validation
2024-04-13 19:54:47,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:54:52,444:INFO:Calculating mean and std
2024-04-13 19:54:52,447:INFO:Creating metrics dataframe
2024-04-13 19:54:52,452:INFO:Uploading results into container
2024-04-13 19:54:52,454:INFO:Uploading model into container now
2024-04-13 19:54:52,455:INFO:_master_model_container: 1
2024-04-13 19:54:52,455:INFO:_display_container: 2
2024-04-13 19:54:52,456:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6772, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:54:52,457:INFO:create_model() successfully completed......................................
2024-04-13 19:54:52,656:INFO:SubProcess create_model() end ==================================
2024-04-13 19:54:52,656:INFO:Creating metrics dataframe
2024-04-13 19:54:52,665:INFO:Initializing Decision Tree Classifier
2024-04-13 19:54:52,665:INFO:Total runtime is 0.08734600941340129 minutes
2024-04-13 19:54:52,669:INFO:SubProcess create_model() called ==================================
2024-04-13 19:54:52,670:INFO:Initializing create_model()
2024-04-13 19:54:52,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEC9F220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:52,670:INFO:Checking exceptions
2024-04-13 19:54:52,670:INFO:Importing libraries
2024-04-13 19:54:52,670:INFO:Copying training dataset
2024-04-13 19:54:52,679:INFO:Defining folds
2024-04-13 19:54:52,679:INFO:Declaring metric variables
2024-04-13 19:54:52,683:INFO:Importing untrained model
2024-04-13 19:54:52,688:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:54:52,696:INFO:Starting cross validation
2024-04-13 19:54:52,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:54:55,993:INFO:Calculating mean and std
2024-04-13 19:54:55,996:INFO:Creating metrics dataframe
2024-04-13 19:54:55,999:INFO:Uploading results into container
2024-04-13 19:54:56,000:INFO:Uploading model into container now
2024-04-13 19:54:56,001:INFO:_master_model_container: 2
2024-04-13 19:54:56,002:INFO:_display_container: 2
2024-04-13 19:54:56,002:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best')
2024-04-13 19:54:56,003:INFO:create_model() successfully completed......................................
2024-04-13 19:54:56,187:INFO:SubProcess create_model() end ==================================
2024-04-13 19:54:56,187:INFO:Creating metrics dataframe
2024-04-13 19:54:56,207:INFO:Initializing create_model()
2024-04-13 19:54:56,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:56,207:INFO:Checking exceptions
2024-04-13 19:54:56,209:INFO:Importing libraries
2024-04-13 19:54:56,209:INFO:Copying training dataset
2024-04-13 19:54:56,218:INFO:Defining folds
2024-04-13 19:54:56,218:INFO:Declaring metric variables
2024-04-13 19:54:56,218:INFO:Importing untrained model
2024-04-13 19:54:56,218:INFO:Declaring custom model
2024-04-13 19:54:56,219:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:54:56,220:INFO:Cross validation set to False
2024-04-13 19:54:56,220:INFO:Fitting Model
2024-04-13 19:54:56,293:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best')
2024-04-13 19:54:56,293:INFO:create_model() successfully completed......................................
2024-04-13 19:54:56,460:INFO:Initializing create_model()
2024-04-13 19:54:56,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6772, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:56,460:INFO:Checking exceptions
2024-04-13 19:54:56,462:INFO:Importing libraries
2024-04-13 19:54:56,463:INFO:Copying training dataset
2024-04-13 19:54:56,471:INFO:Defining folds
2024-04-13 19:54:56,471:INFO:Declaring metric variables
2024-04-13 19:54:56,471:INFO:Importing untrained model
2024-04-13 19:54:56,471:INFO:Declaring custom model
2024-04-13 19:54:56,472:INFO:Logistic Regression Imported successfully
2024-04-13 19:54:56,473:INFO:Cross validation set to False
2024-04-13 19:54:56,473:INFO:Fitting Model
2024-04-13 19:54:56,496:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6772, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:54:56,496:INFO:create_model() successfully completed......................................
2024-04-13 19:54:56,688:INFO:_master_model_container: 2
2024-04-13 19:54:56,688:INFO:_display_container: 2
2024-04-13 19:54:56,689:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6772, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:54:56,689:INFO:compare_models() successfully completed......................................
2024-04-13 19:54:56,690:INFO:Initializing predict_model()
2024-04-13 19:54:56,690:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEB05D80>)
2024-04-13 19:54:56,690:INFO:Checking exceptions
2024-04-13 19:54:56,691:INFO:Preloading libraries
2024-04-13 19:54:57,787:INFO:Initializing predict_model()
2024-04-13 19:54:57,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6772, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E39CCC10>)
2024-04-13 19:54:57,787:INFO:Checking exceptions
2024-04-13 19:54:57,787:INFO:Preloading libraries
2024-04-13 19:54:58,906:INFO:Initializing tune_model()
2024-04-13 19:54:58,906:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>)
2024-04-13 19:54:58,906:INFO:Checking exceptions
2024-04-13 19:54:58,926:INFO:Copying training dataset
2024-04-13 19:54:58,934:INFO:Checking base model
2024-04-13 19:54:58,934:INFO:Base model : Decision Tree Classifier
2024-04-13 19:54:58,939:INFO:Declaring metric variables
2024-04-13 19:54:58,943:INFO:Defining Hyperparameters
2024-04-13 19:54:59,115:INFO:Tuning with n_jobs=-1
2024-04-13 19:54:59,115:INFO:Initializing RandomizedSearchCV
2024-04-13 19:54:59,385:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2024-04-13 19:54:59,385:INFO:Hyperparameter search completed
2024-04-13 19:54:59,385:INFO:SubProcess create_model() called ==================================
2024-04-13 19:54:59,386:INFO:Initializing create_model()
2024-04-13 19:54:59,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3D1D2A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'entropy'})
2024-04-13 19:54:59,386:INFO:Checking exceptions
2024-04-13 19:54:59,386:INFO:Importing libraries
2024-04-13 19:54:59,386:INFO:Copying training dataset
2024-04-13 19:54:59,394:INFO:Defining folds
2024-04-13 19:54:59,394:INFO:Declaring metric variables
2024-04-13 19:54:59,400:INFO:Importing untrained model
2024-04-13 19:54:59,400:INFO:Declaring custom model
2024-04-13 19:54:59,405:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:54:59,412:INFO:Starting cross validation
2024-04-13 19:54:59,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:54:59,542:INFO:Calculating mean and std
2024-04-13 19:54:59,543:INFO:Creating metrics dataframe
2024-04-13 19:54:59,549:INFO:Finalizing model
2024-04-13 19:54:59,572:INFO:Uploading results into container
2024-04-13 19:54:59,573:INFO:Uploading model into container now
2024-04-13 19:54:59,573:INFO:_master_model_container: 3
2024-04-13 19:54:59,573:INFO:_display_container: 5
2024-04-13 19:54:59,574:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best')
2024-04-13 19:54:59,574:INFO:create_model() successfully completed......................................
2024-04-13 19:54:59,737:INFO:SubProcess create_model() end ==================================
2024-04-13 19:54:59,737:INFO:choose_better activated
2024-04-13 19:54:59,741:INFO:SubProcess create_model() called ==================================
2024-04-13 19:54:59,742:INFO:Initializing create_model()
2024-04-13 19:54:59,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:54:59,742:INFO:Checking exceptions
2024-04-13 19:54:59,744:INFO:Importing libraries
2024-04-13 19:54:59,744:INFO:Copying training dataset
2024-04-13 19:54:59,752:INFO:Defining folds
2024-04-13 19:54:59,753:INFO:Declaring metric variables
2024-04-13 19:54:59,753:INFO:Importing untrained model
2024-04-13 19:54:59,753:INFO:Declaring custom model
2024-04-13 19:54:59,754:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:54:59,754:INFO:Starting cross validation
2024-04-13 19:54:59,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:54:59,931:INFO:Calculating mean and std
2024-04-13 19:54:59,932:INFO:Creating metrics dataframe
2024-04-13 19:54:59,934:INFO:Finalizing model
2024-04-13 19:55:00,005:INFO:Uploading results into container
2024-04-13 19:55:00,006:INFO:Uploading model into container now
2024-04-13 19:55:00,007:INFO:_master_model_container: 4
2024-04-13 19:55:00,007:INFO:_display_container: 6
2024-04-13 19:55:00,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best')
2024-04-13 19:55:00,007:INFO:create_model() successfully completed......................................
2024-04-13 19:55:00,169:INFO:SubProcess create_model() end ==================================
2024-04-13 19:55:00,170:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best') result for F1 is 0.5473
2024-04-13 19:55:00,171:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best') result for F1 is 0.4544
2024-04-13 19:55:00,171:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best') is best model
2024-04-13 19:55:00,171:INFO:choose_better completed
2024-04-13 19:55:00,172:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 19:55:00,184:INFO:_master_model_container: 4
2024-04-13 19:55:00,184:INFO:_display_container: 5
2024-04-13 19:55:00,185:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best')
2024-04-13 19:55:00,185:INFO:tune_model() successfully completed......................................
2024-04-13 19:55:00,391:INFO:Initializing predict_model()
2024-04-13 19:55:00,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DF108E50>)
2024-04-13 19:55:00,391:INFO:Checking exceptions
2024-04-13 19:55:00,391:INFO:Preloading libraries
2024-04-13 19:55:00,703:INFO:Initializing finalize_model()
2024-04-13 19:55:00,703:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 19:55:00,704:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best')
2024-04-13 19:55:00,708:INFO:Initializing create_model()
2024-04-13 19:55:00,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3C14730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6772, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:55:00,708:INFO:Checking exceptions
2024-04-13 19:55:00,710:INFO:Importing libraries
2024-04-13 19:55:00,710:INFO:Copying training dataset
2024-04-13 19:55:00,711:INFO:Defining folds
2024-04-13 19:55:00,711:INFO:Declaring metric variables
2024-04-13 19:55:00,711:INFO:Importing untrained model
2024-04-13 19:55:00,711:INFO:Declaring custom model
2024-04-13 19:55:00,712:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:55:00,713:INFO:Cross validation set to False
2024-04-13 19:55:00,713:INFO:Fitting Model
2024-04-13 19:55:00,808:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6772,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:55:00,808:INFO:create_model() successfully completed......................................
2024-04-13 19:55:00,968:INFO:_master_model_container: 4
2024-04-13 19:55:00,969:INFO:_display_container: 6
2024-04-13 19:55:00,977:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6772,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:55:00,977:INFO:finalize_model() successfully completed......................................
2024-04-13 19:55:01,152:INFO:Initializing save_model()
2024-04-13 19:55:01,153:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6772,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 19:55:01,153:INFO:Adding model into prep_pipe
2024-04-13 19:55:01,153:WARNING:Only Model saved as it was a pipeline.
2024-04-13 19:55:01,159:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 19:55:01,168:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6772,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:55:01,168:INFO:save_model() successfully completed......................................
2024-04-13 19:55:01,329:INFO:Initializing load_model()
2024-04-13 19:55:01,330:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-13 19:57:05,198:INFO:PyCaret ClassificationExperiment
2024-04-13 19:57:05,198:INFO:Logging name: clf-default-name
2024-04-13 19:57:05,198:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:57:05,199:INFO:version 3.3.0
2024-04-13 19:57:05,199:INFO:Initializing setup()
2024-04-13 19:57:05,199:INFO:self.USI: 83fe
2024-04-13 19:57:05,199:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:57:05,199:INFO:Checking environment
2024-04-13 19:57:05,199:INFO:python_version: 3.10.14
2024-04-13 19:57:05,199:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:57:05,199:INFO:machine: AMD64
2024-04-13 19:57:05,199:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:57:05,205:INFO:Memory: svmem(total=17131573248, available=2973929472, percent=82.6, used=14157643776, free=2973929472)
2024-04-13 19:57:05,205:INFO:Physical Core: 8
2024-04-13 19:57:05,205:INFO:Logical Core: 16
2024-04-13 19:57:05,205:INFO:Checking libraries
2024-04-13 19:57:05,205:INFO:System:
2024-04-13 19:57:05,205:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:57:05,205:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:57:05,205:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:57:05,205:INFO:PyCaret required dependencies:
2024-04-13 19:57:05,205:INFO:                 pip: 23.3.1
2024-04-13 19:57:05,205:INFO:          setuptools: 68.2.2
2024-04-13 19:57:05,205:INFO:             pycaret: 3.3.0
2024-04-13 19:57:05,206:INFO:             IPython: 8.23.0
2024-04-13 19:57:05,206:INFO:          ipywidgets: 8.1.2
2024-04-13 19:57:05,206:INFO:                tqdm: 4.66.2
2024-04-13 19:57:05,206:INFO:               numpy: 1.26.4
2024-04-13 19:57:05,206:INFO:              pandas: 2.1.4
2024-04-13 19:57:05,206:INFO:              jinja2: 3.1.3
2024-04-13 19:57:05,206:INFO:               scipy: 1.11.4
2024-04-13 19:57:05,206:INFO:              joblib: 1.3.2
2024-04-13 19:57:05,206:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:57:05,206:INFO:                pyod: 1.1.3
2024-04-13 19:57:05,206:INFO:            imblearn: 0.12.2
2024-04-13 19:57:05,206:INFO:   category_encoders: 2.6.3
2024-04-13 19:57:05,206:INFO:            lightgbm: 4.3.0
2024-04-13 19:57:05,206:INFO:               numba: 0.59.1
2024-04-13 19:57:05,206:INFO:            requests: 2.31.0
2024-04-13 19:57:05,207:INFO:          matplotlib: 3.7.5
2024-04-13 19:57:05,207:INFO:          scikitplot: 0.3.7
2024-04-13 19:57:05,207:INFO:         yellowbrick: 1.5
2024-04-13 19:57:05,207:INFO:              plotly: 5.20.0
2024-04-13 19:57:05,207:INFO:    plotly-resampler: Not installed
2024-04-13 19:57:05,207:INFO:             kaleido: 0.2.1
2024-04-13 19:57:05,207:INFO:           schemdraw: 0.15
2024-04-13 19:57:05,207:INFO:         statsmodels: 0.14.1
2024-04-13 19:57:05,207:INFO:              sktime: 0.28.0
2024-04-13 19:57:05,207:INFO:               tbats: 1.1.3
2024-04-13 19:57:05,207:INFO:            pmdarima: 2.0.4
2024-04-13 19:57:05,207:INFO:              psutil: 5.9.8
2024-04-13 19:57:05,207:INFO:          markupsafe: 2.1.5
2024-04-13 19:57:05,207:INFO:             pickle5: Not installed
2024-04-13 19:57:05,207:INFO:         cloudpickle: 3.0.0
2024-04-13 19:57:05,207:INFO:         deprecation: 2.1.0
2024-04-13 19:57:05,208:INFO:              xxhash: 3.4.1
2024-04-13 19:57:05,208:INFO:           wurlitzer: 3.0.3
2024-04-13 19:57:05,208:INFO:PyCaret optional dependencies:
2024-04-13 19:57:05,208:INFO:                shap: Not installed
2024-04-13 19:57:05,208:INFO:           interpret: Not installed
2024-04-13 19:57:05,208:INFO:                umap: Not installed
2024-04-13 19:57:05,208:INFO:     ydata_profiling: Not installed
2024-04-13 19:57:05,208:INFO:  explainerdashboard: Not installed
2024-04-13 19:57:05,208:INFO:             autoviz: Not installed
2024-04-13 19:57:05,208:INFO:           fairlearn: Not installed
2024-04-13 19:57:05,208:INFO:          deepchecks: Not installed
2024-04-13 19:57:05,208:INFO:             xgboost: Not installed
2024-04-13 19:57:05,208:INFO:            catboost: Not installed
2024-04-13 19:57:05,208:INFO:              kmodes: Not installed
2024-04-13 19:57:05,209:INFO:             mlxtend: Not installed
2024-04-13 19:57:05,209:INFO:       statsforecast: Not installed
2024-04-13 19:57:05,209:INFO:        tune_sklearn: Not installed
2024-04-13 19:57:05,209:INFO:                 ray: Not installed
2024-04-13 19:57:05,209:INFO:            hyperopt: Not installed
2024-04-13 19:57:05,209:INFO:              optuna: Not installed
2024-04-13 19:57:05,209:INFO:               skopt: Not installed
2024-04-13 19:57:05,209:INFO:              mlflow: 2.11.3
2024-04-13 19:57:05,209:INFO:              gradio: Not installed
2024-04-13 19:57:05,209:INFO:             fastapi: Not installed
2024-04-13 19:57:05,209:INFO:             uvicorn: Not installed
2024-04-13 19:57:05,209:INFO:              m2cgen: Not installed
2024-04-13 19:57:05,209:INFO:           evidently: Not installed
2024-04-13 19:57:05,209:INFO:               fugue: Not installed
2024-04-13 19:57:05,209:INFO:           streamlit: 1.33.0
2024-04-13 19:57:05,210:INFO:             prophet: Not installed
2024-04-13 19:57:05,210:INFO:None
2024-04-13 19:57:05,210:INFO:Set up data.
2024-04-13 19:57:05,215:INFO:Set up folding strategy.
2024-04-13 19:57:05,216:INFO:Set up train/test split.
2024-04-13 19:57:05,216:INFO:Set up data.
2024-04-13 19:57:05,221:INFO:Set up index.
2024-04-13 19:57:05,221:INFO:Assigning column types.
2024-04-13 19:57:05,227:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:57:05,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:57:05,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:05,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,409:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:57:05,410:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:05,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,454:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:57:05,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:05,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:05,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,680:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:57:05,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:05,907:INFO:Preparing preprocessing pipeline...
2024-04-13 19:57:05,908:INFO:Set up simple imputation.
2024-04-13 19:57:05,908:INFO:Set up feature normalization.
2024-04-13 19:57:05,947:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:57:05,954:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:57:05,954:INFO:Creating final display dataframe.
2024-04-13 19:57:06,099:INFO:Setup _display_container:                     Description             Value
0                    Session id              6582
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              83fe
2024-04-13 19:57:06,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:06,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:06,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:06,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:06,338:INFO:setup() successfully completed in 1.14s...............
2024-04-13 19:57:06,338:INFO:Initializing compare_models()
2024-04-13 19:57:06,338:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:57:06,338:INFO:Checking exceptions
2024-04-13 19:57:06,344:INFO:Preparing display monitor
2024-04-13 19:57:06,370:INFO:Initializing Logistic Regression
2024-04-13 19:57:06,370:INFO:Total runtime is 0.0 minutes
2024-04-13 19:57:06,374:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:06,374:INFO:Initializing create_model()
2024-04-13 19:57:06,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DE935FF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:06,374:INFO:Checking exceptions
2024-04-13 19:57:06,375:INFO:Importing libraries
2024-04-13 19:57:06,375:INFO:Copying training dataset
2024-04-13 19:57:06,385:INFO:Defining folds
2024-04-13 19:57:06,385:INFO:Declaring metric variables
2024-04-13 19:57:06,389:INFO:Importing untrained model
2024-04-13 19:57:06,394:INFO:Logistic Regression Imported successfully
2024-04-13 19:57:06,402:INFO:Starting cross validation
2024-04-13 19:57:06,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:06,542:INFO:Calculating mean and std
2024-04-13 19:57:06,543:INFO:Creating metrics dataframe
2024-04-13 19:57:06,545:INFO:Uploading results into container
2024-04-13 19:57:06,545:INFO:Uploading model into container now
2024-04-13 19:57:06,546:INFO:_master_model_container: 1
2024-04-13 19:57:06,546:INFO:_display_container: 2
2024-04-13 19:57:06,546:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6582, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:57:06,546:INFO:create_model() successfully completed......................................
2024-04-13 19:57:06,713:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:06,713:INFO:Creating metrics dataframe
2024-04-13 19:57:06,721:INFO:Initializing Decision Tree Classifier
2024-04-13 19:57:06,721:INFO:Total runtime is 0.005838628609975179 minutes
2024-04-13 19:57:06,725:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:06,726:INFO:Initializing create_model()
2024-04-13 19:57:06,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DE935FF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:06,726:INFO:Checking exceptions
2024-04-13 19:57:06,726:INFO:Importing libraries
2024-04-13 19:57:06,726:INFO:Copying training dataset
2024-04-13 19:57:06,734:INFO:Defining folds
2024-04-13 19:57:06,734:INFO:Declaring metric variables
2024-04-13 19:57:06,738:INFO:Importing untrained model
2024-04-13 19:57:06,743:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:06,751:INFO:Starting cross validation
2024-04-13 19:57:06,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:06,917:INFO:Calculating mean and std
2024-04-13 19:57:06,918:INFO:Creating metrics dataframe
2024-04-13 19:57:06,920:INFO:Uploading results into container
2024-04-13 19:57:06,920:INFO:Uploading model into container now
2024-04-13 19:57:06,921:INFO:_master_model_container: 2
2024-04-13 19:57:06,921:INFO:_display_container: 2
2024-04-13 19:57:06,921:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best')
2024-04-13 19:57:06,921:INFO:create_model() successfully completed......................................
2024-04-13 19:57:07,080:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:07,081:INFO:Creating metrics dataframe
2024-04-13 19:57:07,099:INFO:Initializing create_model()
2024-04-13 19:57:07,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:07,099:INFO:Checking exceptions
2024-04-13 19:57:07,101:INFO:Importing libraries
2024-04-13 19:57:07,101:INFO:Copying training dataset
2024-04-13 19:57:07,110:INFO:Defining folds
2024-04-13 19:57:07,110:INFO:Declaring metric variables
2024-04-13 19:57:07,110:INFO:Importing untrained model
2024-04-13 19:57:07,110:INFO:Declaring custom model
2024-04-13 19:57:07,111:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:07,112:INFO:Cross validation set to False
2024-04-13 19:57:07,112:INFO:Fitting Model
2024-04-13 19:57:07,184:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best')
2024-04-13 19:57:07,184:INFO:create_model() successfully completed......................................
2024-04-13 19:57:07,350:INFO:Initializing create_model()
2024-04-13 19:57:07,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6582, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:07,350:INFO:Checking exceptions
2024-04-13 19:57:07,352:INFO:Importing libraries
2024-04-13 19:57:07,352:INFO:Copying training dataset
2024-04-13 19:57:07,360:INFO:Defining folds
2024-04-13 19:57:07,361:INFO:Declaring metric variables
2024-04-13 19:57:07,361:INFO:Importing untrained model
2024-04-13 19:57:07,361:INFO:Declaring custom model
2024-04-13 19:57:07,362:INFO:Logistic Regression Imported successfully
2024-04-13 19:57:07,363:INFO:Cross validation set to False
2024-04-13 19:57:07,363:INFO:Fitting Model
2024-04-13 19:57:07,386:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6582, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:57:07,386:INFO:create_model() successfully completed......................................
2024-04-13 19:57:07,563:INFO:_master_model_container: 2
2024-04-13 19:57:07,563:INFO:_display_container: 2
2024-04-13 19:57:07,564:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6582, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:57:07,564:INFO:compare_models() successfully completed......................................
2024-04-13 19:57:07,565:INFO:Initializing predict_model()
2024-04-13 19:57:07,565:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DF1088B0>)
2024-04-13 19:57:07,565:INFO:Checking exceptions
2024-04-13 19:57:07,565:INFO:Preloading libraries
2024-04-13 19:57:08,656:INFO:Initializing predict_model()
2024-04-13 19:57:08,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6582, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E16E0DC0>)
2024-04-13 19:57:08,656:INFO:Checking exceptions
2024-04-13 19:57:08,656:INFO:Preloading libraries
2024-04-13 19:57:09,706:INFO:Initializing tune_model()
2024-04-13 19:57:09,706:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>)
2024-04-13 19:57:09,706:INFO:Checking exceptions
2024-04-13 19:57:09,726:INFO:Copying training dataset
2024-04-13 19:57:09,734:INFO:Checking base model
2024-04-13 19:57:09,734:INFO:Base model : Decision Tree Classifier
2024-04-13 19:57:09,738:INFO:Declaring metric variables
2024-04-13 19:57:09,743:INFO:Defining Hyperparameters
2024-04-13 19:57:09,936:INFO:Tuning with n_jobs=-1
2024-04-13 19:57:09,936:INFO:Initializing RandomizedSearchCV
2024-04-13 19:57:10,188:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 14, 'actual_estimator__criterion': 'gini'}
2024-04-13 19:57:10,188:INFO:Hyperparameter search completed
2024-04-13 19:57:10,188:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:10,189:INFO:Initializing create_model()
2024-04-13 19:57:10,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEE73BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 14, 'criterion': 'gini'})
2024-04-13 19:57:10,189:INFO:Checking exceptions
2024-04-13 19:57:10,189:INFO:Importing libraries
2024-04-13 19:57:10,189:INFO:Copying training dataset
2024-04-13 19:57:10,197:INFO:Defining folds
2024-04-13 19:57:10,198:INFO:Declaring metric variables
2024-04-13 19:57:10,202:INFO:Importing untrained model
2024-04-13 19:57:10,202:INFO:Declaring custom model
2024-04-13 19:57:10,207:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:10,215:INFO:Starting cross validation
2024-04-13 19:57:10,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:10,347:INFO:Calculating mean and std
2024-04-13 19:57:10,348:INFO:Creating metrics dataframe
2024-04-13 19:57:10,354:INFO:Finalizing model
2024-04-13 19:57:10,377:INFO:Uploading results into container
2024-04-13 19:57:10,378:INFO:Uploading model into container now
2024-04-13 19:57:10,379:INFO:_master_model_container: 3
2024-04-13 19:57:10,379:INFO:_display_container: 5
2024-04-13 19:57:10,379:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best')
2024-04-13 19:57:10,380:INFO:create_model() successfully completed......................................
2024-04-13 19:57:10,543:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:10,543:INFO:choose_better activated
2024-04-13 19:57:10,548:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:10,548:INFO:Initializing create_model()
2024-04-13 19:57:10,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:10,549:INFO:Checking exceptions
2024-04-13 19:57:10,550:INFO:Importing libraries
2024-04-13 19:57:10,550:INFO:Copying training dataset
2024-04-13 19:57:10,558:INFO:Defining folds
2024-04-13 19:57:10,558:INFO:Declaring metric variables
2024-04-13 19:57:10,558:INFO:Importing untrained model
2024-04-13 19:57:10,559:INFO:Declaring custom model
2024-04-13 19:57:10,559:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:10,560:INFO:Starting cross validation
2024-04-13 19:57:10,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:10,727:INFO:Calculating mean and std
2024-04-13 19:57:10,728:INFO:Creating metrics dataframe
2024-04-13 19:57:10,730:INFO:Finalizing model
2024-04-13 19:57:10,802:INFO:Uploading results into container
2024-04-13 19:57:10,802:INFO:Uploading model into container now
2024-04-13 19:57:10,803:INFO:_master_model_container: 4
2024-04-13 19:57:10,803:INFO:_display_container: 6
2024-04-13 19:57:10,803:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best')
2024-04-13 19:57:10,803:INFO:create_model() successfully completed......................................
2024-04-13 19:57:10,963:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:10,964:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best') result for F1 is 0.5479
2024-04-13 19:57:10,964:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best') result for F1 is 0.4982
2024-04-13 19:57:10,965:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best') is best model
2024-04-13 19:57:10,965:INFO:choose_better completed
2024-04-13 19:57:10,965:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 19:57:10,978:INFO:_master_model_container: 4
2024-04-13 19:57:10,978:INFO:_display_container: 5
2024-04-13 19:57:10,979:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best')
2024-04-13 19:57:10,979:INFO:tune_model() successfully completed......................................
2024-04-13 19:57:11,140:INFO:Initializing predict_model()
2024-04-13 19:57:11,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEBEA5F0>)
2024-04-13 19:57:11,140:INFO:Checking exceptions
2024-04-13 19:57:11,140:INFO:Preloading libraries
2024-04-13 19:57:11,449:INFO:Initializing finalize_model()
2024-04-13 19:57:11,449:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 19:57:11,450:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best')
2024-04-13 19:57:11,455:INFO:Initializing create_model()
2024-04-13 19:57:11,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF13FFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6582, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:11,455:INFO:Checking exceptions
2024-04-13 19:57:11,456:INFO:Importing libraries
2024-04-13 19:57:11,457:INFO:Copying training dataset
2024-04-13 19:57:11,457:INFO:Defining folds
2024-04-13 19:57:11,457:INFO:Declaring metric variables
2024-04-13 19:57:11,457:INFO:Importing untrained model
2024-04-13 19:57:11,457:INFO:Declaring custom model
2024-04-13 19:57:11,458:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:11,459:INFO:Cross validation set to False
2024-04-13 19:57:11,459:INFO:Fitting Model
2024-04-13 19:57:11,555:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6582,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:57:11,555:INFO:create_model() successfully completed......................................
2024-04-13 19:57:11,715:INFO:_master_model_container: 4
2024-04-13 19:57:11,715:INFO:_display_container: 6
2024-04-13 19:57:11,723:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6582,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:57:11,723:INFO:finalize_model() successfully completed......................................
2024-04-13 19:57:11,898:INFO:Initializing save_model()
2024-04-13 19:57:11,898:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6582,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 19:57:11,898:INFO:Adding model into prep_pipe
2024-04-13 19:57:11,898:WARNING:Only Model saved as it was a pipeline.
2024-04-13 19:57:11,904:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 19:57:11,913:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6582,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:57:11,913:INFO:save_model() successfully completed......................................
2024-04-13 19:57:12,072:INFO:Initializing load_model()
2024-04-13 19:57:12,072:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-13 19:57:25,531:INFO:PyCaret ClassificationExperiment
2024-04-13 19:57:25,531:INFO:Logging name: clf-default-name
2024-04-13 19:57:25,531:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:57:25,531:INFO:version 3.3.0
2024-04-13 19:57:25,531:INFO:Initializing setup()
2024-04-13 19:57:25,531:INFO:self.USI: da5c
2024-04-13 19:57:25,532:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 19:57:25,532:INFO:Checking environment
2024-04-13 19:57:25,532:INFO:python_version: 3.10.14
2024-04-13 19:57:25,532:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:57:25,532:INFO:machine: AMD64
2024-04-13 19:57:25,532:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 19:57:25,544:INFO:Memory: svmem(total=17131573248, available=2957479936, percent=82.7, used=14174093312, free=2957479936)
2024-04-13 19:57:25,544:INFO:Physical Core: 8
2024-04-13 19:57:25,544:INFO:Logical Core: 16
2024-04-13 19:57:25,544:INFO:Checking libraries
2024-04-13 19:57:25,544:INFO:System:
2024-04-13 19:57:25,544:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:57:25,544:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 19:57:25,545:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 19:57:25,545:INFO:PyCaret required dependencies:
2024-04-13 19:57:25,545:INFO:                 pip: 23.3.1
2024-04-13 19:57:25,545:INFO:          setuptools: 68.2.2
2024-04-13 19:57:25,545:INFO:             pycaret: 3.3.0
2024-04-13 19:57:25,545:INFO:             IPython: 8.23.0
2024-04-13 19:57:25,545:INFO:          ipywidgets: 8.1.2
2024-04-13 19:57:25,545:INFO:                tqdm: 4.66.2
2024-04-13 19:57:25,545:INFO:               numpy: 1.26.4
2024-04-13 19:57:25,546:INFO:              pandas: 2.1.4
2024-04-13 19:57:25,546:INFO:              jinja2: 3.1.3
2024-04-13 19:57:25,546:INFO:               scipy: 1.11.4
2024-04-13 19:57:25,546:INFO:              joblib: 1.3.2
2024-04-13 19:57:25,546:INFO:             sklearn: 1.4.1.post1
2024-04-13 19:57:25,546:INFO:                pyod: 1.1.3
2024-04-13 19:57:25,546:INFO:            imblearn: 0.12.2
2024-04-13 19:57:25,546:INFO:   category_encoders: 2.6.3
2024-04-13 19:57:25,546:INFO:            lightgbm: 4.3.0
2024-04-13 19:57:25,546:INFO:               numba: 0.59.1
2024-04-13 19:57:25,546:INFO:            requests: 2.31.0
2024-04-13 19:57:25,546:INFO:          matplotlib: 3.7.5
2024-04-13 19:57:25,546:INFO:          scikitplot: 0.3.7
2024-04-13 19:57:25,546:INFO:         yellowbrick: 1.5
2024-04-13 19:57:25,546:INFO:              plotly: 5.20.0
2024-04-13 19:57:25,547:INFO:    plotly-resampler: Not installed
2024-04-13 19:57:25,547:INFO:             kaleido: 0.2.1
2024-04-13 19:57:25,547:INFO:           schemdraw: 0.15
2024-04-13 19:57:25,547:INFO:         statsmodels: 0.14.1
2024-04-13 19:57:25,547:INFO:              sktime: 0.28.0
2024-04-13 19:57:25,547:INFO:               tbats: 1.1.3
2024-04-13 19:57:25,547:INFO:            pmdarima: 2.0.4
2024-04-13 19:57:25,547:INFO:              psutil: 5.9.8
2024-04-13 19:57:25,547:INFO:          markupsafe: 2.1.5
2024-04-13 19:57:25,547:INFO:             pickle5: Not installed
2024-04-13 19:57:25,547:INFO:         cloudpickle: 3.0.0
2024-04-13 19:57:25,547:INFO:         deprecation: 2.1.0
2024-04-13 19:57:25,547:INFO:              xxhash: 3.4.1
2024-04-13 19:57:25,547:INFO:           wurlitzer: 3.0.3
2024-04-13 19:57:25,547:INFO:PyCaret optional dependencies:
2024-04-13 19:57:25,548:INFO:                shap: Not installed
2024-04-13 19:57:25,548:INFO:           interpret: Not installed
2024-04-13 19:57:25,548:INFO:                umap: Not installed
2024-04-13 19:57:25,548:INFO:     ydata_profiling: Not installed
2024-04-13 19:57:25,548:INFO:  explainerdashboard: Not installed
2024-04-13 19:57:25,548:INFO:             autoviz: Not installed
2024-04-13 19:57:25,548:INFO:           fairlearn: Not installed
2024-04-13 19:57:25,548:INFO:          deepchecks: Not installed
2024-04-13 19:57:25,548:INFO:             xgboost: Not installed
2024-04-13 19:57:25,548:INFO:            catboost: Not installed
2024-04-13 19:57:25,548:INFO:              kmodes: Not installed
2024-04-13 19:57:25,548:INFO:             mlxtend: Not installed
2024-04-13 19:57:25,548:INFO:       statsforecast: Not installed
2024-04-13 19:57:25,548:INFO:        tune_sklearn: Not installed
2024-04-13 19:57:25,548:INFO:                 ray: Not installed
2024-04-13 19:57:25,549:INFO:            hyperopt: Not installed
2024-04-13 19:57:25,549:INFO:              optuna: Not installed
2024-04-13 19:57:25,549:INFO:               skopt: Not installed
2024-04-13 19:57:25,549:INFO:              mlflow: 2.11.3
2024-04-13 19:57:25,549:INFO:              gradio: Not installed
2024-04-13 19:57:25,549:INFO:             fastapi: Not installed
2024-04-13 19:57:25,549:INFO:             uvicorn: Not installed
2024-04-13 19:57:25,549:INFO:              m2cgen: Not installed
2024-04-13 19:57:25,549:INFO:           evidently: Not installed
2024-04-13 19:57:25,549:INFO:               fugue: Not installed
2024-04-13 19:57:25,549:INFO:           streamlit: 1.33.0
2024-04-13 19:57:25,549:INFO:             prophet: Not installed
2024-04-13 19:57:25,549:INFO:None
2024-04-13 19:57:25,549:INFO:Set up data.
2024-04-13 19:57:25,556:INFO:Set up folding strategy.
2024-04-13 19:57:25,556:INFO:Set up train/test split.
2024-04-13 19:57:25,556:INFO:Set up data.
2024-04-13 19:57:25,563:INFO:Set up index.
2024-04-13 19:57:25,564:INFO:Assigning column types.
2024-04-13 19:57:25,571:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:57:25,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:57:25,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:25,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:25,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:25,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:57:25,754:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:25,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:25,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:25,798:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:57:25,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:25,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:25,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:25,979:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:57:26,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,023:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:57:26,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,250:INFO:Preparing preprocessing pipeline...
2024-04-13 19:57:26,252:INFO:Set up simple imputation.
2024-04-13 19:57:26,252:INFO:Set up feature normalization.
2024-04-13 19:57:26,291:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:57:26,298:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:57:26,298:INFO:Creating final display dataframe.
2024-04-13 19:57:26,432:INFO:Setup _display_container:                     Description             Value
0                    Session id              7321
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              da5c
2024-04-13 19:57:26,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:57:26,668:INFO:setup() successfully completed in 1.14s...............
2024-04-13 19:57:26,669:INFO:Initializing compare_models()
2024-04-13 19:57:26,669:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:57:26,669:INFO:Checking exceptions
2024-04-13 19:57:26,674:INFO:Preparing display monitor
2024-04-13 19:57:26,700:INFO:Initializing Logistic Regression
2024-04-13 19:57:26,700:INFO:Total runtime is 0.0 minutes
2024-04-13 19:57:26,704:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:26,704:INFO:Initializing create_model()
2024-04-13 19:57:26,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161D9FFAEC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:26,704:INFO:Checking exceptions
2024-04-13 19:57:26,705:INFO:Importing libraries
2024-04-13 19:57:26,705:INFO:Copying training dataset
2024-04-13 19:57:26,714:INFO:Defining folds
2024-04-13 19:57:26,715:INFO:Declaring metric variables
2024-04-13 19:57:26,719:INFO:Importing untrained model
2024-04-13 19:57:26,723:INFO:Logistic Regression Imported successfully
2024-04-13 19:57:26,732:INFO:Starting cross validation
2024-04-13 19:57:26,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:26,867:INFO:Calculating mean and std
2024-04-13 19:57:26,868:INFO:Creating metrics dataframe
2024-04-13 19:57:26,870:INFO:Uploading results into container
2024-04-13 19:57:26,870:INFO:Uploading model into container now
2024-04-13 19:57:26,871:INFO:_master_model_container: 1
2024-04-13 19:57:26,871:INFO:_display_container: 2
2024-04-13 19:57:26,871:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:57:26,871:INFO:create_model() successfully completed......................................
2024-04-13 19:57:27,066:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:27,067:INFO:Creating metrics dataframe
2024-04-13 19:57:27,075:INFO:Initializing Decision Tree Classifier
2024-04-13 19:57:27,075:INFO:Total runtime is 0.006255678335825602 minutes
2024-04-13 19:57:27,080:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:27,080:INFO:Initializing create_model()
2024-04-13 19:57:27,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161D9FFAEC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:27,080:INFO:Checking exceptions
2024-04-13 19:57:27,081:INFO:Importing libraries
2024-04-13 19:57:27,081:INFO:Copying training dataset
2024-04-13 19:57:27,088:INFO:Defining folds
2024-04-13 19:57:27,088:INFO:Declaring metric variables
2024-04-13 19:57:27,093:INFO:Importing untrained model
2024-04-13 19:57:27,097:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:27,104:INFO:Starting cross validation
2024-04-13 19:57:27,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:27,284:INFO:Calculating mean and std
2024-04-13 19:57:27,285:INFO:Creating metrics dataframe
2024-04-13 19:57:27,287:INFO:Uploading results into container
2024-04-13 19:57:27,287:INFO:Uploading model into container now
2024-04-13 19:57:27,288:INFO:_master_model_container: 2
2024-04-13 19:57:27,288:INFO:_display_container: 2
2024-04-13 19:57:27,288:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best')
2024-04-13 19:57:27,288:INFO:create_model() successfully completed......................................
2024-04-13 19:57:27,482:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:27,482:INFO:Creating metrics dataframe
2024-04-13 19:57:27,501:INFO:Initializing create_model()
2024-04-13 19:57:27,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:27,501:INFO:Checking exceptions
2024-04-13 19:57:27,503:INFO:Importing libraries
2024-04-13 19:57:27,503:INFO:Copying training dataset
2024-04-13 19:57:27,511:INFO:Defining folds
2024-04-13 19:57:27,511:INFO:Declaring metric variables
2024-04-13 19:57:27,512:INFO:Importing untrained model
2024-04-13 19:57:27,512:INFO:Declaring custom model
2024-04-13 19:57:27,513:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:27,514:INFO:Cross validation set to False
2024-04-13 19:57:27,514:INFO:Fitting Model
2024-04-13 19:57:27,587:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best')
2024-04-13 19:57:27,587:INFO:create_model() successfully completed......................................
2024-04-13 19:57:27,785:INFO:Initializing create_model()
2024-04-13 19:57:27,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:27,786:INFO:Checking exceptions
2024-04-13 19:57:27,788:INFO:Importing libraries
2024-04-13 19:57:27,788:INFO:Copying training dataset
2024-04-13 19:57:27,796:INFO:Defining folds
2024-04-13 19:57:27,796:INFO:Declaring metric variables
2024-04-13 19:57:27,796:INFO:Importing untrained model
2024-04-13 19:57:27,796:INFO:Declaring custom model
2024-04-13 19:57:27,797:INFO:Logistic Regression Imported successfully
2024-04-13 19:57:27,799:INFO:Cross validation set to False
2024-04-13 19:57:27,799:INFO:Fitting Model
2024-04-13 19:57:27,840:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:57:27,840:INFO:create_model() successfully completed......................................
2024-04-13 19:57:28,059:INFO:_master_model_container: 2
2024-04-13 19:57:28,059:INFO:_display_container: 2
2024-04-13 19:57:28,060:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:57:28,061:INFO:compare_models() successfully completed......................................
2024-04-13 19:57:28,062:INFO:Initializing predict_model()
2024-04-13 19:57:28,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E16E01F0>)
2024-04-13 19:57:28,062:INFO:Checking exceptions
2024-04-13 19:57:28,062:INFO:Preloading libraries
2024-04-13 19:57:29,149:INFO:Initializing predict_model()
2024-04-13 19:57:29,149:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7321, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E51EF250>)
2024-04-13 19:57:29,149:INFO:Checking exceptions
2024-04-13 19:57:29,149:INFO:Preloading libraries
2024-04-13 19:57:30,244:INFO:Initializing tune_model()
2024-04-13 19:57:30,244:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>)
2024-04-13 19:57:30,244:INFO:Checking exceptions
2024-04-13 19:57:30,263:INFO:Copying training dataset
2024-04-13 19:57:30,270:INFO:Checking base model
2024-04-13 19:57:30,270:INFO:Base model : Decision Tree Classifier
2024-04-13 19:57:30,275:INFO:Declaring metric variables
2024-04-13 19:57:30,279:INFO:Defining Hyperparameters
2024-04-13 19:57:30,481:INFO:Tuning with n_jobs=-1
2024-04-13 19:57:30,481:INFO:Initializing RandomizedSearchCV
2024-04-13 19:57:30,784:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'gini'}
2024-04-13 19:57:30,784:INFO:Hyperparameter search completed
2024-04-13 19:57:30,784:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:30,785:INFO:Initializing create_model()
2024-04-13 19:57:30,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3A86830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 15, 'criterion': 'gini'})
2024-04-13 19:57:30,785:INFO:Checking exceptions
2024-04-13 19:57:30,785:INFO:Importing libraries
2024-04-13 19:57:30,785:INFO:Copying training dataset
2024-04-13 19:57:30,793:INFO:Defining folds
2024-04-13 19:57:30,793:INFO:Declaring metric variables
2024-04-13 19:57:30,798:INFO:Importing untrained model
2024-04-13 19:57:30,798:INFO:Declaring custom model
2024-04-13 19:57:30,803:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:30,810:INFO:Starting cross validation
2024-04-13 19:57:30,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:30,941:INFO:Calculating mean and std
2024-04-13 19:57:30,942:INFO:Creating metrics dataframe
2024-04-13 19:57:30,948:INFO:Finalizing model
2024-04-13 19:57:30,973:INFO:Uploading results into container
2024-04-13 19:57:30,974:INFO:Uploading model into container now
2024-04-13 19:57:30,975:INFO:_master_model_container: 3
2024-04-13 19:57:30,975:INFO:_display_container: 5
2024-04-13 19:57:30,976:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=15, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best')
2024-04-13 19:57:30,976:INFO:create_model() successfully completed......................................
2024-04-13 19:57:31,168:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:31,168:INFO:choose_better activated
2024-04-13 19:57:31,173:INFO:SubProcess create_model() called ==================================
2024-04-13 19:57:31,174:INFO:Initializing create_model()
2024-04-13 19:57:31,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:31,174:INFO:Checking exceptions
2024-04-13 19:57:31,175:INFO:Importing libraries
2024-04-13 19:57:31,176:INFO:Copying training dataset
2024-04-13 19:57:31,183:INFO:Defining folds
2024-04-13 19:57:31,184:INFO:Declaring metric variables
2024-04-13 19:57:31,184:INFO:Importing untrained model
2024-04-13 19:57:31,184:INFO:Declaring custom model
2024-04-13 19:57:31,185:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:31,185:INFO:Starting cross validation
2024-04-13 19:57:31,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:57:31,371:INFO:Calculating mean and std
2024-04-13 19:57:31,372:INFO:Creating metrics dataframe
2024-04-13 19:57:31,374:INFO:Finalizing model
2024-04-13 19:57:31,445:INFO:Uploading results into container
2024-04-13 19:57:31,446:INFO:Uploading model into container now
2024-04-13 19:57:31,446:INFO:_master_model_container: 4
2024-04-13 19:57:31,446:INFO:_display_container: 6
2024-04-13 19:57:31,447:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best')
2024-04-13 19:57:31,447:INFO:create_model() successfully completed......................................
2024-04-13 19:57:31,638:INFO:SubProcess create_model() end ==================================
2024-04-13 19:57:31,639:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best') result for F1 is 0.5445
2024-04-13 19:57:31,639:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=15, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best') result for F1 is 0.4473
2024-04-13 19:57:31,640:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best') is best model
2024-04-13 19:57:31,640:INFO:choose_better completed
2024-04-13 19:57:31,640:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 19:57:31,653:INFO:_master_model_container: 4
2024-04-13 19:57:31,653:INFO:_display_container: 5
2024-04-13 19:57:31,654:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best')
2024-04-13 19:57:31,654:INFO:tune_model() successfully completed......................................
2024-04-13 19:57:31,848:INFO:Initializing predict_model()
2024-04-13 19:57:31,849:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E16E0D30>)
2024-04-13 19:57:31,849:INFO:Checking exceptions
2024-04-13 19:57:31,849:INFO:Preloading libraries
2024-04-13 19:57:32,186:INFO:Initializing finalize_model()
2024-04-13 19:57:32,187:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 19:57:32,187:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best')
2024-04-13 19:57:32,192:INFO:Initializing create_model()
2024-04-13 19:57:32,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161DF118130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7321, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:57:32,192:INFO:Checking exceptions
2024-04-13 19:57:32,193:INFO:Importing libraries
2024-04-13 19:57:32,193:INFO:Copying training dataset
2024-04-13 19:57:32,194:INFO:Defining folds
2024-04-13 19:57:32,194:INFO:Declaring metric variables
2024-04-13 19:57:32,194:INFO:Importing untrained model
2024-04-13 19:57:32,194:INFO:Declaring custom model
2024-04-13 19:57:32,195:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:57:32,196:INFO:Cross validation set to False
2024-04-13 19:57:32,196:INFO:Fitting Model
2024-04-13 19:57:32,294:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7321,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:57:32,294:INFO:create_model() successfully completed......................................
2024-04-13 19:57:32,486:INFO:_master_model_container: 4
2024-04-13 19:57:32,486:INFO:_display_container: 6
2024-04-13 19:57:32,495:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7321,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:57:32,495:INFO:finalize_model() successfully completed......................................
2024-04-13 19:57:32,727:INFO:Initializing save_model()
2024-04-13 19:57:32,727:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7321,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 19:57:32,727:INFO:Adding model into prep_pipe
2024-04-13 19:57:32,727:WARNING:Only Model saved as it was a pipeline.
2024-04-13 19:57:32,733:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 19:57:32,742:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7321,
                                        splitter='best'))],
         verbose=False)
2024-04-13 19:57:32,742:INFO:save_model() successfully completed......................................
2024-04-13 19:57:32,942:INFO:Initializing load_model()
2024-04-13 19:57:32,942:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-13 20:09:39,710:INFO:PyCaret ClassificationExperiment
2024-04-13 20:09:39,710:INFO:Logging name: clf-default-name
2024-04-13 20:09:39,710:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:09:39,710:INFO:version 3.3.0
2024-04-13 20:09:39,710:INFO:Initializing setup()
2024-04-13 20:09:39,710:INFO:self.USI: 8772
2024-04-13 20:09:39,710:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 20:09:39,710:INFO:Checking environment
2024-04-13 20:09:39,710:INFO:python_version: 3.10.14
2024-04-13 20:09:39,711:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:09:39,711:INFO:machine: AMD64
2024-04-13 20:09:39,711:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 20:09:39,719:INFO:Memory: svmem(total=17131573248, available=2565779456, percent=85.0, used=14565793792, free=2565779456)
2024-04-13 20:09:39,719:INFO:Physical Core: 8
2024-04-13 20:09:39,719:INFO:Logical Core: 16
2024-04-13 20:09:39,719:INFO:Checking libraries
2024-04-13 20:09:39,719:INFO:System:
2024-04-13 20:09:39,719:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:09:39,719:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 20:09:39,719:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 20:09:39,719:INFO:PyCaret required dependencies:
2024-04-13 20:09:39,720:INFO:                 pip: 23.3.1
2024-04-13 20:09:39,720:INFO:          setuptools: 68.2.2
2024-04-13 20:09:39,720:INFO:             pycaret: 3.3.0
2024-04-13 20:09:39,720:INFO:             IPython: 8.23.0
2024-04-13 20:09:39,720:INFO:          ipywidgets: 8.1.2
2024-04-13 20:09:39,720:INFO:                tqdm: 4.66.2
2024-04-13 20:09:39,720:INFO:               numpy: 1.26.4
2024-04-13 20:09:39,720:INFO:              pandas: 2.1.4
2024-04-13 20:09:39,720:INFO:              jinja2: 3.1.3
2024-04-13 20:09:39,720:INFO:               scipy: 1.11.4
2024-04-13 20:09:39,720:INFO:              joblib: 1.3.2
2024-04-13 20:09:39,720:INFO:             sklearn: 1.4.1.post1
2024-04-13 20:09:39,720:INFO:                pyod: 1.1.3
2024-04-13 20:09:39,720:INFO:            imblearn: 0.12.2
2024-04-13 20:09:39,721:INFO:   category_encoders: 2.6.3
2024-04-13 20:09:39,721:INFO:            lightgbm: 4.3.0
2024-04-13 20:09:39,721:INFO:               numba: 0.59.1
2024-04-13 20:09:39,721:INFO:            requests: 2.31.0
2024-04-13 20:09:39,721:INFO:          matplotlib: 3.7.5
2024-04-13 20:09:39,721:INFO:          scikitplot: 0.3.7
2024-04-13 20:09:39,721:INFO:         yellowbrick: 1.5
2024-04-13 20:09:39,721:INFO:              plotly: 5.20.0
2024-04-13 20:09:39,721:INFO:    plotly-resampler: Not installed
2024-04-13 20:09:39,721:INFO:             kaleido: 0.2.1
2024-04-13 20:09:39,721:INFO:           schemdraw: 0.15
2024-04-13 20:09:39,721:INFO:         statsmodels: 0.14.1
2024-04-13 20:09:39,721:INFO:              sktime: 0.28.0
2024-04-13 20:09:39,721:INFO:               tbats: 1.1.3
2024-04-13 20:09:39,721:INFO:            pmdarima: 2.0.4
2024-04-13 20:09:39,722:INFO:              psutil: 5.9.8
2024-04-13 20:09:39,722:INFO:          markupsafe: 2.1.5
2024-04-13 20:09:39,722:INFO:             pickle5: Not installed
2024-04-13 20:09:39,722:INFO:         cloudpickle: 3.0.0
2024-04-13 20:09:39,722:INFO:         deprecation: 2.1.0
2024-04-13 20:09:39,722:INFO:              xxhash: 3.4.1
2024-04-13 20:09:39,722:INFO:           wurlitzer: 3.0.3
2024-04-13 20:09:39,722:INFO:PyCaret optional dependencies:
2024-04-13 20:09:39,722:INFO:                shap: Not installed
2024-04-13 20:09:39,722:INFO:           interpret: Not installed
2024-04-13 20:09:39,722:INFO:                umap: Not installed
2024-04-13 20:09:39,722:INFO:     ydata_profiling: Not installed
2024-04-13 20:09:39,723:INFO:  explainerdashboard: Not installed
2024-04-13 20:09:39,723:INFO:             autoviz: Not installed
2024-04-13 20:09:39,723:INFO:           fairlearn: Not installed
2024-04-13 20:09:39,723:INFO:          deepchecks: Not installed
2024-04-13 20:09:39,723:INFO:             xgboost: Not installed
2024-04-13 20:09:39,723:INFO:            catboost: Not installed
2024-04-13 20:09:39,723:INFO:              kmodes: Not installed
2024-04-13 20:09:39,723:INFO:             mlxtend: Not installed
2024-04-13 20:09:39,723:INFO:       statsforecast: Not installed
2024-04-13 20:09:39,723:INFO:        tune_sklearn: Not installed
2024-04-13 20:09:39,723:INFO:                 ray: Not installed
2024-04-13 20:09:39,723:INFO:            hyperopt: Not installed
2024-04-13 20:09:39,723:INFO:              optuna: Not installed
2024-04-13 20:09:39,723:INFO:               skopt: Not installed
2024-04-13 20:09:39,723:INFO:              mlflow: 2.11.3
2024-04-13 20:09:39,724:INFO:              gradio: Not installed
2024-04-13 20:09:39,724:INFO:             fastapi: Not installed
2024-04-13 20:09:39,724:INFO:             uvicorn: Not installed
2024-04-13 20:09:39,724:INFO:              m2cgen: Not installed
2024-04-13 20:09:39,724:INFO:           evidently: Not installed
2024-04-13 20:09:39,724:INFO:               fugue: Not installed
2024-04-13 20:09:39,724:INFO:           streamlit: 1.33.0
2024-04-13 20:09:39,724:INFO:             prophet: Not installed
2024-04-13 20:09:39,724:INFO:None
2024-04-13 20:09:39,724:INFO:Set up data.
2024-04-13 20:09:39,730:INFO:Set up folding strategy.
2024-04-13 20:09:39,731:INFO:Set up train/test split.
2024-04-13 20:09:39,731:INFO:Set up data.
2024-04-13 20:09:39,737:INFO:Set up index.
2024-04-13 20:09:39,737:INFO:Assigning column types.
2024-04-13 20:09:39,743:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:09:39,813:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:09:39,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:09:39,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:39,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:39,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:09:39,930:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:09:39,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:39,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:39,974:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:09:40,044:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:09:40,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,159:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:09:40,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,203:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:09:40,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,436:INFO:Preparing preprocessing pipeline...
2024-04-13 20:09:40,437:INFO:Set up simple imputation.
2024-04-13 20:09:40,438:INFO:Set up feature normalization.
2024-04-13 20:09:40,478:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:09:40,485:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:09:40,486:INFO:Creating final display dataframe.
2024-04-13 20:09:40,625:INFO:Setup _display_container:                     Description             Value
0                    Session id              6537
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8772
2024-04-13 20:09:40,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:09:40,894:INFO:setup() successfully completed in 1.19s...............
2024-04-13 20:09:40,894:INFO:Initializing compare_models()
2024-04-13 20:09:40,894:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:09:40,894:INFO:Checking exceptions
2024-04-13 20:09:40,901:INFO:Preparing display monitor
2024-04-13 20:09:40,937:INFO:Initializing Logistic Regression
2024-04-13 20:09:40,937:INFO:Total runtime is 0.0 minutes
2024-04-13 20:09:40,943:INFO:SubProcess create_model() called ==================================
2024-04-13 20:09:40,943:INFO:Initializing create_model()
2024-04-13 20:09:40,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E4FA2500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:09:40,944:INFO:Checking exceptions
2024-04-13 20:09:40,944:INFO:Importing libraries
2024-04-13 20:09:40,944:INFO:Copying training dataset
2024-04-13 20:09:40,961:INFO:Defining folds
2024-04-13 20:09:40,961:INFO:Declaring metric variables
2024-04-13 20:09:40,969:INFO:Importing untrained model
2024-04-13 20:09:40,979:INFO:Logistic Regression Imported successfully
2024-04-13 20:09:40,993:INFO:Starting cross validation
2024-04-13 20:09:40,995:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:09:47,099:INFO:Calculating mean and std
2024-04-13 20:09:47,102:INFO:Creating metrics dataframe
2024-04-13 20:09:47,108:INFO:Uploading results into container
2024-04-13 20:09:47,109:INFO:Uploading model into container now
2024-04-13 20:09:47,110:INFO:_master_model_container: 1
2024-04-13 20:09:47,110:INFO:_display_container: 2
2024-04-13 20:09:47,111:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6537, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:09:47,111:INFO:create_model() successfully completed......................................
2024-04-13 20:09:47,353:INFO:SubProcess create_model() end ==================================
2024-04-13 20:09:47,354:INFO:Creating metrics dataframe
2024-04-13 20:09:47,362:INFO:Initializing Decision Tree Classifier
2024-04-13 20:09:47,362:INFO:Total runtime is 0.10707241296768188 minutes
2024-04-13 20:09:47,367:INFO:SubProcess create_model() called ==================================
2024-04-13 20:09:47,367:INFO:Initializing create_model()
2024-04-13 20:09:47,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E4FA2500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:09:47,367:INFO:Checking exceptions
2024-04-13 20:09:47,368:INFO:Importing libraries
2024-04-13 20:09:47,368:INFO:Copying training dataset
2024-04-13 20:09:47,377:INFO:Defining folds
2024-04-13 20:09:47,377:INFO:Declaring metric variables
2024-04-13 20:09:47,381:INFO:Importing untrained model
2024-04-13 20:09:47,386:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:09:47,394:INFO:Starting cross validation
2024-04-13 20:09:47,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:09:50,845:INFO:Calculating mean and std
2024-04-13 20:09:50,848:INFO:Creating metrics dataframe
2024-04-13 20:09:50,851:INFO:Uploading results into container
2024-04-13 20:09:50,852:INFO:Uploading model into container now
2024-04-13 20:09:50,853:INFO:_master_model_container: 2
2024-04-13 20:09:50,854:INFO:_display_container: 2
2024-04-13 20:09:50,854:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6537, splitter='best')
2024-04-13 20:09:50,855:INFO:create_model() successfully completed......................................
2024-04-13 20:09:51,124:INFO:SubProcess create_model() end ==================================
2024-04-13 20:09:51,124:INFO:Creating metrics dataframe
2024-04-13 20:09:51,145:INFO:Initializing create_model()
2024-04-13 20:09:51,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6537, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:09:51,146:INFO:Checking exceptions
2024-04-13 20:09:51,148:INFO:Importing libraries
2024-04-13 20:09:51,148:INFO:Copying training dataset
2024-04-13 20:09:51,156:INFO:Defining folds
2024-04-13 20:09:51,156:INFO:Declaring metric variables
2024-04-13 20:09:51,157:INFO:Importing untrained model
2024-04-13 20:09:51,157:INFO:Declaring custom model
2024-04-13 20:09:51,157:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:09:51,158:INFO:Cross validation set to False
2024-04-13 20:09:51,159:INFO:Fitting Model
2024-04-13 20:09:51,231:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6537, splitter='best')
2024-04-13 20:09:51,231:INFO:create_model() successfully completed......................................
2024-04-13 20:09:51,432:INFO:Initializing create_model()
2024-04-13 20:09:51,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6537, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:09:51,432:INFO:Checking exceptions
2024-04-13 20:09:51,435:INFO:Importing libraries
2024-04-13 20:09:51,435:INFO:Copying training dataset
2024-04-13 20:09:51,443:INFO:Defining folds
2024-04-13 20:09:51,443:INFO:Declaring metric variables
2024-04-13 20:09:51,443:INFO:Importing untrained model
2024-04-13 20:09:51,443:INFO:Declaring custom model
2024-04-13 20:09:51,444:INFO:Logistic Regression Imported successfully
2024-04-13 20:09:51,445:INFO:Cross validation set to False
2024-04-13 20:09:51,445:INFO:Fitting Model
2024-04-13 20:09:51,470:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6537, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:09:51,470:INFO:create_model() successfully completed......................................
2024-04-13 20:09:51,684:INFO:_master_model_container: 2
2024-04-13 20:09:51,684:INFO:_display_container: 2
2024-04-13 20:09:51,685:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6537, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6537, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:09:51,686:INFO:compare_models() successfully completed......................................
2024-04-13 20:09:51,687:INFO:Initializing predict_model()
2024-04-13 20:09:51,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E921D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6537, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEE825F0>)
2024-04-13 20:09:51,687:INFO:Checking exceptions
2024-04-13 20:09:51,687:INFO:Preloading libraries
2024-04-13 20:10:17,559:INFO:PyCaret ClassificationExperiment
2024-04-13 20:10:17,559:INFO:Logging name: clf-default-name
2024-04-13 20:10:17,559:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:10:17,559:INFO:version 3.3.0
2024-04-13 20:10:17,559:INFO:Initializing setup()
2024-04-13 20:10:17,559:INFO:self.USI: 057d
2024-04-13 20:10:17,560:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 20:10:17,560:INFO:Checking environment
2024-04-13 20:10:17,560:INFO:python_version: 3.10.14
2024-04-13 20:10:17,560:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:10:17,560:INFO:machine: AMD64
2024-04-13 20:10:17,560:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 20:10:17,566:INFO:Memory: svmem(total=17131573248, available=3469365248, percent=79.7, used=13662208000, free=3469365248)
2024-04-13 20:10:17,566:INFO:Physical Core: 8
2024-04-13 20:10:17,566:INFO:Logical Core: 16
2024-04-13 20:10:17,566:INFO:Checking libraries
2024-04-13 20:10:17,566:INFO:System:
2024-04-13 20:10:17,566:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:10:17,567:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 20:10:17,567:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 20:10:17,567:INFO:PyCaret required dependencies:
2024-04-13 20:10:17,567:INFO:                 pip: 23.3.1
2024-04-13 20:10:17,567:INFO:          setuptools: 68.2.2
2024-04-13 20:10:17,567:INFO:             pycaret: 3.3.0
2024-04-13 20:10:17,567:INFO:             IPython: 8.23.0
2024-04-13 20:10:17,567:INFO:          ipywidgets: 8.1.2
2024-04-13 20:10:17,567:INFO:                tqdm: 4.66.2
2024-04-13 20:10:17,567:INFO:               numpy: 1.26.4
2024-04-13 20:10:17,567:INFO:              pandas: 2.1.4
2024-04-13 20:10:17,567:INFO:              jinja2: 3.1.3
2024-04-13 20:10:17,567:INFO:               scipy: 1.11.4
2024-04-13 20:10:17,568:INFO:              joblib: 1.3.2
2024-04-13 20:10:17,568:INFO:             sklearn: 1.4.1.post1
2024-04-13 20:10:17,568:INFO:                pyod: 1.1.3
2024-04-13 20:10:17,568:INFO:            imblearn: 0.12.2
2024-04-13 20:10:17,568:INFO:   category_encoders: 2.6.3
2024-04-13 20:10:17,568:INFO:            lightgbm: 4.3.0
2024-04-13 20:10:17,568:INFO:               numba: 0.59.1
2024-04-13 20:10:17,568:INFO:            requests: 2.31.0
2024-04-13 20:10:17,568:INFO:          matplotlib: 3.7.5
2024-04-13 20:10:17,568:INFO:          scikitplot: 0.3.7
2024-04-13 20:10:17,568:INFO:         yellowbrick: 1.5
2024-04-13 20:10:17,568:INFO:              plotly: 5.20.0
2024-04-13 20:10:17,568:INFO:    plotly-resampler: Not installed
2024-04-13 20:10:17,568:INFO:             kaleido: 0.2.1
2024-04-13 20:10:17,569:INFO:           schemdraw: 0.15
2024-04-13 20:10:17,569:INFO:         statsmodels: 0.14.1
2024-04-13 20:10:17,569:INFO:              sktime: 0.28.0
2024-04-13 20:10:17,569:INFO:               tbats: 1.1.3
2024-04-13 20:10:17,569:INFO:            pmdarima: 2.0.4
2024-04-13 20:10:17,569:INFO:              psutil: 5.9.8
2024-04-13 20:10:17,569:INFO:          markupsafe: 2.1.5
2024-04-13 20:10:17,569:INFO:             pickle5: Not installed
2024-04-13 20:10:17,569:INFO:         cloudpickle: 3.0.0
2024-04-13 20:10:17,569:INFO:         deprecation: 2.1.0
2024-04-13 20:10:17,569:INFO:              xxhash: 3.4.1
2024-04-13 20:10:17,569:INFO:           wurlitzer: 3.0.3
2024-04-13 20:10:17,569:INFO:PyCaret optional dependencies:
2024-04-13 20:10:17,569:INFO:                shap: Not installed
2024-04-13 20:10:17,570:INFO:           interpret: Not installed
2024-04-13 20:10:17,570:INFO:                umap: Not installed
2024-04-13 20:10:17,570:INFO:     ydata_profiling: Not installed
2024-04-13 20:10:17,570:INFO:  explainerdashboard: Not installed
2024-04-13 20:10:17,570:INFO:             autoviz: Not installed
2024-04-13 20:10:17,570:INFO:           fairlearn: Not installed
2024-04-13 20:10:17,570:INFO:          deepchecks: Not installed
2024-04-13 20:10:17,570:INFO:             xgboost: Not installed
2024-04-13 20:10:17,570:INFO:            catboost: Not installed
2024-04-13 20:10:17,570:INFO:              kmodes: Not installed
2024-04-13 20:10:17,570:INFO:             mlxtend: Not installed
2024-04-13 20:10:17,570:INFO:       statsforecast: Not installed
2024-04-13 20:10:17,570:INFO:        tune_sklearn: Not installed
2024-04-13 20:10:17,570:INFO:                 ray: Not installed
2024-04-13 20:10:17,570:INFO:            hyperopt: Not installed
2024-04-13 20:10:17,571:INFO:              optuna: Not installed
2024-04-13 20:10:17,571:INFO:               skopt: Not installed
2024-04-13 20:10:17,571:INFO:              mlflow: 2.11.3
2024-04-13 20:10:17,571:INFO:              gradio: Not installed
2024-04-13 20:10:17,571:INFO:             fastapi: Not installed
2024-04-13 20:10:17,571:INFO:             uvicorn: Not installed
2024-04-13 20:10:17,571:INFO:              m2cgen: Not installed
2024-04-13 20:10:17,571:INFO:           evidently: Not installed
2024-04-13 20:10:17,571:INFO:               fugue: Not installed
2024-04-13 20:10:17,571:INFO:           streamlit: 1.33.0
2024-04-13 20:10:17,571:INFO:             prophet: Not installed
2024-04-13 20:10:17,571:INFO:None
2024-04-13 20:10:17,571:INFO:Set up data.
2024-04-13 20:10:17,577:INFO:Set up folding strategy.
2024-04-13 20:10:17,577:INFO:Set up train/test split.
2024-04-13 20:10:17,577:INFO:Set up data.
2024-04-13 20:10:17,582:INFO:Set up index.
2024-04-13 20:10:17,583:INFO:Assigning column types.
2024-04-13 20:10:17,588:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:10:17,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:10:17,659:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:10:17,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:17,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:17,772:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:10:17,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:10:17,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:17,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:17,817:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:10:17,887:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:10:17,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:17,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:10:18,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,044:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:10:18,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,272:INFO:Preparing preprocessing pipeline...
2024-04-13 20:10:18,274:INFO:Set up simple imputation.
2024-04-13 20:10:18,274:INFO:Set up feature normalization.
2024-04-13 20:10:18,313:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:10:18,320:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:10:18,321:INFO:Creating final display dataframe.
2024-04-13 20:10:18,455:INFO:Setup _display_container:                     Description             Value
0                    Session id              7616
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              057d
2024-04-13 20:10:18,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:10:18,692:INFO:setup() successfully completed in 1.14s...............
2024-04-13 20:10:18,694:INFO:Initializing compare_models()
2024-04-13 20:10:18,694:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:10:18,694:INFO:Checking exceptions
2024-04-13 20:10:18,700:INFO:Preparing display monitor
2024-04-13 20:10:18,727:INFO:Initializing Logistic Regression
2024-04-13 20:10:18,727:INFO:Total runtime is 0.0 minutes
2024-04-13 20:10:18,731:INFO:SubProcess create_model() called ==================================
2024-04-13 20:10:18,732:INFO:Initializing create_model()
2024-04-13 20:10:18,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161D71A1450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:10:18,732:INFO:Checking exceptions
2024-04-13 20:10:18,732:INFO:Importing libraries
2024-04-13 20:10:18,732:INFO:Copying training dataset
2024-04-13 20:10:18,741:INFO:Defining folds
2024-04-13 20:10:18,741:INFO:Declaring metric variables
2024-04-13 20:10:18,746:INFO:Importing untrained model
2024-04-13 20:10:18,751:INFO:Logistic Regression Imported successfully
2024-04-13 20:10:18,759:INFO:Starting cross validation
2024-04-13 20:10:18,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:10:23,944:INFO:Calculating mean and std
2024-04-13 20:10:23,946:INFO:Creating metrics dataframe
2024-04-13 20:10:23,951:INFO:Uploading results into container
2024-04-13 20:10:23,952:INFO:Uploading model into container now
2024-04-13 20:10:23,954:INFO:_master_model_container: 1
2024-04-13 20:10:23,954:INFO:_display_container: 2
2024-04-13 20:10:23,956:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7616, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:10:23,956:INFO:create_model() successfully completed......................................
2024-04-13 20:10:24,174:INFO:SubProcess create_model() end ==================================
2024-04-13 20:10:24,174:INFO:Creating metrics dataframe
2024-04-13 20:10:24,183:INFO:Initializing Decision Tree Classifier
2024-04-13 20:10:24,183:INFO:Total runtime is 0.09093260367711385 minutes
2024-04-13 20:10:24,187:INFO:SubProcess create_model() called ==================================
2024-04-13 20:10:24,187:INFO:Initializing create_model()
2024-04-13 20:10:24,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161D71A1450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:10:24,188:INFO:Checking exceptions
2024-04-13 20:10:24,188:INFO:Importing libraries
2024-04-13 20:10:24,188:INFO:Copying training dataset
2024-04-13 20:10:24,197:INFO:Defining folds
2024-04-13 20:10:24,197:INFO:Declaring metric variables
2024-04-13 20:10:24,201:INFO:Importing untrained model
2024-04-13 20:10:24,205:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:10:24,214:INFO:Starting cross validation
2024-04-13 20:10:24,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:10:27,566:INFO:Calculating mean and std
2024-04-13 20:10:27,570:INFO:Creating metrics dataframe
2024-04-13 20:10:27,573:INFO:Uploading results into container
2024-04-13 20:10:27,574:INFO:Uploading model into container now
2024-04-13 20:10:27,575:INFO:_master_model_container: 2
2024-04-13 20:10:27,575:INFO:_display_container: 2
2024-04-13 20:10:27,576:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7616, splitter='best')
2024-04-13 20:10:27,576:INFO:create_model() successfully completed......................................
2024-04-13 20:10:27,816:INFO:SubProcess create_model() end ==================================
2024-04-13 20:10:27,816:INFO:Creating metrics dataframe
2024-04-13 20:10:27,837:INFO:Initializing create_model()
2024-04-13 20:10:27,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7616, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:10:27,837:INFO:Checking exceptions
2024-04-13 20:10:27,839:INFO:Importing libraries
2024-04-13 20:10:27,840:INFO:Copying training dataset
2024-04-13 20:10:27,849:INFO:Defining folds
2024-04-13 20:10:27,849:INFO:Declaring metric variables
2024-04-13 20:10:27,849:INFO:Importing untrained model
2024-04-13 20:10:27,849:INFO:Declaring custom model
2024-04-13 20:10:27,850:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:10:27,851:INFO:Cross validation set to False
2024-04-13 20:10:27,852:INFO:Fitting Model
2024-04-13 20:10:27,928:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7616, splitter='best')
2024-04-13 20:10:27,928:INFO:create_model() successfully completed......................................
2024-04-13 20:10:28,128:INFO:Initializing create_model()
2024-04-13 20:10:28,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7616, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:10:28,129:INFO:Checking exceptions
2024-04-13 20:10:28,132:INFO:Importing libraries
2024-04-13 20:10:28,132:INFO:Copying training dataset
2024-04-13 20:10:28,140:INFO:Defining folds
2024-04-13 20:10:28,140:INFO:Declaring metric variables
2024-04-13 20:10:28,140:INFO:Importing untrained model
2024-04-13 20:10:28,140:INFO:Declaring custom model
2024-04-13 20:10:28,141:INFO:Logistic Regression Imported successfully
2024-04-13 20:10:28,142:INFO:Cross validation set to False
2024-04-13 20:10:28,142:INFO:Fitting Model
2024-04-13 20:10:28,166:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7616, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:10:28,166:INFO:create_model() successfully completed......................................
2024-04-13 20:10:28,406:INFO:_master_model_container: 2
2024-04-13 20:10:28,406:INFO:_display_container: 2
2024-04-13 20:10:28,407:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7616, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7616, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:10:28,407:INFO:compare_models() successfully completed......................................
2024-04-13 20:10:28,408:INFO:Initializing predict_model()
2024-04-13 20:10:28,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3E90160>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7616, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E4FDAB90>)
2024-04-13 20:10:28,409:INFO:Checking exceptions
2024-04-13 20:10:28,409:INFO:Preloading libraries
2024-04-13 20:12:33,341:INFO:PyCaret ClassificationExperiment
2024-04-13 20:12:33,341:INFO:Logging name: clf-default-name
2024-04-13 20:12:33,341:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:12:33,341:INFO:version 3.3.0
2024-04-13 20:12:33,341:INFO:Initializing setup()
2024-04-13 20:12:33,341:INFO:self.USI: 41c1
2024-04-13 20:12:33,342:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 20:12:33,342:INFO:Checking environment
2024-04-13 20:12:33,342:INFO:python_version: 3.10.14
2024-04-13 20:12:33,342:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:12:33,342:INFO:machine: AMD64
2024-04-13 20:12:33,342:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 20:12:33,349:INFO:Memory: svmem(total=17131573248, available=3177816064, percent=81.5, used=13953757184, free=3177816064)
2024-04-13 20:12:33,350:INFO:Physical Core: 8
2024-04-13 20:12:33,350:INFO:Logical Core: 16
2024-04-13 20:12:33,350:INFO:Checking libraries
2024-04-13 20:12:33,350:INFO:System:
2024-04-13 20:12:33,350:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:12:33,350:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 20:12:33,350:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 20:12:33,350:INFO:PyCaret required dependencies:
2024-04-13 20:12:33,350:INFO:                 pip: 23.3.1
2024-04-13 20:12:33,350:INFO:          setuptools: 68.2.2
2024-04-13 20:12:33,350:INFO:             pycaret: 3.3.0
2024-04-13 20:12:33,350:INFO:             IPython: 8.23.0
2024-04-13 20:12:33,351:INFO:          ipywidgets: 8.1.2
2024-04-13 20:12:33,351:INFO:                tqdm: 4.66.2
2024-04-13 20:12:33,351:INFO:               numpy: 1.26.4
2024-04-13 20:12:33,351:INFO:              pandas: 2.1.4
2024-04-13 20:12:33,351:INFO:              jinja2: 3.1.3
2024-04-13 20:12:33,351:INFO:               scipy: 1.11.4
2024-04-13 20:12:33,351:INFO:              joblib: 1.3.2
2024-04-13 20:12:33,351:INFO:             sklearn: 1.4.1.post1
2024-04-13 20:12:33,351:INFO:                pyod: 1.1.3
2024-04-13 20:12:33,351:INFO:            imblearn: 0.12.2
2024-04-13 20:12:33,351:INFO:   category_encoders: 2.6.3
2024-04-13 20:12:33,351:INFO:            lightgbm: 4.3.0
2024-04-13 20:12:33,351:INFO:               numba: 0.59.1
2024-04-13 20:12:33,351:INFO:            requests: 2.31.0
2024-04-13 20:12:33,351:INFO:          matplotlib: 3.7.5
2024-04-13 20:12:33,351:INFO:          scikitplot: 0.3.7
2024-04-13 20:12:33,352:INFO:         yellowbrick: 1.5
2024-04-13 20:12:33,352:INFO:              plotly: 5.20.0
2024-04-13 20:12:33,352:INFO:    plotly-resampler: Not installed
2024-04-13 20:12:33,352:INFO:             kaleido: 0.2.1
2024-04-13 20:12:33,352:INFO:           schemdraw: 0.15
2024-04-13 20:12:33,352:INFO:         statsmodels: 0.14.1
2024-04-13 20:12:33,352:INFO:              sktime: 0.28.0
2024-04-13 20:12:33,352:INFO:               tbats: 1.1.3
2024-04-13 20:12:33,352:INFO:            pmdarima: 2.0.4
2024-04-13 20:12:33,352:INFO:              psutil: 5.9.8
2024-04-13 20:12:33,352:INFO:          markupsafe: 2.1.5
2024-04-13 20:12:33,352:INFO:             pickle5: Not installed
2024-04-13 20:12:33,352:INFO:         cloudpickle: 3.0.0
2024-04-13 20:12:33,352:INFO:         deprecation: 2.1.0
2024-04-13 20:12:33,352:INFO:              xxhash: 3.4.1
2024-04-13 20:12:33,353:INFO:           wurlitzer: 3.0.3
2024-04-13 20:12:33,353:INFO:PyCaret optional dependencies:
2024-04-13 20:12:33,353:INFO:                shap: Not installed
2024-04-13 20:12:33,353:INFO:           interpret: Not installed
2024-04-13 20:12:33,353:INFO:                umap: Not installed
2024-04-13 20:12:33,353:INFO:     ydata_profiling: Not installed
2024-04-13 20:12:33,353:INFO:  explainerdashboard: Not installed
2024-04-13 20:12:33,353:INFO:             autoviz: Not installed
2024-04-13 20:12:33,353:INFO:           fairlearn: Not installed
2024-04-13 20:12:33,353:INFO:          deepchecks: Not installed
2024-04-13 20:12:33,353:INFO:             xgboost: Not installed
2024-04-13 20:12:33,353:INFO:            catboost: Not installed
2024-04-13 20:12:33,353:INFO:              kmodes: Not installed
2024-04-13 20:12:33,353:INFO:             mlxtend: Not installed
2024-04-13 20:12:33,354:INFO:       statsforecast: Not installed
2024-04-13 20:12:33,354:INFO:        tune_sklearn: Not installed
2024-04-13 20:12:33,354:INFO:                 ray: Not installed
2024-04-13 20:12:33,354:INFO:            hyperopt: Not installed
2024-04-13 20:12:33,354:INFO:              optuna: Not installed
2024-04-13 20:12:33,354:INFO:               skopt: Not installed
2024-04-13 20:12:33,354:INFO:              mlflow: 2.11.3
2024-04-13 20:12:33,354:INFO:              gradio: Not installed
2024-04-13 20:12:33,354:INFO:             fastapi: Not installed
2024-04-13 20:12:33,354:INFO:             uvicorn: Not installed
2024-04-13 20:12:33,354:INFO:              m2cgen: Not installed
2024-04-13 20:12:33,354:INFO:           evidently: Not installed
2024-04-13 20:12:33,354:INFO:               fugue: Not installed
2024-04-13 20:12:33,354:INFO:           streamlit: 1.33.0
2024-04-13 20:12:33,355:INFO:             prophet: Not installed
2024-04-13 20:12:33,355:INFO:None
2024-04-13 20:12:33,355:INFO:Set up data.
2024-04-13 20:12:33,360:INFO:Set up folding strategy.
2024-04-13 20:12:33,360:INFO:Set up train/test split.
2024-04-13 20:12:33,361:INFO:Set up data.
2024-04-13 20:12:33,366:INFO:Set up index.
2024-04-13 20:12:33,366:INFO:Assigning column types.
2024-04-13 20:12:33,372:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:12:33,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:12:33,457:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:12:33,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,571:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:12:33,572:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:12:33,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,617:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:12:33,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:12:33,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,799:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:12:33,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,843:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:12:33,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:33,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,069:INFO:Preparing preprocessing pipeline...
2024-04-13 20:12:34,071:INFO:Set up simple imputation.
2024-04-13 20:12:34,071:INFO:Set up feature normalization.
2024-04-13 20:12:34,111:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:12:34,118:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:12:34,118:INFO:Creating final display dataframe.
2024-04-13 20:12:34,252:INFO:Setup _display_container:                     Description             Value
0                    Session id              6892
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              41c1
2024-04-13 20:12:34,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:12:34,488:INFO:setup() successfully completed in 1.15s...............
2024-04-13 20:12:34,490:INFO:Initializing compare_models()
2024-04-13 20:12:34,490:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:12:34,490:INFO:Checking exceptions
2024-04-13 20:12:34,495:INFO:Preparing display monitor
2024-04-13 20:12:34,522:INFO:Initializing Logistic Regression
2024-04-13 20:12:34,522:INFO:Total runtime is 0.0 minutes
2024-04-13 20:12:34,526:INFO:SubProcess create_model() called ==================================
2024-04-13 20:12:34,526:INFO:Initializing create_model()
2024-04-13 20:12:34,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEEC7190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:12:34,526:INFO:Checking exceptions
2024-04-13 20:12:34,527:INFO:Importing libraries
2024-04-13 20:12:34,527:INFO:Copying training dataset
2024-04-13 20:12:34,537:INFO:Defining folds
2024-04-13 20:12:34,537:INFO:Declaring metric variables
2024-04-13 20:12:34,542:INFO:Importing untrained model
2024-04-13 20:12:34,547:INFO:Logistic Regression Imported successfully
2024-04-13 20:12:34,556:INFO:Starting cross validation
2024-04-13 20:12:34,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:12:39,677:INFO:Calculating mean and std
2024-04-13 20:12:39,682:INFO:Creating metrics dataframe
2024-04-13 20:12:39,688:INFO:Uploading results into container
2024-04-13 20:12:39,689:INFO:Uploading model into container now
2024-04-13 20:12:39,690:INFO:_master_model_container: 1
2024-04-13 20:12:39,691:INFO:_display_container: 2
2024-04-13 20:12:39,692:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6892, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:12:39,692:INFO:create_model() successfully completed......................................
2024-04-13 20:12:39,950:INFO:SubProcess create_model() end ==================================
2024-04-13 20:12:39,950:INFO:Creating metrics dataframe
2024-04-13 20:12:39,959:INFO:Initializing Decision Tree Classifier
2024-04-13 20:12:39,959:INFO:Total runtime is 0.0906245986620585 minutes
2024-04-13 20:12:39,963:INFO:SubProcess create_model() called ==================================
2024-04-13 20:12:39,963:INFO:Initializing create_model()
2024-04-13 20:12:39,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161DEEC7190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:12:39,964:INFO:Checking exceptions
2024-04-13 20:12:39,964:INFO:Importing libraries
2024-04-13 20:12:39,964:INFO:Copying training dataset
2024-04-13 20:12:39,973:INFO:Defining folds
2024-04-13 20:12:39,973:INFO:Declaring metric variables
2024-04-13 20:12:39,977:INFO:Importing untrained model
2024-04-13 20:12:39,982:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:12:39,990:INFO:Starting cross validation
2024-04-13 20:12:39,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:12:43,516:INFO:Calculating mean and std
2024-04-13 20:12:43,518:INFO:Creating metrics dataframe
2024-04-13 20:12:43,521:INFO:Uploading results into container
2024-04-13 20:12:43,523:INFO:Uploading model into container now
2024-04-13 20:12:43,524:INFO:_master_model_container: 2
2024-04-13 20:12:43,524:INFO:_display_container: 2
2024-04-13 20:12:43,525:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6892, splitter='best')
2024-04-13 20:12:43,525:INFO:create_model() successfully completed......................................
2024-04-13 20:12:43,746:INFO:SubProcess create_model() end ==================================
2024-04-13 20:12:43,746:INFO:Creating metrics dataframe
2024-04-13 20:12:43,766:INFO:Initializing create_model()
2024-04-13 20:12:43,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6892, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:12:43,767:INFO:Checking exceptions
2024-04-13 20:12:43,769:INFO:Importing libraries
2024-04-13 20:12:43,769:INFO:Copying training dataset
2024-04-13 20:12:43,777:INFO:Defining folds
2024-04-13 20:12:43,777:INFO:Declaring metric variables
2024-04-13 20:12:43,777:INFO:Importing untrained model
2024-04-13 20:12:43,778:INFO:Declaring custom model
2024-04-13 20:12:43,778:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:12:43,779:INFO:Cross validation set to False
2024-04-13 20:12:43,780:INFO:Fitting Model
2024-04-13 20:12:43,855:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6892, splitter='best')
2024-04-13 20:12:43,855:INFO:create_model() successfully completed......................................
2024-04-13 20:12:44,106:INFO:Initializing create_model()
2024-04-13 20:12:44,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6892, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:12:44,106:INFO:Checking exceptions
2024-04-13 20:12:44,108:INFO:Importing libraries
2024-04-13 20:12:44,109:INFO:Copying training dataset
2024-04-13 20:12:44,117:INFO:Defining folds
2024-04-13 20:12:44,117:INFO:Declaring metric variables
2024-04-13 20:12:44,118:INFO:Importing untrained model
2024-04-13 20:12:44,118:INFO:Declaring custom model
2024-04-13 20:12:44,118:INFO:Logistic Regression Imported successfully
2024-04-13 20:12:44,119:INFO:Cross validation set to False
2024-04-13 20:12:44,120:INFO:Fitting Model
2024-04-13 20:12:44,144:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6892, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:12:44,144:INFO:create_model() successfully completed......................................
2024-04-13 20:12:44,365:INFO:_master_model_container: 2
2024-04-13 20:12:44,365:INFO:_display_container: 2
2024-04-13 20:12:44,366:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6892, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6892, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:12:44,366:INFO:compare_models() successfully completed......................................
2024-04-13 20:12:44,367:INFO:Initializing predict_model()
2024-04-13 20:12:44,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3AC4B50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6892, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DA254550>)
2024-04-13 20:12:44,367:INFO:Checking exceptions
2024-04-13 20:12:44,367:INFO:Preloading libraries
2024-04-13 20:18:14,088:INFO:PyCaret ClassificationExperiment
2024-04-13 20:18:14,088:INFO:Logging name: clf-default-name
2024-04-13 20:18:14,088:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:18:14,088:INFO:version 3.3.0
2024-04-13 20:18:14,088:INFO:Initializing setup()
2024-04-13 20:18:14,088:INFO:self.USI: 4e26
2024-04-13 20:18:14,089:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 20:18:14,089:INFO:Checking environment
2024-04-13 20:18:14,089:INFO:python_version: 3.10.14
2024-04-13 20:18:14,089:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:18:14,089:INFO:machine: AMD64
2024-04-13 20:18:14,089:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 20:18:14,095:INFO:Memory: svmem(total=17131573248, available=3005898752, percent=82.5, used=14125674496, free=3005898752)
2024-04-13 20:18:14,095:INFO:Physical Core: 8
2024-04-13 20:18:14,095:INFO:Logical Core: 16
2024-04-13 20:18:14,095:INFO:Checking libraries
2024-04-13 20:18:14,095:INFO:System:
2024-04-13 20:18:14,096:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:18:14,096:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 20:18:14,096:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 20:18:14,096:INFO:PyCaret required dependencies:
2024-04-13 20:18:14,096:INFO:                 pip: 23.3.1
2024-04-13 20:18:14,096:INFO:          setuptools: 68.2.2
2024-04-13 20:18:14,096:INFO:             pycaret: 3.3.0
2024-04-13 20:18:14,096:INFO:             IPython: 8.23.0
2024-04-13 20:18:14,096:INFO:          ipywidgets: 8.1.2
2024-04-13 20:18:14,096:INFO:                tqdm: 4.66.2
2024-04-13 20:18:14,096:INFO:               numpy: 1.26.4
2024-04-13 20:18:14,096:INFO:              pandas: 2.1.4
2024-04-13 20:18:14,096:INFO:              jinja2: 3.1.3
2024-04-13 20:18:14,096:INFO:               scipy: 1.11.4
2024-04-13 20:18:14,097:INFO:              joblib: 1.3.2
2024-04-13 20:18:14,097:INFO:             sklearn: 1.4.1.post1
2024-04-13 20:18:14,097:INFO:                pyod: 1.1.3
2024-04-13 20:18:14,097:INFO:            imblearn: 0.12.2
2024-04-13 20:18:14,097:INFO:   category_encoders: 2.6.3
2024-04-13 20:18:14,097:INFO:            lightgbm: 4.3.0
2024-04-13 20:18:14,097:INFO:               numba: 0.59.1
2024-04-13 20:18:14,097:INFO:            requests: 2.31.0
2024-04-13 20:18:14,097:INFO:          matplotlib: 3.7.5
2024-04-13 20:18:14,097:INFO:          scikitplot: 0.3.7
2024-04-13 20:18:14,097:INFO:         yellowbrick: 1.5
2024-04-13 20:18:14,097:INFO:              plotly: 5.20.0
2024-04-13 20:18:14,097:INFO:    plotly-resampler: Not installed
2024-04-13 20:18:14,097:INFO:             kaleido: 0.2.1
2024-04-13 20:18:14,097:INFO:           schemdraw: 0.15
2024-04-13 20:18:14,098:INFO:         statsmodels: 0.14.1
2024-04-13 20:18:14,098:INFO:              sktime: 0.28.0
2024-04-13 20:18:14,098:INFO:               tbats: 1.1.3
2024-04-13 20:18:14,098:INFO:            pmdarima: 2.0.4
2024-04-13 20:18:14,098:INFO:              psutil: 5.9.8
2024-04-13 20:18:14,098:INFO:          markupsafe: 2.1.5
2024-04-13 20:18:14,098:INFO:             pickle5: Not installed
2024-04-13 20:18:14,098:INFO:         cloudpickle: 3.0.0
2024-04-13 20:18:14,098:INFO:         deprecation: 2.1.0
2024-04-13 20:18:14,098:INFO:              xxhash: 3.4.1
2024-04-13 20:18:14,098:INFO:           wurlitzer: 3.0.3
2024-04-13 20:18:14,098:INFO:PyCaret optional dependencies:
2024-04-13 20:18:14,098:INFO:                shap: Not installed
2024-04-13 20:18:14,098:INFO:           interpret: Not installed
2024-04-13 20:18:14,099:INFO:                umap: Not installed
2024-04-13 20:18:14,099:INFO:     ydata_profiling: Not installed
2024-04-13 20:18:14,099:INFO:  explainerdashboard: Not installed
2024-04-13 20:18:14,099:INFO:             autoviz: Not installed
2024-04-13 20:18:14,099:INFO:           fairlearn: Not installed
2024-04-13 20:18:14,099:INFO:          deepchecks: Not installed
2024-04-13 20:18:14,099:INFO:             xgboost: Not installed
2024-04-13 20:18:14,099:INFO:            catboost: Not installed
2024-04-13 20:18:14,099:INFO:              kmodes: Not installed
2024-04-13 20:18:14,099:INFO:             mlxtend: Not installed
2024-04-13 20:18:14,099:INFO:       statsforecast: Not installed
2024-04-13 20:18:14,099:INFO:        tune_sklearn: Not installed
2024-04-13 20:18:14,099:INFO:                 ray: Not installed
2024-04-13 20:18:14,099:INFO:            hyperopt: Not installed
2024-04-13 20:18:14,099:INFO:              optuna: Not installed
2024-04-13 20:18:14,100:INFO:               skopt: Not installed
2024-04-13 20:18:14,100:INFO:              mlflow: 2.11.3
2024-04-13 20:18:14,100:INFO:              gradio: Not installed
2024-04-13 20:18:14,100:INFO:             fastapi: Not installed
2024-04-13 20:18:14,100:INFO:             uvicorn: Not installed
2024-04-13 20:18:14,100:INFO:              m2cgen: Not installed
2024-04-13 20:18:14,100:INFO:           evidently: Not installed
2024-04-13 20:18:14,100:INFO:               fugue: Not installed
2024-04-13 20:18:14,100:INFO:           streamlit: 1.33.0
2024-04-13 20:18:14,100:INFO:             prophet: Not installed
2024-04-13 20:18:14,100:INFO:None
2024-04-13 20:18:14,100:INFO:Set up data.
2024-04-13 20:18:14,106:INFO:Set up folding strategy.
2024-04-13 20:18:14,106:INFO:Set up train/test split.
2024-04-13 20:18:14,106:INFO:Set up data.
2024-04-13 20:18:14,112:INFO:Set up index.
2024-04-13 20:18:14,113:INFO:Assigning column types.
2024-04-13 20:18:14,118:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:18:14,188:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:18:14,189:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:18:14,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:18:14,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:18:14,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,346:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:18:14,415:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:18:14,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:18:14,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,572:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:18:14,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:14,798:INFO:Preparing preprocessing pipeline...
2024-04-13 20:18:14,800:INFO:Set up simple imputation.
2024-04-13 20:18:14,800:INFO:Set up feature normalization.
2024-04-13 20:18:14,839:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:18:14,847:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:18:14,847:INFO:Creating final display dataframe.
2024-04-13 20:18:14,981:INFO:Setup _display_container:                     Description             Value
0                    Session id              4085
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4e26
2024-04-13 20:18:15,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:15,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:15,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:15,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:18:15,214:INFO:setup() successfully completed in 1.13s...............
2024-04-13 20:18:15,216:INFO:Initializing compare_models()
2024-04-13 20:18:15,216:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:18:15,216:INFO:Checking exceptions
2024-04-13 20:18:15,221:INFO:Preparing display monitor
2024-04-13 20:18:15,246:INFO:Initializing Logistic Regression
2024-04-13 20:18:15,246:INFO:Total runtime is 0.0 minutes
2024-04-13 20:18:15,251:INFO:SubProcess create_model() called ==================================
2024-04-13 20:18:15,251:INFO:Initializing create_model()
2024-04-13 20:18:15,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3AC42E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:18:15,251:INFO:Checking exceptions
2024-04-13 20:18:15,251:INFO:Importing libraries
2024-04-13 20:18:15,252:INFO:Copying training dataset
2024-04-13 20:18:15,261:INFO:Defining folds
2024-04-13 20:18:15,261:INFO:Declaring metric variables
2024-04-13 20:18:15,266:INFO:Importing untrained model
2024-04-13 20:18:15,270:INFO:Logistic Regression Imported successfully
2024-04-13 20:18:15,280:INFO:Starting cross validation
2024-04-13 20:18:15,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:18:20,117:INFO:Calculating mean and std
2024-04-13 20:18:20,121:INFO:Creating metrics dataframe
2024-04-13 20:18:20,126:INFO:Uploading results into container
2024-04-13 20:18:20,128:INFO:Uploading model into container now
2024-04-13 20:18:20,128:INFO:_master_model_container: 1
2024-04-13 20:18:20,128:INFO:_display_container: 2
2024-04-13 20:18:20,129:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4085, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:18:20,130:INFO:create_model() successfully completed......................................
2024-04-13 20:18:20,348:INFO:SubProcess create_model() end ==================================
2024-04-13 20:18:20,348:INFO:Creating metrics dataframe
2024-04-13 20:18:20,357:INFO:Initializing Decision Tree Classifier
2024-04-13 20:18:20,358:INFO:Total runtime is 0.08519405523935954 minutes
2024-04-13 20:18:20,362:INFO:SubProcess create_model() called ==================================
2024-04-13 20:18:20,362:INFO:Initializing create_model()
2024-04-13 20:18:20,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3AC42E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:18:20,363:INFO:Checking exceptions
2024-04-13 20:18:20,363:INFO:Importing libraries
2024-04-13 20:18:20,363:INFO:Copying training dataset
2024-04-13 20:18:20,372:INFO:Defining folds
2024-04-13 20:18:20,372:INFO:Declaring metric variables
2024-04-13 20:18:20,377:INFO:Importing untrained model
2024-04-13 20:18:20,381:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:18:20,389:INFO:Starting cross validation
2024-04-13 20:18:20,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:18:23,664:INFO:Calculating mean and std
2024-04-13 20:18:23,667:INFO:Creating metrics dataframe
2024-04-13 20:18:23,670:INFO:Uploading results into container
2024-04-13 20:18:23,671:INFO:Uploading model into container now
2024-04-13 20:18:23,672:INFO:_master_model_container: 2
2024-04-13 20:18:23,672:INFO:_display_container: 2
2024-04-13 20:18:23,673:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best')
2024-04-13 20:18:23,673:INFO:create_model() successfully completed......................................
2024-04-13 20:18:23,886:INFO:SubProcess create_model() end ==================================
2024-04-13 20:18:23,886:INFO:Creating metrics dataframe
2024-04-13 20:18:23,906:INFO:Initializing create_model()
2024-04-13 20:18:23,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:18:23,907:INFO:Checking exceptions
2024-04-13 20:18:23,909:INFO:Importing libraries
2024-04-13 20:18:23,909:INFO:Copying training dataset
2024-04-13 20:18:23,918:INFO:Defining folds
2024-04-13 20:18:23,918:INFO:Declaring metric variables
2024-04-13 20:18:23,918:INFO:Importing untrained model
2024-04-13 20:18:23,918:INFO:Declaring custom model
2024-04-13 20:18:23,919:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:18:23,920:INFO:Cross validation set to False
2024-04-13 20:18:23,920:INFO:Fitting Model
2024-04-13 20:18:23,992:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best')
2024-04-13 20:18:23,993:INFO:create_model() successfully completed......................................
2024-04-13 20:18:24,194:INFO:Initializing create_model()
2024-04-13 20:18:24,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4085, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:18:24,194:INFO:Checking exceptions
2024-04-13 20:18:24,196:INFO:Importing libraries
2024-04-13 20:18:24,197:INFO:Copying training dataset
2024-04-13 20:18:24,205:INFO:Defining folds
2024-04-13 20:18:24,205:INFO:Declaring metric variables
2024-04-13 20:18:24,205:INFO:Importing untrained model
2024-04-13 20:18:24,205:INFO:Declaring custom model
2024-04-13 20:18:24,206:INFO:Logistic Regression Imported successfully
2024-04-13 20:18:24,207:INFO:Cross validation set to False
2024-04-13 20:18:24,207:INFO:Fitting Model
2024-04-13 20:18:24,231:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4085, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:18:24,231:INFO:create_model() successfully completed......................................
2024-04-13 20:18:24,444:INFO:_master_model_container: 2
2024-04-13 20:18:24,444:INFO:_display_container: 2
2024-04-13 20:18:24,445:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4085, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:18:24,445:INFO:compare_models() successfully completed......................................
2024-04-13 20:18:24,446:INFO:Initializing predict_model()
2024-04-13 20:18:24,446:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4085, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEC56B90>)
2024-04-13 20:18:24,446:INFO:Checking exceptions
2024-04-13 20:18:24,447:INFO:Preloading libraries
2024-04-13 20:18:25,806:INFO:Initializing predict_model()
2024-04-13 20:18:25,806:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E4FCE8C0>)
2024-04-13 20:18:25,806:INFO:Checking exceptions
2024-04-13 20:18:25,806:INFO:Preloading libraries
2024-04-13 20:18:26,840:INFO:Initializing tune_model()
2024-04-13 20:18:26,840:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>)
2024-04-13 20:18:26,840:INFO:Checking exceptions
2024-04-13 20:18:26,860:INFO:Copying training dataset
2024-04-13 20:18:26,866:INFO:Checking base model
2024-04-13 20:18:26,866:INFO:Base model : Decision Tree Classifier
2024-04-13 20:18:26,871:INFO:Declaring metric variables
2024-04-13 20:18:26,875:INFO:Defining Hyperparameters
2024-04-13 20:18:27,083:INFO:Tuning with n_jobs=-1
2024-04-13 20:18:27,083:INFO:Initializing RandomizedSearchCV
2024-04-13 20:18:27,356:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2024-04-13 20:18:27,356:INFO:Hyperparameter search completed
2024-04-13 20:18:27,356:INFO:SubProcess create_model() called ==================================
2024-04-13 20:18:27,357:INFO:Initializing create_model()
2024-04-13 20:18:27,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E51E7850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.001, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'entropy'})
2024-04-13 20:18:27,357:INFO:Checking exceptions
2024-04-13 20:18:27,357:INFO:Importing libraries
2024-04-13 20:18:27,357:INFO:Copying training dataset
2024-04-13 20:18:27,366:INFO:Defining folds
2024-04-13 20:18:27,366:INFO:Declaring metric variables
2024-04-13 20:18:27,370:INFO:Importing untrained model
2024-04-13 20:18:27,370:INFO:Declaring custom model
2024-04-13 20:18:27,376:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:18:27,384:INFO:Starting cross validation
2024-04-13 20:18:27,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:18:27,511:INFO:Calculating mean and std
2024-04-13 20:18:27,512:INFO:Creating metrics dataframe
2024-04-13 20:18:27,518:INFO:Finalizing model
2024-04-13 20:18:27,541:INFO:Uploading results into container
2024-04-13 20:18:27,542:INFO:Uploading model into container now
2024-04-13 20:18:27,542:INFO:_master_model_container: 3
2024-04-13 20:18:27,542:INFO:_display_container: 5
2024-04-13 20:18:27,543:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best')
2024-04-13 20:18:27,543:INFO:create_model() successfully completed......................................
2024-04-13 20:18:27,741:INFO:SubProcess create_model() end ==================================
2024-04-13 20:18:27,741:INFO:choose_better activated
2024-04-13 20:18:27,745:INFO:SubProcess create_model() called ==================================
2024-04-13 20:18:27,746:INFO:Initializing create_model()
2024-04-13 20:18:27,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:18:27,746:INFO:Checking exceptions
2024-04-13 20:18:27,748:INFO:Importing libraries
2024-04-13 20:18:27,748:INFO:Copying training dataset
2024-04-13 20:18:27,756:INFO:Defining folds
2024-04-13 20:18:27,757:INFO:Declaring metric variables
2024-04-13 20:18:27,757:INFO:Importing untrained model
2024-04-13 20:18:27,757:INFO:Declaring custom model
2024-04-13 20:18:27,758:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:18:27,758:INFO:Starting cross validation
2024-04-13 20:18:27,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:18:27,936:INFO:Calculating mean and std
2024-04-13 20:18:27,937:INFO:Creating metrics dataframe
2024-04-13 20:18:27,939:INFO:Finalizing model
2024-04-13 20:18:28,011:INFO:Uploading results into container
2024-04-13 20:18:28,012:INFO:Uploading model into container now
2024-04-13 20:18:28,012:INFO:_master_model_container: 4
2024-04-13 20:18:28,012:INFO:_display_container: 6
2024-04-13 20:18:28,013:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best')
2024-04-13 20:18:28,013:INFO:create_model() successfully completed......................................
2024-04-13 20:18:28,206:INFO:SubProcess create_model() end ==================================
2024-04-13 20:18:28,207:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best') result for F1 is 0.5484
2024-04-13 20:18:28,208:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best') result for F1 is 0.4349
2024-04-13 20:18:28,208:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best') is best model
2024-04-13 20:18:28,208:INFO:choose_better completed
2024-04-13 20:18:28,209:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 20:18:28,221:INFO:_master_model_container: 4
2024-04-13 20:18:28,221:INFO:_display_container: 5
2024-04-13 20:18:28,222:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best')
2024-04-13 20:18:28,222:INFO:tune_model() successfully completed......................................
2024-04-13 20:18:28,456:INFO:Initializing predict_model()
2024-04-13 20:18:28,457:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161DEBEAC20>)
2024-04-13 20:18:28,457:INFO:Checking exceptions
2024-04-13 20:18:28,457:INFO:Preloading libraries
2024-04-13 20:18:28,809:INFO:Initializing finalize_model()
2024-04-13 20:18:28,810:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 20:18:28,810:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best')
2024-04-13 20:18:28,815:INFO:Initializing create_model()
2024-04-13 20:18:28,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E3B09B70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4085, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:18:28,815:INFO:Checking exceptions
2024-04-13 20:18:28,816:INFO:Importing libraries
2024-04-13 20:18:28,817:INFO:Copying training dataset
2024-04-13 20:18:28,817:INFO:Defining folds
2024-04-13 20:18:28,817:INFO:Declaring metric variables
2024-04-13 20:18:28,817:INFO:Importing untrained model
2024-04-13 20:18:28,817:INFO:Declaring custom model
2024-04-13 20:18:28,818:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:18:28,819:INFO:Cross validation set to False
2024-04-13 20:18:28,819:INFO:Fitting Model
2024-04-13 20:18:28,918:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4085,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:18:28,918:INFO:create_model() successfully completed......................................
2024-04-13 20:18:29,115:INFO:_master_model_container: 4
2024-04-13 20:18:29,116:INFO:_display_container: 6
2024-04-13 20:18:29,124:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4085,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:18:29,124:INFO:finalize_model() successfully completed......................................
2024-04-13 20:18:29,337:INFO:Initializing save_model()
2024-04-13 20:18:29,337:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4085,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 20:18:29,337:INFO:Adding model into prep_pipe
2024-04-13 20:18:29,337:WARNING:Only Model saved as it was a pipeline.
2024-04-13 20:18:29,343:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 20:18:29,352:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4085,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:18:29,352:INFO:save_model() successfully completed......................................
2024-04-13 20:18:29,548:INFO:Initializing load_model()
2024-04-13 20:18:29,549:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-13 21:39:30,843:INFO:PyCaret ClassificationExperiment
2024-04-13 21:39:30,843:INFO:Logging name: clf-default-name
2024-04-13 21:39:30,843:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 21:39:30,843:INFO:version 3.3.0
2024-04-13 21:39:30,843:INFO:Initializing setup()
2024-04-13 21:39:30,844:INFO:self.USI: 256f
2024-04-13 21:39:30,844:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'X_train', 'fix_imbalance', 'gpu_param', 'y', 'fold_groups_param', 'exp_name_log', 'html_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'seed', 'logging_param', 'target_param', 'data', 'is_multiclass', '_available_plots', 'log_plots_param', 'fold_generator', '_ml_usecase', 'idx', 'fold_shuffle_param', 'X_test', 'USI', 'X', 'exp_id', 'y_train'}
2024-04-13 21:39:30,844:INFO:Checking environment
2024-04-13 21:39:30,844:INFO:python_version: 3.10.14
2024-04-13 21:39:30,844:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 21:39:30,844:INFO:machine: AMD64
2024-04-13 21:39:30,844:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-13 21:39:30,849:INFO:Memory: svmem(total=17131573248, available=5482156032, percent=68.0, used=11649417216, free=5482156032)
2024-04-13 21:39:30,849:INFO:Physical Core: 8
2024-04-13 21:39:30,850:INFO:Logical Core: 16
2024-04-13 21:39:30,850:INFO:Checking libraries
2024-04-13 21:39:30,850:INFO:System:
2024-04-13 21:39:30,850:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 21:39:30,850:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-13 21:39:30,850:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-13 21:39:30,850:INFO:PyCaret required dependencies:
2024-04-13 21:39:30,850:INFO:                 pip: 23.3.1
2024-04-13 21:39:30,850:INFO:          setuptools: 68.2.2
2024-04-13 21:39:30,850:INFO:             pycaret: 3.3.0
2024-04-13 21:39:30,850:INFO:             IPython: 8.23.0
2024-04-13 21:39:30,851:INFO:          ipywidgets: 8.1.2
2024-04-13 21:39:30,851:INFO:                tqdm: 4.66.2
2024-04-13 21:39:30,851:INFO:               numpy: 1.26.4
2024-04-13 21:39:30,851:INFO:              pandas: 2.1.4
2024-04-13 21:39:30,851:INFO:              jinja2: 3.1.3
2024-04-13 21:39:30,851:INFO:               scipy: 1.11.4
2024-04-13 21:39:30,851:INFO:              joblib: 1.3.2
2024-04-13 21:39:30,851:INFO:             sklearn: 1.4.1.post1
2024-04-13 21:39:30,851:INFO:                pyod: 1.1.3
2024-04-13 21:39:30,851:INFO:            imblearn: 0.12.2
2024-04-13 21:39:30,851:INFO:   category_encoders: 2.6.3
2024-04-13 21:39:30,851:INFO:            lightgbm: 4.3.0
2024-04-13 21:39:30,851:INFO:               numba: 0.59.1
2024-04-13 21:39:30,851:INFO:            requests: 2.31.0
2024-04-13 21:39:30,851:INFO:          matplotlib: 3.7.5
2024-04-13 21:39:30,851:INFO:          scikitplot: 0.3.7
2024-04-13 21:39:30,852:INFO:         yellowbrick: 1.5
2024-04-13 21:39:30,852:INFO:              plotly: 5.20.0
2024-04-13 21:39:30,852:INFO:    plotly-resampler: Not installed
2024-04-13 21:39:30,852:INFO:             kaleido: 0.2.1
2024-04-13 21:39:30,852:INFO:           schemdraw: 0.15
2024-04-13 21:39:30,852:INFO:         statsmodels: 0.14.1
2024-04-13 21:39:30,852:INFO:              sktime: 0.28.0
2024-04-13 21:39:30,852:INFO:               tbats: 1.1.3
2024-04-13 21:39:30,852:INFO:            pmdarima: 2.0.4
2024-04-13 21:39:30,852:INFO:              psutil: 5.9.8
2024-04-13 21:39:30,852:INFO:          markupsafe: 2.1.5
2024-04-13 21:39:30,852:INFO:             pickle5: Not installed
2024-04-13 21:39:30,852:INFO:         cloudpickle: 3.0.0
2024-04-13 21:39:30,853:INFO:         deprecation: 2.1.0
2024-04-13 21:39:30,853:INFO:              xxhash: 3.4.1
2024-04-13 21:39:30,853:INFO:           wurlitzer: 3.0.3
2024-04-13 21:39:30,853:INFO:PyCaret optional dependencies:
2024-04-13 21:39:30,853:INFO:                shap: Not installed
2024-04-13 21:39:30,853:INFO:           interpret: Not installed
2024-04-13 21:39:30,853:INFO:                umap: Not installed
2024-04-13 21:39:30,853:INFO:     ydata_profiling: Not installed
2024-04-13 21:39:30,853:INFO:  explainerdashboard: Not installed
2024-04-13 21:39:30,853:INFO:             autoviz: Not installed
2024-04-13 21:39:30,853:INFO:           fairlearn: Not installed
2024-04-13 21:39:30,853:INFO:          deepchecks: Not installed
2024-04-13 21:39:30,853:INFO:             xgboost: Not installed
2024-04-13 21:39:30,853:INFO:            catboost: Not installed
2024-04-13 21:39:30,853:INFO:              kmodes: Not installed
2024-04-13 21:39:30,854:INFO:             mlxtend: Not installed
2024-04-13 21:39:30,854:INFO:       statsforecast: Not installed
2024-04-13 21:39:30,854:INFO:        tune_sklearn: Not installed
2024-04-13 21:39:30,854:INFO:                 ray: Not installed
2024-04-13 21:39:30,854:INFO:            hyperopt: Not installed
2024-04-13 21:39:30,854:INFO:              optuna: Not installed
2024-04-13 21:39:30,854:INFO:               skopt: Not installed
2024-04-13 21:39:30,854:INFO:              mlflow: 2.11.3
2024-04-13 21:39:30,854:INFO:              gradio: Not installed
2024-04-13 21:39:30,854:INFO:             fastapi: Not installed
2024-04-13 21:39:30,854:INFO:             uvicorn: Not installed
2024-04-13 21:39:30,854:INFO:              m2cgen: Not installed
2024-04-13 21:39:30,854:INFO:           evidently: Not installed
2024-04-13 21:39:30,854:INFO:               fugue: Not installed
2024-04-13 21:39:30,854:INFO:           streamlit: 1.33.0
2024-04-13 21:39:30,855:INFO:             prophet: Not installed
2024-04-13 21:39:30,855:INFO:None
2024-04-13 21:39:30,855:INFO:Set up data.
2024-04-13 21:39:30,864:INFO:Set up folding strategy.
2024-04-13 21:39:30,865:INFO:Set up train/test split.
2024-04-13 21:39:30,865:INFO:Set up data.
2024-04-13 21:39:30,870:INFO:Set up index.
2024-04-13 21:39:30,871:INFO:Assigning column types.
2024-04-13 21:39:30,877:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 21:39:30,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 21:39:30,947:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 21:39:30,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:30,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 21:39:31,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 21:39:31,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,105:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 21:39:31,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 21:39:31,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 21:39:31,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,331:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 21:39:31,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,560:INFO:Preparing preprocessing pipeline...
2024-04-13 21:39:31,561:INFO:Set up simple imputation.
2024-04-13 21:39:31,562:INFO:Set up feature normalization.
2024-04-13 21:39:31,611:INFO:Finished creating preprocessing pipeline.
2024-04-13 21:39:31,618:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 21:39:31,618:INFO:Creating final display dataframe.
2024-04-13 21:39:31,758:INFO:Setup _display_container:                     Description             Value
0                    Session id               284
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              256f
2024-04-13 21:39:31,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 21:39:31,995:INFO:setup() successfully completed in 1.16s...............
2024-04-13 21:39:31,996:INFO:Initializing compare_models()
2024-04-13 21:39:31,996:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 21:39:31,996:INFO:Checking exceptions
2024-04-13 21:39:32,002:INFO:Preparing display monitor
2024-04-13 21:39:32,029:INFO:Initializing Logistic Regression
2024-04-13 21:39:32,029:INFO:Total runtime is 0.0 minutes
2024-04-13 21:39:32,033:INFO:SubProcess create_model() called ==================================
2024-04-13 21:39:32,034:INFO:Initializing create_model()
2024-04-13 21:39:32,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3C97400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 21:39:32,034:INFO:Checking exceptions
2024-04-13 21:39:32,034:INFO:Importing libraries
2024-04-13 21:39:32,034:INFO:Copying training dataset
2024-04-13 21:39:32,045:INFO:Defining folds
2024-04-13 21:39:32,045:INFO:Declaring metric variables
2024-04-13 21:39:32,050:INFO:Importing untrained model
2024-04-13 21:39:32,055:INFO:Logistic Regression Imported successfully
2024-04-13 21:39:32,064:INFO:Starting cross validation
2024-04-13 21:39:32,065:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 21:39:37,144:INFO:Calculating mean and std
2024-04-13 21:39:37,147:INFO:Creating metrics dataframe
2024-04-13 21:39:37,154:INFO:Uploading results into container
2024-04-13 21:39:37,157:INFO:Uploading model into container now
2024-04-13 21:39:37,159:INFO:_master_model_container: 1
2024-04-13 21:39:37,159:INFO:_display_container: 2
2024-04-13 21:39:37,160:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=284, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 21:39:37,161:INFO:create_model() successfully completed......................................
2024-04-13 21:39:37,506:INFO:SubProcess create_model() end ==================================
2024-04-13 21:39:37,506:INFO:Creating metrics dataframe
2024-04-13 21:39:37,514:INFO:Initializing Decision Tree Classifier
2024-04-13 21:39:37,515:INFO:Total runtime is 0.09143306016921997 minutes
2024-04-13 21:39:37,518:INFO:SubProcess create_model() called ==================================
2024-04-13 21:39:37,519:INFO:Initializing create_model()
2024-04-13 21:39:37,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3C97400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 21:39:37,519:INFO:Checking exceptions
2024-04-13 21:39:37,519:INFO:Importing libraries
2024-04-13 21:39:37,519:INFO:Copying training dataset
2024-04-13 21:39:37,529:INFO:Defining folds
2024-04-13 21:39:37,529:INFO:Declaring metric variables
2024-04-13 21:39:37,533:INFO:Importing untrained model
2024-04-13 21:39:37,538:INFO:Decision Tree Classifier Imported successfully
2024-04-13 21:39:37,546:INFO:Starting cross validation
2024-04-13 21:39:37,548:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 21:39:41,299:INFO:Calculating mean and std
2024-04-13 21:39:41,302:INFO:Creating metrics dataframe
2024-04-13 21:39:41,305:INFO:Uploading results into container
2024-04-13 21:39:41,306:INFO:Uploading model into container now
2024-04-13 21:39:41,307:INFO:_master_model_container: 2
2024-04-13 21:39:41,307:INFO:_display_container: 2
2024-04-13 21:39:41,308:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best')
2024-04-13 21:39:41,308:INFO:create_model() successfully completed......................................
2024-04-13 21:39:41,551:INFO:SubProcess create_model() end ==================================
2024-04-13 21:39:41,551:INFO:Creating metrics dataframe
2024-04-13 21:39:41,573:INFO:Initializing create_model()
2024-04-13 21:39:41,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 21:39:41,573:INFO:Checking exceptions
2024-04-13 21:39:41,575:INFO:Importing libraries
2024-04-13 21:39:41,576:INFO:Copying training dataset
2024-04-13 21:39:41,585:INFO:Defining folds
2024-04-13 21:39:41,585:INFO:Declaring metric variables
2024-04-13 21:39:41,586:INFO:Importing untrained model
2024-04-13 21:39:41,586:INFO:Declaring custom model
2024-04-13 21:39:41,586:INFO:Decision Tree Classifier Imported successfully
2024-04-13 21:39:41,587:INFO:Cross validation set to False
2024-04-13 21:39:41,588:INFO:Fitting Model
2024-04-13 21:39:41,663:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best')
2024-04-13 21:39:41,663:INFO:create_model() successfully completed......................................
2024-04-13 21:39:41,921:INFO:Initializing create_model()
2024-04-13 21:39:41,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=284, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 21:39:41,922:INFO:Checking exceptions
2024-04-13 21:39:41,925:INFO:Importing libraries
2024-04-13 21:39:41,925:INFO:Copying training dataset
2024-04-13 21:39:41,935:INFO:Defining folds
2024-04-13 21:39:41,935:INFO:Declaring metric variables
2024-04-13 21:39:41,935:INFO:Importing untrained model
2024-04-13 21:39:41,935:INFO:Declaring custom model
2024-04-13 21:39:41,936:INFO:Logistic Regression Imported successfully
2024-04-13 21:39:41,937:INFO:Cross validation set to False
2024-04-13 21:39:41,937:INFO:Fitting Model
2024-04-13 21:39:41,965:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=284, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 21:39:41,965:INFO:create_model() successfully completed......................................
2024-04-13 21:39:42,213:INFO:_master_model_container: 2
2024-04-13 21:39:42,213:INFO:_display_container: 2
2024-04-13 21:39:42,214:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=284, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 21:39:42,214:INFO:compare_models() successfully completed......................................
2024-04-13 21:39:42,216:INFO:Initializing predict_model()
2024-04-13 21:39:42,216:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=284, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E3C0D240>)
2024-04-13 21:39:42,216:INFO:Checking exceptions
2024-04-13 21:39:42,216:INFO:Preloading libraries
2024-04-13 21:39:43,650:INFO:Initializing predict_model()
2024-04-13 21:39:43,650:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E4FCE440>)
2024-04-13 21:39:43,650:INFO:Checking exceptions
2024-04-13 21:39:43,650:INFO:Preloading libraries
2024-04-13 21:39:44,861:INFO:Initializing tune_model()
2024-04-13 21:39:44,861:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>)
2024-04-13 21:39:44,861:INFO:Checking exceptions
2024-04-13 21:39:44,906:INFO:Copying training dataset
2024-04-13 21:39:44,919:INFO:Checking base model
2024-04-13 21:39:44,919:INFO:Base model : Decision Tree Classifier
2024-04-13 21:39:44,953:INFO:Declaring metric variables
2024-04-13 21:39:44,964:INFO:Defining Hyperparameters
2024-04-13 21:39:45,273:INFO:Tuning with n_jobs=-1
2024-04-13 21:39:45,273:INFO:Initializing RandomizedSearchCV
2024-04-13 21:39:45,607:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2024-04-13 21:39:45,607:INFO:Hyperparameter search completed
2024-04-13 21:39:45,607:INFO:SubProcess create_model() called ==================================
2024-04-13 21:39:45,609:INFO:Initializing create_model()
2024-04-13 21:39:45,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E53954E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'entropy'})
2024-04-13 21:39:45,609:INFO:Checking exceptions
2024-04-13 21:39:45,609:INFO:Importing libraries
2024-04-13 21:39:45,610:INFO:Copying training dataset
2024-04-13 21:39:45,620:INFO:Defining folds
2024-04-13 21:39:45,621:INFO:Declaring metric variables
2024-04-13 21:39:45,627:INFO:Importing untrained model
2024-04-13 21:39:45,628:INFO:Declaring custom model
2024-04-13 21:39:45,636:INFO:Decision Tree Classifier Imported successfully
2024-04-13 21:39:45,650:INFO:Starting cross validation
2024-04-13 21:39:45,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 21:39:45,829:INFO:Calculating mean and std
2024-04-13 21:39:45,830:INFO:Creating metrics dataframe
2024-04-13 21:39:45,836:INFO:Finalizing model
2024-04-13 21:39:45,863:INFO:Uploading results into container
2024-04-13 21:39:45,864:INFO:Uploading model into container now
2024-04-13 21:39:45,865:INFO:_master_model_container: 3
2024-04-13 21:39:45,865:INFO:_display_container: 5
2024-04-13 21:39:45,865:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=6,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best')
2024-04-13 21:39:45,866:INFO:create_model() successfully completed......................................
2024-04-13 21:39:46,060:INFO:SubProcess create_model() end ==================================
2024-04-13 21:39:46,060:INFO:choose_better activated
2024-04-13 21:39:46,065:INFO:SubProcess create_model() called ==================================
2024-04-13 21:39:46,065:INFO:Initializing create_model()
2024-04-13 21:39:46,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 21:39:46,066:INFO:Checking exceptions
2024-04-13 21:39:46,067:INFO:Importing libraries
2024-04-13 21:39:46,067:INFO:Copying training dataset
2024-04-13 21:39:46,075:INFO:Defining folds
2024-04-13 21:39:46,075:INFO:Declaring metric variables
2024-04-13 21:39:46,076:INFO:Importing untrained model
2024-04-13 21:39:46,076:INFO:Declaring custom model
2024-04-13 21:39:46,077:INFO:Decision Tree Classifier Imported successfully
2024-04-13 21:39:46,077:INFO:Starting cross validation
2024-04-13 21:39:46,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 21:39:46,257:INFO:Calculating mean and std
2024-04-13 21:39:46,258:INFO:Creating metrics dataframe
2024-04-13 21:39:46,260:INFO:Finalizing model
2024-04-13 21:39:46,332:INFO:Uploading results into container
2024-04-13 21:39:46,332:INFO:Uploading model into container now
2024-04-13 21:39:46,333:INFO:_master_model_container: 4
2024-04-13 21:39:46,333:INFO:_display_container: 6
2024-04-13 21:39:46,333:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best')
2024-04-13 21:39:46,333:INFO:create_model() successfully completed......................................
2024-04-13 21:39:46,539:INFO:SubProcess create_model() end ==================================
2024-04-13 21:39:46,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best') result for F1 is 0.5467
2024-04-13 21:39:46,541:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=6,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best') result for F1 is 0.4073
2024-04-13 21:39:46,541:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best') is best model
2024-04-13 21:39:46,541:INFO:choose_better completed
2024-04-13 21:39:46,542:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 21:39:46,554:INFO:_master_model_container: 4
2024-04-13 21:39:46,555:INFO:_display_container: 5
2024-04-13 21:39:46,555:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best')
2024-04-13 21:39:46,556:INFO:tune_model() successfully completed......................................
2024-04-13 21:39:46,751:INFO:Initializing predict_model()
2024-04-13 21:39:46,751:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000161E16E08B0>)
2024-04-13 21:39:46,751:INFO:Checking exceptions
2024-04-13 21:39:46,751:INFO:Preloading libraries
2024-04-13 21:39:47,097:INFO:Initializing finalize_model()
2024-04-13 21:39:47,097:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 21:39:47,098:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best')
2024-04-13 21:39:47,103:INFO:Initializing create_model()
2024-04-13 21:39:47,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000161E5123610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=284, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 21:39:47,103:INFO:Checking exceptions
2024-04-13 21:39:47,105:INFO:Importing libraries
2024-04-13 21:39:47,105:INFO:Copying training dataset
2024-04-13 21:39:47,106:INFO:Defining folds
2024-04-13 21:39:47,106:INFO:Declaring metric variables
2024-04-13 21:39:47,106:INFO:Importing untrained model
2024-04-13 21:39:47,106:INFO:Declaring custom model
2024-04-13 21:39:47,107:INFO:Decision Tree Classifier Imported successfully
2024-04-13 21:39:47,108:INFO:Cross validation set to False
2024-04-13 21:39:47,108:INFO:Fitting Model
2024-04-13 21:39:47,207:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=284,
                                        splitter='best'))],
         verbose=False)
2024-04-13 21:39:47,208:INFO:create_model() successfully completed......................................
2024-04-13 21:39:47,404:INFO:_master_model_container: 4
2024-04-13 21:39:47,404:INFO:_display_container: 6
2024-04-13 21:39:47,412:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=284,
                                        splitter='best'))],
         verbose=False)
2024-04-13 21:39:47,412:INFO:finalize_model() successfully completed......................................
2024-04-13 21:39:47,620:INFO:Initializing save_model()
2024-04-13 21:39:47,620:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=284,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 21:39:47,620:INFO:Adding model into prep_pipe
2024-04-13 21:39:47,621:WARNING:Only Model saved as it was a pipeline.
2024-04-13 21:39:47,627:INFO:./model_Kobe.pkl saved in current working directory
2024-04-13 21:39:47,635:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=284,
                                        splitter='best'))],
         verbose=False)
2024-04-13 21:39:47,635:INFO:save_model() successfully completed......................................
2024-04-13 21:39:47,832:INFO:Initializing load_model()
2024-04-13 21:39:47,832:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 10:55:25,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 10:55:25,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 10:55:25,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 10:55:25,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 10:55:28,389:INFO:PyCaret ClassificationExperiment
2024-04-14 10:55:28,389:INFO:Logging name: clf-default-name
2024-04-14 10:55:28,390:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 10:55:28,390:INFO:version 3.3.0
2024-04-14 10:55:28,390:INFO:Initializing setup()
2024-04-14 10:55:28,390:INFO:self.USI: 89be
2024-04-14 10:55:28,390:INFO:self._variable_keys: {'fold_generator', 'seed', '_ml_usecase', 'n_jobs_param', 'idx', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'X_train', 'fold_groups_param', 'fix_imbalance', 'memory', 'USI', 'y_test', 'gpu_param', '_available_plots', 'log_plots_param', 'fold_shuffle_param', 'target_param', 'data', 'is_multiclass', 'exp_id', 'html_param', 'X_test', 'y', 'y_train', 'exp_name_log', 'X'}
2024-04-14 10:55:28,390:INFO:Checking environment
2024-04-14 10:55:28,390:INFO:python_version: 3.10.14
2024-04-14 10:55:28,390:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 10:55:28,390:INFO:machine: AMD64
2024-04-14 10:55:28,390:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 10:55:28,398:INFO:Memory: svmem(total=17131573248, available=7819116544, percent=54.4, used=9312456704, free=7819116544)
2024-04-14 10:55:28,398:INFO:Physical Core: 8
2024-04-14 10:55:28,398:INFO:Logical Core: 16
2024-04-14 10:55:28,398:INFO:Checking libraries
2024-04-14 10:55:28,398:INFO:System:
2024-04-14 10:55:28,398:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 10:55:28,399:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 10:55:28,399:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 10:55:28,399:INFO:PyCaret required dependencies:
2024-04-14 10:55:28,466:INFO:                 pip: 23.3.1
2024-04-14 10:55:28,466:INFO:          setuptools: 68.2.2
2024-04-14 10:55:28,466:INFO:             pycaret: 3.3.0
2024-04-14 10:55:28,466:INFO:             IPython: 8.23.0
2024-04-14 10:55:28,466:INFO:          ipywidgets: 8.1.2
2024-04-14 10:55:28,467:INFO:                tqdm: 4.66.2
2024-04-14 10:55:28,467:INFO:               numpy: 1.26.4
2024-04-14 10:55:28,467:INFO:              pandas: 2.1.4
2024-04-14 10:55:28,467:INFO:              jinja2: 3.1.3
2024-04-14 10:55:28,467:INFO:               scipy: 1.11.4
2024-04-14 10:55:28,467:INFO:              joblib: 1.3.2
2024-04-14 10:55:28,467:INFO:             sklearn: 1.4.1.post1
2024-04-14 10:55:28,467:INFO:                pyod: 1.1.3
2024-04-14 10:55:28,467:INFO:            imblearn: 0.12.2
2024-04-14 10:55:28,467:INFO:   category_encoders: 2.6.3
2024-04-14 10:55:28,467:INFO:            lightgbm: 4.3.0
2024-04-14 10:55:28,467:INFO:               numba: 0.59.1
2024-04-14 10:55:28,467:INFO:            requests: 2.31.0
2024-04-14 10:55:28,467:INFO:          matplotlib: 3.7.5
2024-04-14 10:55:28,468:INFO:          scikitplot: 0.3.7
2024-04-14 10:55:28,468:INFO:         yellowbrick: 1.5
2024-04-14 10:55:28,468:INFO:              plotly: 5.20.0
2024-04-14 10:55:28,468:INFO:    plotly-resampler: Not installed
2024-04-14 10:55:28,468:INFO:             kaleido: 0.2.1
2024-04-14 10:55:28,468:INFO:           schemdraw: 0.15
2024-04-14 10:55:28,468:INFO:         statsmodels: 0.14.1
2024-04-14 10:55:28,468:INFO:              sktime: 0.28.0
2024-04-14 10:55:28,468:INFO:               tbats: 1.1.3
2024-04-14 10:55:28,468:INFO:            pmdarima: 2.0.4
2024-04-14 10:55:28,468:INFO:              psutil: 5.9.8
2024-04-14 10:55:28,468:INFO:          markupsafe: 2.1.5
2024-04-14 10:55:28,468:INFO:             pickle5: Not installed
2024-04-14 10:55:28,468:INFO:         cloudpickle: 3.0.0
2024-04-14 10:55:28,468:INFO:         deprecation: 2.1.0
2024-04-14 10:55:28,469:INFO:              xxhash: 3.4.1
2024-04-14 10:55:28,469:INFO:           wurlitzer: 3.0.3
2024-04-14 10:55:28,469:INFO:PyCaret optional dependencies:
2024-04-14 10:55:28,506:INFO:                shap: Not installed
2024-04-14 10:55:28,506:INFO:           interpret: Not installed
2024-04-14 10:55:28,506:INFO:                umap: Not installed
2024-04-14 10:55:28,506:INFO:     ydata_profiling: Not installed
2024-04-14 10:55:28,506:INFO:  explainerdashboard: Not installed
2024-04-14 10:55:28,506:INFO:             autoviz: Not installed
2024-04-14 10:55:28,506:INFO:           fairlearn: Not installed
2024-04-14 10:55:28,506:INFO:          deepchecks: Not installed
2024-04-14 10:55:28,506:INFO:             xgboost: Not installed
2024-04-14 10:55:28,506:INFO:            catboost: Not installed
2024-04-14 10:55:28,506:INFO:              kmodes: Not installed
2024-04-14 10:55:28,506:INFO:             mlxtend: Not installed
2024-04-14 10:55:28,506:INFO:       statsforecast: Not installed
2024-04-14 10:55:28,506:INFO:        tune_sklearn: Not installed
2024-04-14 10:55:28,507:INFO:                 ray: Not installed
2024-04-14 10:55:28,507:INFO:            hyperopt: Not installed
2024-04-14 10:55:28,507:INFO:              optuna: Not installed
2024-04-14 10:55:28,507:INFO:               skopt: Not installed
2024-04-14 10:55:28,507:INFO:              mlflow: 2.11.3
2024-04-14 10:55:28,507:INFO:              gradio: Not installed
2024-04-14 10:55:28,507:INFO:             fastapi: Not installed
2024-04-14 10:55:28,507:INFO:             uvicorn: Not installed
2024-04-14 10:55:28,507:INFO:              m2cgen: Not installed
2024-04-14 10:55:28,507:INFO:           evidently: Not installed
2024-04-14 10:55:28,507:INFO:               fugue: Not installed
2024-04-14 10:55:28,507:INFO:           streamlit: 1.33.0
2024-04-14 10:55:28,507:INFO:             prophet: Not installed
2024-04-14 10:55:28,507:INFO:None
2024-04-14 10:55:28,508:INFO:Set up data.
2024-04-14 10:55:28,518:INFO:Set up folding strategy.
2024-04-14 10:55:28,518:INFO:Set up train/test split.
2024-04-14 10:55:28,518:INFO:Set up data.
2024-04-14 10:55:28,527:INFO:Set up index.
2024-04-14 10:55:28,528:INFO:Assigning column types.
2024-04-14 10:55:28,536:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 10:55:28,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 10:55:28,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 10:55:28,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:28,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:28,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 10:55:28,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 10:55:28,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:28,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:28,806:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 10:55:28,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 10:55:28,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:28,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 10:55:29,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,047:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 10:55:29,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,290:INFO:Preparing preprocessing pipeline...
2024-04-14 10:55:29,293:INFO:Set up simple imputation.
2024-04-14 10:55:29,293:INFO:Set up feature normalization.
2024-04-14 10:55:29,352:INFO:Finished creating preprocessing pipeline.
2024-04-14 10:55:29,361:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 10:55:29,362:INFO:Creating final display dataframe.
2024-04-14 10:55:29,507:INFO:Setup _display_container:                     Description             Value
0                    Session id               624
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              89be
2024-04-14 10:55:29,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 10:55:29,772:INFO:setup() successfully completed in 1.39s...............
2024-04-14 10:55:29,772:INFO:Initializing compare_models()
2024-04-14 10:55:29,772:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 10:55:29,772:INFO:Checking exceptions
2024-04-14 10:55:29,779:INFO:Preparing display monitor
2024-04-14 10:55:29,816:INFO:Initializing Logistic Regression
2024-04-14 10:55:29,816:INFO:Total runtime is 0.0 minutes
2024-04-14 10:55:29,821:INFO:SubProcess create_model() called ==================================
2024-04-14 10:55:29,821:INFO:Initializing create_model()
2024-04-14 10:55:29,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F734F760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 10:55:29,822:INFO:Checking exceptions
2024-04-14 10:55:29,822:INFO:Importing libraries
2024-04-14 10:55:29,822:INFO:Copying training dataset
2024-04-14 10:55:29,838:INFO:Defining folds
2024-04-14 10:55:29,838:INFO:Declaring metric variables
2024-04-14 10:55:29,844:INFO:Importing untrained model
2024-04-14 10:55:29,851:INFO:Logistic Regression Imported successfully
2024-04-14 10:55:29,865:INFO:Starting cross validation
2024-04-14 10:55:29,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 10:55:37,003:INFO:Calculating mean and std
2024-04-14 10:55:37,006:INFO:Creating metrics dataframe
2024-04-14 10:55:37,009:INFO:Uploading results into container
2024-04-14 10:55:37,010:INFO:Uploading model into container now
2024-04-14 10:55:37,010:INFO:_master_model_container: 1
2024-04-14 10:55:37,010:INFO:_display_container: 2
2024-04-14 10:55:37,011:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=624, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 10:55:37,011:INFO:create_model() successfully completed......................................
2024-04-14 10:55:37,146:INFO:SubProcess create_model() end ==================================
2024-04-14 10:55:37,147:INFO:Creating metrics dataframe
2024-04-14 10:55:37,158:INFO:Initializing Decision Tree Classifier
2024-04-14 10:55:37,158:INFO:Total runtime is 0.1223679780960083 minutes
2024-04-14 10:55:37,165:INFO:SubProcess create_model() called ==================================
2024-04-14 10:55:37,165:INFO:Initializing create_model()
2024-04-14 10:55:37,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F734F760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 10:55:37,166:INFO:Checking exceptions
2024-04-14 10:55:37,166:INFO:Importing libraries
2024-04-14 10:55:37,166:INFO:Copying training dataset
2024-04-14 10:55:37,176:INFO:Defining folds
2024-04-14 10:55:37,177:INFO:Declaring metric variables
2024-04-14 10:55:37,184:INFO:Importing untrained model
2024-04-14 10:55:37,190:INFO:Decision Tree Classifier Imported successfully
2024-04-14 10:55:37,203:INFO:Starting cross validation
2024-04-14 10:55:37,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 10:55:41,656:INFO:Calculating mean and std
2024-04-14 10:55:41,659:INFO:Creating metrics dataframe
2024-04-14 10:55:41,663:INFO:Uploading results into container
2024-04-14 10:55:41,665:INFO:Uploading model into container now
2024-04-14 10:55:41,666:INFO:_master_model_container: 2
2024-04-14 10:55:41,666:INFO:_display_container: 2
2024-04-14 10:55:41,668:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best')
2024-04-14 10:55:41,668:INFO:create_model() successfully completed......................................
2024-04-14 10:55:41,815:INFO:SubProcess create_model() end ==================================
2024-04-14 10:55:41,815:INFO:Creating metrics dataframe
2024-04-14 10:55:41,842:INFO:Initializing create_model()
2024-04-14 10:55:41,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 10:55:41,842:INFO:Checking exceptions
2024-04-14 10:55:41,846:INFO:Importing libraries
2024-04-14 10:55:41,846:INFO:Copying training dataset
2024-04-14 10:55:41,856:INFO:Defining folds
2024-04-14 10:55:41,856:INFO:Declaring metric variables
2024-04-14 10:55:41,856:INFO:Importing untrained model
2024-04-14 10:55:41,856:INFO:Declaring custom model
2024-04-14 10:55:41,857:INFO:Decision Tree Classifier Imported successfully
2024-04-14 10:55:41,858:INFO:Cross validation set to False
2024-04-14 10:55:41,858:INFO:Fitting Model
2024-04-14 10:55:41,944:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best')
2024-04-14 10:55:41,944:INFO:create_model() successfully completed......................................
2024-04-14 10:55:42,082:INFO:Initializing create_model()
2024-04-14 10:55:42,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=624, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 10:55:42,082:INFO:Checking exceptions
2024-04-14 10:55:42,085:INFO:Importing libraries
2024-04-14 10:55:42,085:INFO:Copying training dataset
2024-04-14 10:55:42,093:INFO:Defining folds
2024-04-14 10:55:42,093:INFO:Declaring metric variables
2024-04-14 10:55:42,094:INFO:Importing untrained model
2024-04-14 10:55:42,094:INFO:Declaring custom model
2024-04-14 10:55:42,095:INFO:Logistic Regression Imported successfully
2024-04-14 10:55:42,096:INFO:Cross validation set to False
2024-04-14 10:55:42,096:INFO:Fitting Model
2024-04-14 10:55:42,159:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=624, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 10:55:42,160:INFO:create_model() successfully completed......................................
2024-04-14 10:55:42,300:INFO:_master_model_container: 2
2024-04-14 10:55:42,300:INFO:_display_container: 2
2024-04-14 10:55:42,301:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=624, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 10:55:42,302:INFO:compare_models() successfully completed......................................
2024-04-14 10:55:42,303:INFO:Initializing predict_model()
2024-04-14 10:55:42,303:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=624, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F651BF40>)
2024-04-14 10:55:42,303:INFO:Checking exceptions
2024-04-14 10:55:42,304:INFO:Preloading libraries
2024-04-14 10:55:44,066:INFO:Initializing predict_model()
2024-04-14 10:55:44,066:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F7132710>)
2024-04-14 10:55:44,066:INFO:Checking exceptions
2024-04-14 10:55:44,066:INFO:Preloading libraries
2024-04-14 10:55:45,208:INFO:Initializing tune_model()
2024-04-14 10:55:45,208:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>)
2024-04-14 10:55:45,208:INFO:Checking exceptions
2024-04-14 10:55:45,231:INFO:Copying training dataset
2024-04-14 10:55:45,255:INFO:Checking base model
2024-04-14 10:55:45,255:INFO:Base model : Decision Tree Classifier
2024-04-14 10:55:45,265:INFO:Declaring metric variables
2024-04-14 10:55:45,273:INFO:Defining Hyperparameters
2024-04-14 10:55:45,415:INFO:Tuning with n_jobs=-1
2024-04-14 10:55:45,416:INFO:Initializing RandomizedSearchCV
2024-04-14 10:55:45,744:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'gini'}
2024-04-14 10:55:45,744:INFO:Hyperparameter search completed
2024-04-14 10:55:45,744:INFO:SubProcess create_model() called ==================================
2024-04-14 10:55:45,745:INFO:Initializing create_model()
2024-04-14 10:55:45,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F85AA860>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 5, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 11, 'criterion': 'gini'})
2024-04-14 10:55:45,745:INFO:Checking exceptions
2024-04-14 10:55:45,745:INFO:Importing libraries
2024-04-14 10:55:45,745:INFO:Copying training dataset
2024-04-14 10:55:45,755:INFO:Defining folds
2024-04-14 10:55:45,755:INFO:Declaring metric variables
2024-04-14 10:55:45,760:INFO:Importing untrained model
2024-04-14 10:55:45,760:INFO:Declaring custom model
2024-04-14 10:55:45,766:INFO:Decision Tree Classifier Imported successfully
2024-04-14 10:55:45,777:INFO:Starting cross validation
2024-04-14 10:55:45,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 10:55:45,950:INFO:Calculating mean and std
2024-04-14 10:55:45,951:INFO:Creating metrics dataframe
2024-04-14 10:55:45,962:INFO:Finalizing model
2024-04-14 10:55:46,015:INFO:Uploading results into container
2024-04-14 10:55:46,016:INFO:Uploading model into container now
2024-04-14 10:55:46,017:INFO:_master_model_container: 3
2024-04-14 10:55:46,018:INFO:_display_container: 5
2024-04-14 10:55:46,019:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best')
2024-04-14 10:55:46,019:INFO:create_model() successfully completed......................................
2024-04-14 10:55:46,182:INFO:SubProcess create_model() end ==================================
2024-04-14 10:55:46,182:INFO:choose_better activated
2024-04-14 10:55:46,188:INFO:SubProcess create_model() called ==================================
2024-04-14 10:55:46,188:INFO:Initializing create_model()
2024-04-14 10:55:46,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 10:55:46,189:INFO:Checking exceptions
2024-04-14 10:55:46,192:INFO:Importing libraries
2024-04-14 10:55:46,192:INFO:Copying training dataset
2024-04-14 10:55:46,204:INFO:Defining folds
2024-04-14 10:55:46,205:INFO:Declaring metric variables
2024-04-14 10:55:46,205:INFO:Importing untrained model
2024-04-14 10:55:46,205:INFO:Declaring custom model
2024-04-14 10:55:46,206:INFO:Decision Tree Classifier Imported successfully
2024-04-14 10:55:46,206:INFO:Starting cross validation
2024-04-14 10:55:46,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 10:55:46,430:INFO:Calculating mean and std
2024-04-14 10:55:46,431:INFO:Creating metrics dataframe
2024-04-14 10:55:46,434:INFO:Finalizing model
2024-04-14 10:55:46,526:INFO:Uploading results into container
2024-04-14 10:55:46,527:INFO:Uploading model into container now
2024-04-14 10:55:46,528:INFO:_master_model_container: 4
2024-04-14 10:55:46,528:INFO:_display_container: 6
2024-04-14 10:55:46,529:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best')
2024-04-14 10:55:46,529:INFO:create_model() successfully completed......................................
2024-04-14 10:55:46,701:INFO:SubProcess create_model() end ==================================
2024-04-14 10:55:46,702:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best') result for F1 is 0.543
2024-04-14 10:55:46,702:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best') result for F1 is 0.4954
2024-04-14 10:55:46,703:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best') is best model
2024-04-14 10:55:46,703:INFO:choose_better completed
2024-04-14 10:55:46,704:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 10:55:46,722:INFO:_master_model_container: 4
2024-04-14 10:55:46,723:INFO:_display_container: 5
2024-04-14 10:55:46,724:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best')
2024-04-14 10:55:46,724:INFO:tune_model() successfully completed......................................
2024-04-14 10:55:46,864:INFO:Initializing predict_model()
2024-04-14 10:55:46,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F652DBD0>)
2024-04-14 10:55:46,864:INFO:Checking exceptions
2024-04-14 10:55:46,864:INFO:Preloading libraries
2024-04-14 10:55:47,208:INFO:Initializing finalize_model()
2024-04-14 10:55:47,208:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 10:55:47,209:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best')
2024-04-14 10:55:47,218:INFO:Initializing create_model()
2024-04-14 10:55:47,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=624, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 10:55:47,219:INFO:Checking exceptions
2024-04-14 10:55:47,221:INFO:Importing libraries
2024-04-14 10:55:47,222:INFO:Copying training dataset
2024-04-14 10:55:47,222:INFO:Defining folds
2024-04-14 10:55:47,222:INFO:Declaring metric variables
2024-04-14 10:55:47,223:INFO:Importing untrained model
2024-04-14 10:55:47,223:INFO:Declaring custom model
2024-04-14 10:55:47,224:INFO:Decision Tree Classifier Imported successfully
2024-04-14 10:55:47,225:INFO:Cross validation set to False
2024-04-14 10:55:47,225:INFO:Fitting Model
2024-04-14 10:55:47,356:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=624,
                                        splitter='best'))],
         verbose=False)
2024-04-14 10:55:47,356:INFO:create_model() successfully completed......................................
2024-04-14 10:55:47,528:INFO:_master_model_container: 4
2024-04-14 10:55:47,528:INFO:_display_container: 6
2024-04-14 10:55:47,537:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=624,
                                        splitter='best'))],
         verbose=False)
2024-04-14 10:55:47,537:INFO:finalize_model() successfully completed......................................
2024-04-14 10:55:47,693:INFO:Initializing save_model()
2024-04-14 10:55:47,693:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=624,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 10:55:47,693:INFO:Adding model into prep_pipe
2024-04-14 10:55:47,693:WARNING:Only Model saved as it was a pipeline.
2024-04-14 10:55:47,704:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 10:55:47,715:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=624,
                                        splitter='best'))],
         verbose=False)
2024-04-14 10:55:47,715:INFO:save_model() successfully completed......................................
2024-04-14 10:55:47,876:INFO:Initializing load_model()
2024-04-14 10:55:47,876:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 11:19:54,267:INFO:PyCaret ClassificationExperiment
2024-04-14 11:19:54,267:INFO:Logging name: clf-default-name
2024-04-14 11:19:54,267:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:19:54,268:INFO:version 3.3.0
2024-04-14 11:19:54,268:INFO:Initializing setup()
2024-04-14 11:19:54,268:INFO:self.USI: 013c
2024-04-14 11:19:54,268:INFO:self._variable_keys: {'fold_generator', 'seed', '_ml_usecase', 'n_jobs_param', 'idx', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'X_train', 'fold_groups_param', 'fix_imbalance', 'memory', 'USI', 'y_test', 'gpu_param', '_available_plots', 'log_plots_param', 'fold_shuffle_param', 'target_param', 'data', 'is_multiclass', 'exp_id', 'html_param', 'X_test', 'y', 'y_train', 'exp_name_log', 'X'}
2024-04-14 11:19:54,268:INFO:Checking environment
2024-04-14 11:19:54,268:INFO:python_version: 3.10.14
2024-04-14 11:19:54,268:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 11:19:54,268:INFO:machine: AMD64
2024-04-14 11:19:54,268:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 11:19:54,273:INFO:Memory: svmem(total=17131573248, available=4436348928, percent=74.1, used=12695224320, free=4436348928)
2024-04-14 11:19:54,274:INFO:Physical Core: 8
2024-04-14 11:19:54,274:INFO:Logical Core: 16
2024-04-14 11:19:54,274:INFO:Checking libraries
2024-04-14 11:19:54,274:INFO:System:
2024-04-14 11:19:54,274:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 11:19:54,274:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 11:19:54,274:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 11:19:54,274:INFO:PyCaret required dependencies:
2024-04-14 11:19:54,274:INFO:                 pip: 23.3.1
2024-04-14 11:19:54,274:INFO:          setuptools: 68.2.2
2024-04-14 11:19:54,275:INFO:             pycaret: 3.3.0
2024-04-14 11:19:54,275:INFO:             IPython: 8.23.0
2024-04-14 11:19:54,275:INFO:          ipywidgets: 8.1.2
2024-04-14 11:19:54,275:INFO:                tqdm: 4.66.2
2024-04-14 11:19:54,275:INFO:               numpy: 1.26.4
2024-04-14 11:19:54,275:INFO:              pandas: 2.1.4
2024-04-14 11:19:54,275:INFO:              jinja2: 3.1.3
2024-04-14 11:19:54,275:INFO:               scipy: 1.11.4
2024-04-14 11:19:54,275:INFO:              joblib: 1.3.2
2024-04-14 11:19:54,275:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:19:54,275:INFO:                pyod: 1.1.3
2024-04-14 11:19:54,275:INFO:            imblearn: 0.12.2
2024-04-14 11:19:54,275:INFO:   category_encoders: 2.6.3
2024-04-14 11:19:54,275:INFO:            lightgbm: 4.3.0
2024-04-14 11:19:54,276:INFO:               numba: 0.59.1
2024-04-14 11:19:54,276:INFO:            requests: 2.31.0
2024-04-14 11:19:54,276:INFO:          matplotlib: 3.7.5
2024-04-14 11:19:54,276:INFO:          scikitplot: 0.3.7
2024-04-14 11:19:54,276:INFO:         yellowbrick: 1.5
2024-04-14 11:19:54,276:INFO:              plotly: 5.20.0
2024-04-14 11:19:54,276:INFO:    plotly-resampler: Not installed
2024-04-14 11:19:54,276:INFO:             kaleido: 0.2.1
2024-04-14 11:19:54,276:INFO:           schemdraw: 0.15
2024-04-14 11:19:54,276:INFO:         statsmodels: 0.14.1
2024-04-14 11:19:54,276:INFO:              sktime: 0.28.0
2024-04-14 11:19:54,276:INFO:               tbats: 1.1.3
2024-04-14 11:19:54,276:INFO:            pmdarima: 2.0.4
2024-04-14 11:19:54,276:INFO:              psutil: 5.9.8
2024-04-14 11:19:54,276:INFO:          markupsafe: 2.1.5
2024-04-14 11:19:54,277:INFO:             pickle5: Not installed
2024-04-14 11:19:54,277:INFO:         cloudpickle: 3.0.0
2024-04-14 11:19:54,277:INFO:         deprecation: 2.1.0
2024-04-14 11:19:54,277:INFO:              xxhash: 3.4.1
2024-04-14 11:19:54,277:INFO:           wurlitzer: 3.0.3
2024-04-14 11:19:54,277:INFO:PyCaret optional dependencies:
2024-04-14 11:19:54,277:INFO:                shap: Not installed
2024-04-14 11:19:54,277:INFO:           interpret: Not installed
2024-04-14 11:19:54,277:INFO:                umap: Not installed
2024-04-14 11:19:54,277:INFO:     ydata_profiling: Not installed
2024-04-14 11:19:54,277:INFO:  explainerdashboard: Not installed
2024-04-14 11:19:54,277:INFO:             autoviz: Not installed
2024-04-14 11:19:54,277:INFO:           fairlearn: Not installed
2024-04-14 11:19:54,277:INFO:          deepchecks: Not installed
2024-04-14 11:19:54,278:INFO:             xgboost: Not installed
2024-04-14 11:19:54,278:INFO:            catboost: Not installed
2024-04-14 11:19:54,278:INFO:              kmodes: Not installed
2024-04-14 11:19:54,278:INFO:             mlxtend: Not installed
2024-04-14 11:19:54,278:INFO:       statsforecast: Not installed
2024-04-14 11:19:54,278:INFO:        tune_sklearn: Not installed
2024-04-14 11:19:54,278:INFO:                 ray: Not installed
2024-04-14 11:19:54,278:INFO:            hyperopt: Not installed
2024-04-14 11:19:54,278:INFO:              optuna: Not installed
2024-04-14 11:19:54,278:INFO:               skopt: Not installed
2024-04-14 11:19:54,278:INFO:              mlflow: 2.11.3
2024-04-14 11:19:54,278:INFO:              gradio: Not installed
2024-04-14 11:19:54,278:INFO:             fastapi: Not installed
2024-04-14 11:19:54,278:INFO:             uvicorn: Not installed
2024-04-14 11:19:54,278:INFO:              m2cgen: Not installed
2024-04-14 11:19:54,279:INFO:           evidently: Not installed
2024-04-14 11:19:54,279:INFO:               fugue: Not installed
2024-04-14 11:19:54,279:INFO:           streamlit: 1.33.0
2024-04-14 11:19:54,279:INFO:             prophet: Not installed
2024-04-14 11:19:54,279:INFO:None
2024-04-14 11:19:54,279:INFO:Set up data.
2024-04-14 11:19:54,288:INFO:Set up folding strategy.
2024-04-14 11:19:54,288:INFO:Set up train/test split.
2024-04-14 11:19:54,288:INFO:Set up data.
2024-04-14 11:19:54,295:INFO:Set up index.
2024-04-14 11:19:54,296:INFO:Assigning column types.
2024-04-14 11:19:54,302:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:19:54,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:19:54,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:19:54,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,493:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:19:54,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:19:54,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,539:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:19:54,620:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:19:54,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,737:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:19:54,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,782:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:19:54,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:54,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,016:INFO:Preparing preprocessing pipeline...
2024-04-14 11:19:55,018:INFO:Set up simple imputation.
2024-04-14 11:19:55,018:INFO:Set up feature normalization.
2024-04-14 11:19:55,057:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:19:55,064:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:19:55,064:INFO:Creating final display dataframe.
2024-04-14 11:19:55,197:INFO:Setup _display_container:                     Description             Value
0                    Session id              8013
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              013c
2024-04-14 11:19:55,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:19:55,443:INFO:setup() successfully completed in 1.18s...............
2024-04-14 11:19:55,443:INFO:Initializing compare_models()
2024-04-14 11:19:55,443:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 11:19:55,443:INFO:Checking exceptions
2024-04-14 11:19:55,449:INFO:Preparing display monitor
2024-04-14 11:19:55,475:INFO:Initializing Logistic Regression
2024-04-14 11:19:55,475:INFO:Total runtime is 0.0 minutes
2024-04-14 11:19:55,479:INFO:SubProcess create_model() called ==================================
2024-04-14 11:19:55,480:INFO:Initializing create_model()
2024-04-14 11:19:55,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F63FF8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:19:55,480:INFO:Checking exceptions
2024-04-14 11:19:55,480:INFO:Importing libraries
2024-04-14 11:19:55,481:INFO:Copying training dataset
2024-04-14 11:19:55,490:INFO:Defining folds
2024-04-14 11:19:55,490:INFO:Declaring metric variables
2024-04-14 11:19:55,495:INFO:Importing untrained model
2024-04-14 11:19:55,499:INFO:Logistic Regression Imported successfully
2024-04-14 11:19:55,507:INFO:Starting cross validation
2024-04-14 11:19:55,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:20:00,559:INFO:Calculating mean and std
2024-04-14 11:20:00,562:INFO:Creating metrics dataframe
2024-04-14 11:20:00,566:INFO:Uploading results into container
2024-04-14 11:20:00,568:INFO:Uploading model into container now
2024-04-14 11:20:00,569:INFO:_master_model_container: 1
2024-04-14 11:20:00,569:INFO:_display_container: 2
2024-04-14 11:20:00,570:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8013, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:20:00,570:INFO:create_model() successfully completed......................................
2024-04-14 11:20:00,731:INFO:SubProcess create_model() end ==================================
2024-04-14 11:20:00,732:INFO:Creating metrics dataframe
2024-04-14 11:20:00,740:INFO:Initializing Decision Tree Classifier
2024-04-14 11:20:00,740:INFO:Total runtime is 0.08774635394414267 minutes
2024-04-14 11:20:00,744:INFO:SubProcess create_model() called ==================================
2024-04-14 11:20:00,745:INFO:Initializing create_model()
2024-04-14 11:20:00,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F63FF8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:00,745:INFO:Checking exceptions
2024-04-14 11:20:00,745:INFO:Importing libraries
2024-04-14 11:20:00,745:INFO:Copying training dataset
2024-04-14 11:20:00,754:INFO:Defining folds
2024-04-14 11:20:00,754:INFO:Declaring metric variables
2024-04-14 11:20:00,759:INFO:Importing untrained model
2024-04-14 11:20:00,763:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:00,772:INFO:Starting cross validation
2024-04-14 11:20:00,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:20:04,100:INFO:Calculating mean and std
2024-04-14 11:20:04,104:INFO:Creating metrics dataframe
2024-04-14 11:20:04,107:INFO:Uploading results into container
2024-04-14 11:20:04,108:INFO:Uploading model into container now
2024-04-14 11:20:04,109:INFO:_master_model_container: 2
2024-04-14 11:20:04,109:INFO:_display_container: 2
2024-04-14 11:20:04,110:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best')
2024-04-14 11:20:04,110:INFO:create_model() successfully completed......................................
2024-04-14 11:20:04,292:INFO:SubProcess create_model() end ==================================
2024-04-14 11:20:04,292:INFO:Creating metrics dataframe
2024-04-14 11:20:04,319:INFO:Initializing create_model()
2024-04-14 11:20:04,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:04,320:INFO:Checking exceptions
2024-04-14 11:20:04,323:INFO:Importing libraries
2024-04-14 11:20:04,324:INFO:Copying training dataset
2024-04-14 11:20:04,334:INFO:Defining folds
2024-04-14 11:20:04,334:INFO:Declaring metric variables
2024-04-14 11:20:04,334:INFO:Importing untrained model
2024-04-14 11:20:04,334:INFO:Declaring custom model
2024-04-14 11:20:04,335:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:04,336:INFO:Cross validation set to False
2024-04-14 11:20:04,336:INFO:Fitting Model
2024-04-14 11:20:04,412:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best')
2024-04-14 11:20:04,413:INFO:create_model() successfully completed......................................
2024-04-14 11:20:04,557:INFO:Initializing create_model()
2024-04-14 11:20:04,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8013, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:04,557:INFO:Checking exceptions
2024-04-14 11:20:04,560:INFO:Importing libraries
2024-04-14 11:20:04,560:INFO:Copying training dataset
2024-04-14 11:20:04,568:INFO:Defining folds
2024-04-14 11:20:04,568:INFO:Declaring metric variables
2024-04-14 11:20:04,568:INFO:Importing untrained model
2024-04-14 11:20:04,569:INFO:Declaring custom model
2024-04-14 11:20:04,569:INFO:Logistic Regression Imported successfully
2024-04-14 11:20:04,570:INFO:Cross validation set to False
2024-04-14 11:20:04,570:INFO:Fitting Model
2024-04-14 11:20:04,593:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8013, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:20:04,594:INFO:create_model() successfully completed......................................
2024-04-14 11:20:04,752:INFO:_master_model_container: 2
2024-04-14 11:20:04,752:INFO:_display_container: 2
2024-04-14 11:20:04,753:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8013, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 11:20:04,753:INFO:compare_models() successfully completed......................................
2024-04-14 11:20:04,754:INFO:Initializing predict_model()
2024-04-14 11:20:04,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8013, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F85EF640>)
2024-04-14 11:20:04,754:INFO:Checking exceptions
2024-04-14 11:20:04,755:INFO:Preloading libraries
2024-04-14 11:20:06,085:INFO:Initializing predict_model()
2024-04-14 11:20:06,085:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F84F3E20>)
2024-04-14 11:20:06,085:INFO:Checking exceptions
2024-04-14 11:20:06,085:INFO:Preloading libraries
2024-04-14 11:20:07,002:INFO:Initializing tune_model()
2024-04-14 11:20:07,002:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>)
2024-04-14 11:20:07,002:INFO:Checking exceptions
2024-04-14 11:20:07,021:INFO:Copying training dataset
2024-04-14 11:20:07,028:INFO:Checking base model
2024-04-14 11:20:07,029:INFO:Base model : Decision Tree Classifier
2024-04-14 11:20:07,033:INFO:Declaring metric variables
2024-04-14 11:20:07,038:INFO:Defining Hyperparameters
2024-04-14 11:20:07,209:INFO:Tuning with n_jobs=-1
2024-04-14 11:20:07,209:INFO:Initializing RandomizedSearchCV
2024-04-14 11:20:07,478:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy'}
2024-04-14 11:20:07,478:INFO:Hyperparameter search completed
2024-04-14 11:20:07,478:INFO:SubProcess create_model() called ==================================
2024-04-14 11:20:07,479:INFO:Initializing create_model()
2024-04-14 11:20:07,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6FB95C640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.005, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy'})
2024-04-14 11:20:07,479:INFO:Checking exceptions
2024-04-14 11:20:07,479:INFO:Importing libraries
2024-04-14 11:20:07,479:INFO:Copying training dataset
2024-04-14 11:20:07,487:INFO:Defining folds
2024-04-14 11:20:07,487:INFO:Declaring metric variables
2024-04-14 11:20:07,492:INFO:Importing untrained model
2024-04-14 11:20:07,492:INFO:Declaring custom model
2024-04-14 11:20:07,497:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:07,504:INFO:Starting cross validation
2024-04-14 11:20:07,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:20:07,637:INFO:Calculating mean and std
2024-04-14 11:20:07,638:INFO:Creating metrics dataframe
2024-04-14 11:20:07,644:INFO:Finalizing model
2024-04-14 11:20:07,666:INFO:Uploading results into container
2024-04-14 11:20:07,667:INFO:Uploading model into container now
2024-04-14 11:20:07,668:INFO:_master_model_container: 3
2024-04-14 11:20:07,668:INFO:_display_container: 5
2024-04-14 11:20:07,669:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=9, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best')
2024-04-14 11:20:07,669:INFO:create_model() successfully completed......................................
2024-04-14 11:20:07,818:INFO:SubProcess create_model() end ==================================
2024-04-14 11:20:07,818:INFO:choose_better activated
2024-04-14 11:20:07,823:INFO:SubProcess create_model() called ==================================
2024-04-14 11:20:07,823:INFO:Initializing create_model()
2024-04-14 11:20:07,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:07,824:INFO:Checking exceptions
2024-04-14 11:20:07,825:INFO:Importing libraries
2024-04-14 11:20:07,825:INFO:Copying training dataset
2024-04-14 11:20:07,834:INFO:Defining folds
2024-04-14 11:20:07,834:INFO:Declaring metric variables
2024-04-14 11:20:07,834:INFO:Importing untrained model
2024-04-14 11:20:07,834:INFO:Declaring custom model
2024-04-14 11:20:07,835:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:07,835:INFO:Starting cross validation
2024-04-14 11:20:07,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:20:08,020:INFO:Calculating mean and std
2024-04-14 11:20:08,021:INFO:Creating metrics dataframe
2024-04-14 11:20:08,023:INFO:Finalizing model
2024-04-14 11:20:08,096:INFO:Uploading results into container
2024-04-14 11:20:08,097:INFO:Uploading model into container now
2024-04-14 11:20:08,097:INFO:_master_model_container: 4
2024-04-14 11:20:08,097:INFO:_display_container: 6
2024-04-14 11:20:08,098:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best')
2024-04-14 11:20:08,098:INFO:create_model() successfully completed......................................
2024-04-14 11:20:08,244:INFO:SubProcess create_model() end ==================================
2024-04-14 11:20:08,244:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best') result for F1 is 0.5449
2024-04-14 11:20:08,245:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=9, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best') result for F1 is 0.4759
2024-04-14 11:20:08,245:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best') is best model
2024-04-14 11:20:08,246:INFO:choose_better completed
2024-04-14 11:20:08,246:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 11:20:08,259:INFO:_master_model_container: 4
2024-04-14 11:20:08,259:INFO:_display_container: 5
2024-04-14 11:20:08,260:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best')
2024-04-14 11:20:08,260:INFO:tune_model() successfully completed......................................
2024-04-14 11:20:08,400:INFO:Initializing predict_model()
2024-04-14 11:20:08,400:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F3701510>)
2024-04-14 11:20:08,400:INFO:Checking exceptions
2024-04-14 11:20:08,400:INFO:Preloading libraries
2024-04-14 11:20:08,690:INFO:Initializing finalize_model()
2024-04-14 11:20:08,690:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 11:20:08,691:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best')
2024-04-14 11:20:08,696:INFO:Initializing create_model()
2024-04-14 11:20:08,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6B0043F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8013, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:08,696:INFO:Checking exceptions
2024-04-14 11:20:08,697:INFO:Importing libraries
2024-04-14 11:20:08,698:INFO:Copying training dataset
2024-04-14 11:20:08,698:INFO:Defining folds
2024-04-14 11:20:08,698:INFO:Declaring metric variables
2024-04-14 11:20:08,698:INFO:Importing untrained model
2024-04-14 11:20:08,698:INFO:Declaring custom model
2024-04-14 11:20:08,699:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:08,700:INFO:Cross validation set to False
2024-04-14 11:20:08,700:INFO:Fitting Model
2024-04-14 11:20:08,796:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8013,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:20:08,796:INFO:create_model() successfully completed......................................
2024-04-14 11:20:08,935:INFO:_master_model_container: 4
2024-04-14 11:20:08,936:INFO:_display_container: 6
2024-04-14 11:20:08,944:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8013,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:20:08,944:INFO:finalize_model() successfully completed......................................
2024-04-14 11:20:09,101:INFO:Initializing save_model()
2024-04-14 11:20:09,101:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8013,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 11:20:09,101:INFO:Adding model into prep_pipe
2024-04-14 11:20:09,101:WARNING:Only Model saved as it was a pipeline.
2024-04-14 11:20:09,107:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 11:20:09,116:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8013,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:20:09,116:INFO:save_model() successfully completed......................................
2024-04-14 11:20:09,253:INFO:Initializing load_model()
2024-04-14 11:20:09,253:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 11:20:56,541:INFO:PyCaret ClassificationExperiment
2024-04-14 11:20:56,541:INFO:Logging name: clf-default-name
2024-04-14 11:20:56,541:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:20:56,541:INFO:version 3.3.0
2024-04-14 11:20:56,541:INFO:Initializing setup()
2024-04-14 11:20:56,541:INFO:self.USI: cc36
2024-04-14 11:20:56,541:INFO:self._variable_keys: {'fold_generator', 'seed', '_ml_usecase', 'n_jobs_param', 'idx', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'X_train', 'fold_groups_param', 'fix_imbalance', 'memory', 'USI', 'y_test', 'gpu_param', '_available_plots', 'log_plots_param', 'fold_shuffle_param', 'target_param', 'data', 'is_multiclass', 'exp_id', 'html_param', 'X_test', 'y', 'y_train', 'exp_name_log', 'X'}
2024-04-14 11:20:56,541:INFO:Checking environment
2024-04-14 11:20:56,541:INFO:python_version: 3.10.14
2024-04-14 11:20:56,542:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 11:20:56,542:INFO:machine: AMD64
2024-04-14 11:20:56,542:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 11:20:56,547:INFO:Memory: svmem(total=17131573248, available=2672521216, percent=84.4, used=14459052032, free=2672521216)
2024-04-14 11:20:56,547:INFO:Physical Core: 8
2024-04-14 11:20:56,547:INFO:Logical Core: 16
2024-04-14 11:20:56,547:INFO:Checking libraries
2024-04-14 11:20:56,547:INFO:System:
2024-04-14 11:20:56,547:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 11:20:56,547:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 11:20:56,547:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 11:20:56,547:INFO:PyCaret required dependencies:
2024-04-14 11:20:56,547:INFO:                 pip: 23.3.1
2024-04-14 11:20:56,548:INFO:          setuptools: 68.2.2
2024-04-14 11:20:56,548:INFO:             pycaret: 3.3.0
2024-04-14 11:20:56,548:INFO:             IPython: 8.23.0
2024-04-14 11:20:56,548:INFO:          ipywidgets: 8.1.2
2024-04-14 11:20:56,548:INFO:                tqdm: 4.66.2
2024-04-14 11:20:56,548:INFO:               numpy: 1.26.4
2024-04-14 11:20:56,548:INFO:              pandas: 2.1.4
2024-04-14 11:20:56,548:INFO:              jinja2: 3.1.3
2024-04-14 11:20:56,548:INFO:               scipy: 1.11.4
2024-04-14 11:20:56,548:INFO:              joblib: 1.3.2
2024-04-14 11:20:56,548:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:20:56,548:INFO:                pyod: 1.1.3
2024-04-14 11:20:56,548:INFO:            imblearn: 0.12.2
2024-04-14 11:20:56,548:INFO:   category_encoders: 2.6.3
2024-04-14 11:20:56,548:INFO:            lightgbm: 4.3.0
2024-04-14 11:20:56,549:INFO:               numba: 0.59.1
2024-04-14 11:20:56,549:INFO:            requests: 2.31.0
2024-04-14 11:20:56,549:INFO:          matplotlib: 3.7.5
2024-04-14 11:20:56,549:INFO:          scikitplot: 0.3.7
2024-04-14 11:20:56,549:INFO:         yellowbrick: 1.5
2024-04-14 11:20:56,549:INFO:              plotly: 5.20.0
2024-04-14 11:20:56,549:INFO:    plotly-resampler: Not installed
2024-04-14 11:20:56,549:INFO:             kaleido: 0.2.1
2024-04-14 11:20:56,549:INFO:           schemdraw: 0.15
2024-04-14 11:20:56,549:INFO:         statsmodels: 0.14.1
2024-04-14 11:20:56,549:INFO:              sktime: 0.28.0
2024-04-14 11:20:56,549:INFO:               tbats: 1.1.3
2024-04-14 11:20:56,549:INFO:            pmdarima: 2.0.4
2024-04-14 11:20:56,549:INFO:              psutil: 5.9.8
2024-04-14 11:20:56,549:INFO:          markupsafe: 2.1.5
2024-04-14 11:20:56,550:INFO:             pickle5: Not installed
2024-04-14 11:20:56,550:INFO:         cloudpickle: 3.0.0
2024-04-14 11:20:56,550:INFO:         deprecation: 2.1.0
2024-04-14 11:20:56,550:INFO:              xxhash: 3.4.1
2024-04-14 11:20:56,550:INFO:           wurlitzer: 3.0.3
2024-04-14 11:20:56,550:INFO:PyCaret optional dependencies:
2024-04-14 11:20:56,550:INFO:                shap: Not installed
2024-04-14 11:20:56,550:INFO:           interpret: Not installed
2024-04-14 11:20:56,550:INFO:                umap: Not installed
2024-04-14 11:20:56,550:INFO:     ydata_profiling: Not installed
2024-04-14 11:20:56,550:INFO:  explainerdashboard: Not installed
2024-04-14 11:20:56,550:INFO:             autoviz: Not installed
2024-04-14 11:20:56,550:INFO:           fairlearn: Not installed
2024-04-14 11:20:56,550:INFO:          deepchecks: Not installed
2024-04-14 11:20:56,551:INFO:             xgboost: Not installed
2024-04-14 11:20:56,551:INFO:            catboost: Not installed
2024-04-14 11:20:56,551:INFO:              kmodes: Not installed
2024-04-14 11:20:56,551:INFO:             mlxtend: Not installed
2024-04-14 11:20:56,551:INFO:       statsforecast: Not installed
2024-04-14 11:20:56,551:INFO:        tune_sklearn: Not installed
2024-04-14 11:20:56,551:INFO:                 ray: Not installed
2024-04-14 11:20:56,551:INFO:            hyperopt: Not installed
2024-04-14 11:20:56,551:INFO:              optuna: Not installed
2024-04-14 11:20:56,551:INFO:               skopt: Not installed
2024-04-14 11:20:56,551:INFO:              mlflow: 2.11.3
2024-04-14 11:20:56,551:INFO:              gradio: Not installed
2024-04-14 11:20:56,551:INFO:             fastapi: Not installed
2024-04-14 11:20:56,551:INFO:             uvicorn: Not installed
2024-04-14 11:20:56,551:INFO:              m2cgen: Not installed
2024-04-14 11:20:56,552:INFO:           evidently: Not installed
2024-04-14 11:20:56,552:INFO:               fugue: Not installed
2024-04-14 11:20:56,552:INFO:           streamlit: 1.33.0
2024-04-14 11:20:56,552:INFO:             prophet: Not installed
2024-04-14 11:20:56,552:INFO:None
2024-04-14 11:20:56,552:INFO:Set up data.
2024-04-14 11:20:56,558:INFO:Set up folding strategy.
2024-04-14 11:20:56,558:INFO:Set up train/test split.
2024-04-14 11:20:56,558:INFO:Set up data.
2024-04-14 11:20:56,563:INFO:Set up index.
2024-04-14 11:20:56,564:INFO:Assigning column types.
2024-04-14 11:20:56,570:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:20:56,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:20:56,642:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:20:56,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:56,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:56,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:20:56,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:20:56,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:56,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:56,806:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:20:56,885:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:20:56,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:56,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,005:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:20:57,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,052:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:20:57,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,286:INFO:Preparing preprocessing pipeline...
2024-04-14 11:20:57,287:INFO:Set up simple imputation.
2024-04-14 11:20:57,288:INFO:Set up feature normalization.
2024-04-14 11:20:57,327:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:20:57,334:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:20:57,334:INFO:Creating final display dataframe.
2024-04-14 11:20:57,465:INFO:Setup _display_container:                     Description             Value
0                    Session id              1485
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              cc36
2024-04-14 11:20:57,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:20:57,746:INFO:setup() successfully completed in 1.21s...............
2024-04-14 11:20:57,746:INFO:Initializing compare_models()
2024-04-14 11:20:57,746:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 11:20:57,746:INFO:Checking exceptions
2024-04-14 11:20:57,752:INFO:Preparing display monitor
2024-04-14 11:20:57,776:INFO:Initializing Logistic Regression
2024-04-14 11:20:57,777:INFO:Total runtime is 1.6538302103678384e-05 minutes
2024-04-14 11:20:57,780:INFO:SubProcess create_model() called ==================================
2024-04-14 11:20:57,781:INFO:Initializing create_model()
2024-04-14 11:20:57,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F3F49F60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:57,781:INFO:Checking exceptions
2024-04-14 11:20:57,781:INFO:Importing libraries
2024-04-14 11:20:57,781:INFO:Copying training dataset
2024-04-14 11:20:57,791:INFO:Defining folds
2024-04-14 11:20:57,791:INFO:Declaring metric variables
2024-04-14 11:20:57,796:INFO:Importing untrained model
2024-04-14 11:20:57,800:INFO:Logistic Regression Imported successfully
2024-04-14 11:20:57,808:INFO:Starting cross validation
2024-04-14 11:20:57,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:20:57,945:INFO:Calculating mean and std
2024-04-14 11:20:57,946:INFO:Creating metrics dataframe
2024-04-14 11:20:57,948:INFO:Uploading results into container
2024-04-14 11:20:57,949:INFO:Uploading model into container now
2024-04-14 11:20:57,949:INFO:_master_model_container: 1
2024-04-14 11:20:57,949:INFO:_display_container: 2
2024-04-14 11:20:57,950:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:20:57,950:INFO:create_model() successfully completed......................................
2024-04-14 11:20:58,093:INFO:SubProcess create_model() end ==================================
2024-04-14 11:20:58,093:INFO:Creating metrics dataframe
2024-04-14 11:20:58,102:INFO:Initializing Decision Tree Classifier
2024-04-14 11:20:58,102:INFO:Total runtime is 0.005438129107157389 minutes
2024-04-14 11:20:58,106:INFO:SubProcess create_model() called ==================================
2024-04-14 11:20:58,107:INFO:Initializing create_model()
2024-04-14 11:20:58,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F3F49F60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:58,107:INFO:Checking exceptions
2024-04-14 11:20:58,107:INFO:Importing libraries
2024-04-14 11:20:58,107:INFO:Copying training dataset
2024-04-14 11:20:58,115:INFO:Defining folds
2024-04-14 11:20:58,115:INFO:Declaring metric variables
2024-04-14 11:20:58,119:INFO:Importing untrained model
2024-04-14 11:20:58,124:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:58,131:INFO:Starting cross validation
2024-04-14 11:20:58,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:20:58,311:INFO:Calculating mean and std
2024-04-14 11:20:58,312:INFO:Creating metrics dataframe
2024-04-14 11:20:58,314:INFO:Uploading results into container
2024-04-14 11:20:58,314:INFO:Uploading model into container now
2024-04-14 11:20:58,315:INFO:_master_model_container: 2
2024-04-14 11:20:58,315:INFO:_display_container: 2
2024-04-14 11:20:58,315:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best')
2024-04-14 11:20:58,315:INFO:create_model() successfully completed......................................
2024-04-14 11:20:58,454:INFO:SubProcess create_model() end ==================================
2024-04-14 11:20:58,454:INFO:Creating metrics dataframe
2024-04-14 11:20:58,473:INFO:Initializing create_model()
2024-04-14 11:20:58,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:58,474:INFO:Checking exceptions
2024-04-14 11:20:58,476:INFO:Importing libraries
2024-04-14 11:20:58,476:INFO:Copying training dataset
2024-04-14 11:20:58,484:INFO:Defining folds
2024-04-14 11:20:58,484:INFO:Declaring metric variables
2024-04-14 11:20:58,485:INFO:Importing untrained model
2024-04-14 11:20:58,485:INFO:Declaring custom model
2024-04-14 11:20:58,485:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:20:58,487:INFO:Cross validation set to False
2024-04-14 11:20:58,487:INFO:Fitting Model
2024-04-14 11:20:58,559:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best')
2024-04-14 11:20:58,559:INFO:create_model() successfully completed......................................
2024-04-14 11:20:58,706:INFO:Initializing create_model()
2024-04-14 11:20:58,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:20:58,706:INFO:Checking exceptions
2024-04-14 11:20:58,708:INFO:Importing libraries
2024-04-14 11:20:58,708:INFO:Copying training dataset
2024-04-14 11:20:58,716:INFO:Defining folds
2024-04-14 11:20:58,716:INFO:Declaring metric variables
2024-04-14 11:20:58,717:INFO:Importing untrained model
2024-04-14 11:20:58,717:INFO:Declaring custom model
2024-04-14 11:20:58,718:INFO:Logistic Regression Imported successfully
2024-04-14 11:20:58,719:INFO:Cross validation set to False
2024-04-14 11:20:58,719:INFO:Fitting Model
2024-04-14 11:20:58,742:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:20:58,742:INFO:create_model() successfully completed......................................
2024-04-14 11:20:58,900:INFO:_master_model_container: 2
2024-04-14 11:20:58,900:INFO:_display_container: 2
2024-04-14 11:20:58,901:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 11:20:58,901:INFO:compare_models() successfully completed......................................
2024-04-14 11:20:58,902:INFO:Initializing predict_model()
2024-04-14 11:20:58,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F68132E0>)
2024-04-14 11:20:58,903:INFO:Checking exceptions
2024-04-14 11:20:58,903:INFO:Preloading libraries
2024-04-14 11:21:00,251:INFO:Initializing predict_model()
2024-04-14 11:21:00,251:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F683C3A0>)
2024-04-14 11:21:00,251:INFO:Checking exceptions
2024-04-14 11:21:00,251:INFO:Preloading libraries
2024-04-14 11:21:01,187:INFO:Initializing tune_model()
2024-04-14 11:21:01,188:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>)
2024-04-14 11:21:01,188:INFO:Checking exceptions
2024-04-14 11:21:01,208:INFO:Copying training dataset
2024-04-14 11:21:01,217:INFO:Checking base model
2024-04-14 11:21:01,218:INFO:Base model : Decision Tree Classifier
2024-04-14 11:21:01,224:INFO:Declaring metric variables
2024-04-14 11:21:01,230:INFO:Defining Hyperparameters
2024-04-14 11:21:01,386:INFO:Tuning with n_jobs=-1
2024-04-14 11:21:01,386:INFO:Initializing RandomizedSearchCV
2024-04-14 11:21:01,686:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'entropy'}
2024-04-14 11:21:01,686:INFO:Hyperparameter search completed
2024-04-14 11:21:01,686:INFO:SubProcess create_model() called ==================================
2024-04-14 11:21:01,687:INFO:Initializing create_model()
2024-04-14 11:21:01,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A6F6D2DE70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 12, 'criterion': 'entropy'})
2024-04-14 11:21:01,687:INFO:Checking exceptions
2024-04-14 11:21:01,687:INFO:Importing libraries
2024-04-14 11:21:01,687:INFO:Copying training dataset
2024-04-14 11:21:01,695:INFO:Defining folds
2024-04-14 11:21:01,695:INFO:Declaring metric variables
2024-04-14 11:21:01,699:INFO:Importing untrained model
2024-04-14 11:21:01,700:INFO:Declaring custom model
2024-04-14 11:21:01,704:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:21:01,713:INFO:Starting cross validation
2024-04-14 11:21:01,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:21:01,875:INFO:Calculating mean and std
2024-04-14 11:21:01,876:INFO:Creating metrics dataframe
2024-04-14 11:21:01,882:INFO:Finalizing model
2024-04-14 11:21:01,937:INFO:Uploading results into container
2024-04-14 11:21:01,938:INFO:Uploading model into container now
2024-04-14 11:21:01,938:INFO:_master_model_container: 3
2024-04-14 11:21:01,939:INFO:_display_container: 5
2024-04-14 11:21:01,939:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best')
2024-04-14 11:21:01,939:INFO:create_model() successfully completed......................................
2024-04-14 11:21:02,079:INFO:SubProcess create_model() end ==================================
2024-04-14 11:21:02,079:INFO:choose_better activated
2024-04-14 11:21:02,083:INFO:SubProcess create_model() called ==================================
2024-04-14 11:21:02,084:INFO:Initializing create_model()
2024-04-14 11:21:02,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:21:02,084:INFO:Checking exceptions
2024-04-14 11:21:02,086:INFO:Importing libraries
2024-04-14 11:21:02,086:INFO:Copying training dataset
2024-04-14 11:21:02,094:INFO:Defining folds
2024-04-14 11:21:02,094:INFO:Declaring metric variables
2024-04-14 11:21:02,094:INFO:Importing untrained model
2024-04-14 11:21:02,094:INFO:Declaring custom model
2024-04-14 11:21:02,095:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:21:02,096:INFO:Starting cross validation
2024-04-14 11:21:02,097:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:21:02,267:INFO:Calculating mean and std
2024-04-14 11:21:02,268:INFO:Creating metrics dataframe
2024-04-14 11:21:02,270:INFO:Finalizing model
2024-04-14 11:21:02,342:INFO:Uploading results into container
2024-04-14 11:21:02,343:INFO:Uploading model into container now
2024-04-14 11:21:02,343:INFO:_master_model_container: 4
2024-04-14 11:21:02,343:INFO:_display_container: 6
2024-04-14 11:21:02,344:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best')
2024-04-14 11:21:02,344:INFO:create_model() successfully completed......................................
2024-04-14 11:21:02,485:INFO:SubProcess create_model() end ==================================
2024-04-14 11:21:02,486:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best') result for F1 is 0.5445
2024-04-14 11:21:02,486:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best') result for F1 is 0.5016
2024-04-14 11:21:02,487:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best') is best model
2024-04-14 11:21:02,487:INFO:choose_better completed
2024-04-14 11:21:02,487:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 11:21:02,500:INFO:_master_model_container: 4
2024-04-14 11:21:02,500:INFO:_display_container: 5
2024-04-14 11:21:02,501:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best')
2024-04-14 11:21:02,501:INFO:tune_model() successfully completed......................................
2024-04-14 11:21:02,642:INFO:Initializing predict_model()
2024-04-14 11:21:02,642:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A6F3701510>)
2024-04-14 11:21:02,643:INFO:Checking exceptions
2024-04-14 11:21:02,643:INFO:Preloading libraries
2024-04-14 11:21:02,935:INFO:Initializing finalize_model()
2024-04-14 11:21:02,936:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 11:21:02,936:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best')
2024-04-14 11:21:02,941:INFO:Initializing create_model()
2024-04-14 11:21:02,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A6F8504730>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1485, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:21:02,941:INFO:Checking exceptions
2024-04-14 11:21:02,942:INFO:Importing libraries
2024-04-14 11:21:02,942:INFO:Copying training dataset
2024-04-14 11:21:02,943:INFO:Defining folds
2024-04-14 11:21:02,943:INFO:Declaring metric variables
2024-04-14 11:21:02,943:INFO:Importing untrained model
2024-04-14 11:21:02,943:INFO:Declaring custom model
2024-04-14 11:21:02,944:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:21:02,945:INFO:Cross validation set to False
2024-04-14 11:21:02,945:INFO:Fitting Model
2024-04-14 11:21:03,041:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1485,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:21:03,041:INFO:create_model() successfully completed......................................
2024-04-14 11:21:03,177:INFO:_master_model_container: 4
2024-04-14 11:21:03,177:INFO:_display_container: 6
2024-04-14 11:21:03,186:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1485,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:21:03,186:INFO:finalize_model() successfully completed......................................
2024-04-14 11:21:03,337:INFO:Initializing save_model()
2024-04-14 11:21:03,337:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1485,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 11:21:03,337:INFO:Adding model into prep_pipe
2024-04-14 11:21:03,337:WARNING:Only Model saved as it was a pipeline.
2024-04-14 11:21:03,344:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 11:21:03,352:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1485,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:21:03,352:INFO:save_model() successfully completed......................................
2024-04-14 11:21:03,489:INFO:Initializing load_model()
2024-04-14 11:21:03,489:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 11:25:22,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:25:22,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:25:22,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:25:22,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:25:24,984:INFO:PyCaret ClassificationExperiment
2024-04-14 11:25:24,984:INFO:Logging name: clf-default-name
2024-04-14 11:25:24,984:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:25:24,984:INFO:version 3.3.0
2024-04-14 11:25:24,984:INFO:Initializing setup()
2024-04-14 11:25:24,984:INFO:self.USI: 5ef4
2024-04-14 11:25:24,985:INFO:self._variable_keys: {'gpu_param', 'exp_id', 'seed', 'y_train', 'idx', 'exp_name_log', 'data', 'logging_param', 'X_test', 'log_plots_param', 'fix_imbalance', '_ml_usecase', 'X_train', 'html_param', 'pipeline', 'y_test', 'target_param', 'X', 'gpu_n_jobs_param', 'fold_generator', 'is_multiclass', 'memory', 'fold_groups_param', 'USI', '_available_plots', 'fold_shuffle_param', 'n_jobs_param', 'y'}
2024-04-14 11:25:24,985:INFO:Checking environment
2024-04-14 11:25:24,985:INFO:python_version: 3.10.14
2024-04-14 11:25:24,985:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 11:25:24,985:INFO:machine: AMD64
2024-04-14 11:25:24,985:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 11:25:24,991:INFO:Memory: svmem(total=17131573248, available=5077606400, percent=70.4, used=12053966848, free=5077606400)
2024-04-14 11:25:24,991:INFO:Physical Core: 8
2024-04-14 11:25:24,991:INFO:Logical Core: 16
2024-04-14 11:25:24,991:INFO:Checking libraries
2024-04-14 11:25:24,991:INFO:System:
2024-04-14 11:25:24,991:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 11:25:24,991:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 11:25:24,991:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 11:25:24,991:INFO:PyCaret required dependencies:
2024-04-14 11:25:25,036:INFO:                 pip: 23.3.1
2024-04-14 11:25:25,036:INFO:          setuptools: 68.2.2
2024-04-14 11:25:25,036:INFO:             pycaret: 3.3.0
2024-04-14 11:25:25,037:INFO:             IPython: 8.23.0
2024-04-14 11:25:25,037:INFO:          ipywidgets: 8.1.2
2024-04-14 11:25:25,037:INFO:                tqdm: 4.66.2
2024-04-14 11:25:25,037:INFO:               numpy: 1.26.4
2024-04-14 11:25:25,037:INFO:              pandas: 2.1.4
2024-04-14 11:25:25,037:INFO:              jinja2: 3.1.3
2024-04-14 11:25:25,037:INFO:               scipy: 1.11.4
2024-04-14 11:25:25,037:INFO:              joblib: 1.3.2
2024-04-14 11:25:25,037:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:25:25,037:INFO:                pyod: 1.1.3
2024-04-14 11:25:25,037:INFO:            imblearn: 0.12.2
2024-04-14 11:25:25,037:INFO:   category_encoders: 2.6.3
2024-04-14 11:25:25,037:INFO:            lightgbm: 4.3.0
2024-04-14 11:25:25,037:INFO:               numba: 0.59.1
2024-04-14 11:25:25,038:INFO:            requests: 2.31.0
2024-04-14 11:25:25,038:INFO:          matplotlib: 3.7.5
2024-04-14 11:25:25,038:INFO:          scikitplot: 0.3.7
2024-04-14 11:25:25,038:INFO:         yellowbrick: 1.5
2024-04-14 11:25:25,038:INFO:              plotly: 5.20.0
2024-04-14 11:25:25,038:INFO:    plotly-resampler: Not installed
2024-04-14 11:25:25,038:INFO:             kaleido: 0.2.1
2024-04-14 11:25:25,038:INFO:           schemdraw: 0.15
2024-04-14 11:25:25,038:INFO:         statsmodels: 0.14.1
2024-04-14 11:25:25,038:INFO:              sktime: 0.28.0
2024-04-14 11:25:25,038:INFO:               tbats: 1.1.3
2024-04-14 11:25:25,038:INFO:            pmdarima: 2.0.4
2024-04-14 11:25:25,038:INFO:              psutil: 5.9.8
2024-04-14 11:25:25,038:INFO:          markupsafe: 2.1.5
2024-04-14 11:25:25,039:INFO:             pickle5: Not installed
2024-04-14 11:25:25,039:INFO:         cloudpickle: 3.0.0
2024-04-14 11:25:25,039:INFO:         deprecation: 2.1.0
2024-04-14 11:25:25,039:INFO:              xxhash: 3.4.1
2024-04-14 11:25:25,039:INFO:           wurlitzer: 3.0.3
2024-04-14 11:25:25,039:INFO:PyCaret optional dependencies:
2024-04-14 11:25:25,066:INFO:                shap: Not installed
2024-04-14 11:25:25,066:INFO:           interpret: Not installed
2024-04-14 11:25:25,066:INFO:                umap: Not installed
2024-04-14 11:25:25,066:INFO:     ydata_profiling: Not installed
2024-04-14 11:25:25,066:INFO:  explainerdashboard: Not installed
2024-04-14 11:25:25,066:INFO:             autoviz: Not installed
2024-04-14 11:25:25,066:INFO:           fairlearn: Not installed
2024-04-14 11:25:25,066:INFO:          deepchecks: Not installed
2024-04-14 11:25:25,066:INFO:             xgboost: Not installed
2024-04-14 11:25:25,067:INFO:            catboost: Not installed
2024-04-14 11:25:25,067:INFO:              kmodes: Not installed
2024-04-14 11:25:25,067:INFO:             mlxtend: Not installed
2024-04-14 11:25:25,067:INFO:       statsforecast: Not installed
2024-04-14 11:25:25,067:INFO:        tune_sklearn: Not installed
2024-04-14 11:25:25,067:INFO:                 ray: Not installed
2024-04-14 11:25:25,067:INFO:            hyperopt: Not installed
2024-04-14 11:25:25,067:INFO:              optuna: Not installed
2024-04-14 11:25:25,067:INFO:               skopt: Not installed
2024-04-14 11:25:25,067:INFO:              mlflow: 2.11.3
2024-04-14 11:25:25,067:INFO:              gradio: Not installed
2024-04-14 11:25:25,067:INFO:             fastapi: Not installed
2024-04-14 11:25:25,067:INFO:             uvicorn: Not installed
2024-04-14 11:25:25,067:INFO:              m2cgen: Not installed
2024-04-14 11:25:25,067:INFO:           evidently: Not installed
2024-04-14 11:25:25,068:INFO:               fugue: Not installed
2024-04-14 11:25:25,068:INFO:           streamlit: 1.33.0
2024-04-14 11:25:25,068:INFO:             prophet: Not installed
2024-04-14 11:25:25,068:INFO:None
2024-04-14 11:25:25,068:INFO:Set up data.
2024-04-14 11:25:25,074:INFO:Set up folding strategy.
2024-04-14 11:25:25,075:INFO:Set up train/test split.
2024-04-14 11:25:25,075:INFO:Set up data.
2024-04-14 11:25:25,080:INFO:Set up index.
2024-04-14 11:25:25,080:INFO:Assigning column types.
2024-04-14 11:25:25,086:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:25:25,160:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:25:25,165:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:25:25,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:25:25,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:25:25,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,336:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:25:25,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:25:25,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:25:25,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,567:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:25:25,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:25,802:INFO:Preparing preprocessing pipeline...
2024-04-14 11:25:25,804:INFO:Set up simple imputation.
2024-04-14 11:25:25,804:INFO:Set up feature normalization.
2024-04-14 11:25:25,845:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:25:25,854:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:25:25,854:INFO:Creating final display dataframe.
2024-04-14 11:25:25,991:INFO:Setup _display_container:                     Description             Value
0                    Session id              1170
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5ef4
2024-04-14 11:25:26,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:26,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:26,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:26,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:25:26,237:INFO:setup() successfully completed in 1.25s...............
2024-04-14 11:25:26,237:INFO:Initializing compare_models()
2024-04-14 11:25:26,237:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 11:25:26,237:INFO:Checking exceptions
2024-04-14 11:25:26,243:INFO:Preparing display monitor
2024-04-14 11:25:26,274:INFO:Initializing Logistic Regression
2024-04-14 11:25:26,274:INFO:Total runtime is 0.0 minutes
2024-04-14 11:25:26,278:INFO:SubProcess create_model() called ==================================
2024-04-14 11:25:26,279:INFO:Initializing create_model()
2024-04-14 11:25:26,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027831FEF760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:25:26,279:INFO:Checking exceptions
2024-04-14 11:25:26,279:INFO:Importing libraries
2024-04-14 11:25:26,279:INFO:Copying training dataset
2024-04-14 11:25:26,290:INFO:Defining folds
2024-04-14 11:25:26,290:INFO:Declaring metric variables
2024-04-14 11:25:26,294:INFO:Importing untrained model
2024-04-14 11:25:26,299:INFO:Logistic Regression Imported successfully
2024-04-14 11:25:26,307:INFO:Starting cross validation
2024-04-14 11:25:26,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:25:31,055:INFO:Calculating mean and std
2024-04-14 11:25:31,058:INFO:Creating metrics dataframe
2024-04-14 11:25:31,061:INFO:Uploading results into container
2024-04-14 11:25:31,061:INFO:Uploading model into container now
2024-04-14 11:25:31,062:INFO:_master_model_container: 1
2024-04-14 11:25:31,062:INFO:_display_container: 2
2024-04-14 11:25:31,063:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:25:31,064:INFO:create_model() successfully completed......................................
2024-04-14 11:25:31,188:INFO:SubProcess create_model() end ==================================
2024-04-14 11:25:31,188:INFO:Creating metrics dataframe
2024-04-14 11:25:31,196:INFO:Initializing Decision Tree Classifier
2024-04-14 11:25:31,197:INFO:Total runtime is 0.08205786546071371 minutes
2024-04-14 11:25:31,201:INFO:SubProcess create_model() called ==================================
2024-04-14 11:25:31,201:INFO:Initializing create_model()
2024-04-14 11:25:31,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027831FEF760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:25:31,201:INFO:Checking exceptions
2024-04-14 11:25:31,201:INFO:Importing libraries
2024-04-14 11:25:31,202:INFO:Copying training dataset
2024-04-14 11:25:31,211:INFO:Defining folds
2024-04-14 11:25:31,211:INFO:Declaring metric variables
2024-04-14 11:25:31,216:INFO:Importing untrained model
2024-04-14 11:25:31,220:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:25:31,229:INFO:Starting cross validation
2024-04-14 11:25:31,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:25:34,484:INFO:Calculating mean and std
2024-04-14 11:25:34,487:INFO:Creating metrics dataframe
2024-04-14 11:25:34,490:INFO:Uploading results into container
2024-04-14 11:25:34,492:INFO:Uploading model into container now
2024-04-14 11:25:34,492:INFO:_master_model_container: 2
2024-04-14 11:25:34,493:INFO:_display_container: 2
2024-04-14 11:25:34,493:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best')
2024-04-14 11:25:34,493:INFO:create_model() successfully completed......................................
2024-04-14 11:25:34,623:INFO:SubProcess create_model() end ==================================
2024-04-14 11:25:34,623:INFO:Creating metrics dataframe
2024-04-14 11:25:34,644:INFO:Initializing create_model()
2024-04-14 11:25:34,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:25:34,644:INFO:Checking exceptions
2024-04-14 11:25:34,646:INFO:Importing libraries
2024-04-14 11:25:34,647:INFO:Copying training dataset
2024-04-14 11:25:34,655:INFO:Defining folds
2024-04-14 11:25:34,655:INFO:Declaring metric variables
2024-04-14 11:25:34,655:INFO:Importing untrained model
2024-04-14 11:25:34,655:INFO:Declaring custom model
2024-04-14 11:25:34,656:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:25:34,657:INFO:Cross validation set to False
2024-04-14 11:25:34,657:INFO:Fitting Model
2024-04-14 11:25:34,735:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best')
2024-04-14 11:25:34,735:INFO:create_model() successfully completed......................................
2024-04-14 11:25:34,845:INFO:Initializing create_model()
2024-04-14 11:25:34,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:25:34,846:INFO:Checking exceptions
2024-04-14 11:25:34,848:INFO:Importing libraries
2024-04-14 11:25:34,848:INFO:Copying training dataset
2024-04-14 11:25:34,856:INFO:Defining folds
2024-04-14 11:25:34,857:INFO:Declaring metric variables
2024-04-14 11:25:34,857:INFO:Importing untrained model
2024-04-14 11:25:34,857:INFO:Declaring custom model
2024-04-14 11:25:34,858:INFO:Logistic Regression Imported successfully
2024-04-14 11:25:34,859:INFO:Cross validation set to False
2024-04-14 11:25:34,859:INFO:Fitting Model
2024-04-14 11:25:34,883:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:25:34,883:INFO:create_model() successfully completed......................................
2024-04-14 11:25:35,010:INFO:_master_model_container: 2
2024-04-14 11:25:35,010:INFO:_display_container: 2
2024-04-14 11:25:35,011:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 11:25:35,012:INFO:compare_models() successfully completed......................................
2024-04-14 11:25:35,012:INFO:Initializing predict_model()
2024-04-14 11:25:35,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027831115D80>)
2024-04-14 11:25:35,013:INFO:Checking exceptions
2024-04-14 11:25:35,013:INFO:Preloading libraries
2024-04-14 11:25:36,437:INFO:Initializing predict_model()
2024-04-14 11:25:36,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027831DD2B00>)
2024-04-14 11:25:36,437:INFO:Checking exceptions
2024-04-14 11:25:36,437:INFO:Preloading libraries
2024-04-14 11:25:37,315:INFO:Initializing tune_model()
2024-04-14 11:25:37,315:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>)
2024-04-14 11:25:37,315:INFO:Checking exceptions
2024-04-14 11:25:37,337:INFO:Copying training dataset
2024-04-14 11:25:37,344:INFO:Checking base model
2024-04-14 11:25:37,344:INFO:Base model : Decision Tree Classifier
2024-04-14 11:25:37,349:INFO:Declaring metric variables
2024-04-14 11:25:37,353:INFO:Defining Hyperparameters
2024-04-14 11:25:37,467:INFO:Tuning with n_jobs=-1
2024-04-14 11:25:37,467:INFO:Initializing RandomizedSearchCV
2024-04-14 11:25:37,744:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini'}
2024-04-14 11:25:37,744:INFO:Hyperparameter search completed
2024-04-14 11:25:37,744:INFO:SubProcess create_model() called ==================================
2024-04-14 11:25:37,745:INFO:Initializing create_model()
2024-04-14 11:25:37,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027833264610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'gini'})
2024-04-14 11:25:37,745:INFO:Checking exceptions
2024-04-14 11:25:37,745:INFO:Importing libraries
2024-04-14 11:25:37,745:INFO:Copying training dataset
2024-04-14 11:25:37,754:INFO:Defining folds
2024-04-14 11:25:37,754:INFO:Declaring metric variables
2024-04-14 11:25:37,759:INFO:Importing untrained model
2024-04-14 11:25:37,759:INFO:Declaring custom model
2024-04-14 11:25:37,764:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:25:37,772:INFO:Starting cross validation
2024-04-14 11:25:37,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:25:37,916:INFO:Calculating mean and std
2024-04-14 11:25:37,917:INFO:Creating metrics dataframe
2024-04-14 11:25:37,923:INFO:Finalizing model
2024-04-14 11:25:37,953:INFO:Uploading results into container
2024-04-14 11:25:37,953:INFO:Uploading model into container now
2024-04-14 11:25:37,954:INFO:_master_model_container: 3
2024-04-14 11:25:37,954:INFO:_display_container: 5
2024-04-14 11:25:37,955:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=9, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best')
2024-04-14 11:25:37,955:INFO:create_model() successfully completed......................................
2024-04-14 11:25:38,061:INFO:SubProcess create_model() end ==================================
2024-04-14 11:25:38,061:INFO:choose_better activated
2024-04-14 11:25:38,065:INFO:SubProcess create_model() called ==================================
2024-04-14 11:25:38,066:INFO:Initializing create_model()
2024-04-14 11:25:38,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:25:38,066:INFO:Checking exceptions
2024-04-14 11:25:38,068:INFO:Importing libraries
2024-04-14 11:25:38,068:INFO:Copying training dataset
2024-04-14 11:25:38,076:INFO:Defining folds
2024-04-14 11:25:38,076:INFO:Declaring metric variables
2024-04-14 11:25:38,077:INFO:Importing untrained model
2024-04-14 11:25:38,077:INFO:Declaring custom model
2024-04-14 11:25:38,077:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:25:38,078:INFO:Starting cross validation
2024-04-14 11:25:38,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:25:38,265:INFO:Calculating mean and std
2024-04-14 11:25:38,266:INFO:Creating metrics dataframe
2024-04-14 11:25:38,268:INFO:Finalizing model
2024-04-14 11:25:38,345:INFO:Uploading results into container
2024-04-14 11:25:38,346:INFO:Uploading model into container now
2024-04-14 11:25:38,347:INFO:_master_model_container: 4
2024-04-14 11:25:38,347:INFO:_display_container: 6
2024-04-14 11:25:38,347:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best')
2024-04-14 11:25:38,347:INFO:create_model() successfully completed......................................
2024-04-14 11:25:38,453:INFO:SubProcess create_model() end ==================================
2024-04-14 11:25:38,454:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best') result for F1 is 0.5504
2024-04-14 11:25:38,455:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=9, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best') result for F1 is 0.4713
2024-04-14 11:25:38,455:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best') is best model
2024-04-14 11:25:38,455:INFO:choose_better completed
2024-04-14 11:25:38,456:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 11:25:38,470:INFO:_master_model_container: 4
2024-04-14 11:25:38,470:INFO:_display_container: 5
2024-04-14 11:25:38,471:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best')
2024-04-14 11:25:38,471:INFO:tune_model() successfully completed......................................
2024-04-14 11:25:38,589:INFO:Initializing predict_model()
2024-04-14 11:25:38,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000278311C9BD0>)
2024-04-14 11:25:38,589:INFO:Checking exceptions
2024-04-14 11:25:38,589:INFO:Preloading libraries
2024-04-14 11:25:38,856:INFO:Initializing finalize_model()
2024-04-14 11:25:38,856:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 11:25:38,856:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best')
2024-04-14 11:25:38,861:INFO:Initializing create_model()
2024-04-14 11:25:38,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831521B40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1170, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:25:38,861:INFO:Checking exceptions
2024-04-14 11:25:38,863:INFO:Importing libraries
2024-04-14 11:25:38,863:INFO:Copying training dataset
2024-04-14 11:25:38,863:INFO:Defining folds
2024-04-14 11:25:38,863:INFO:Declaring metric variables
2024-04-14 11:25:38,864:INFO:Importing untrained model
2024-04-14 11:25:38,864:INFO:Declaring custom model
2024-04-14 11:25:38,864:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:25:38,865:INFO:Cross validation set to False
2024-04-14 11:25:38,866:INFO:Fitting Model
2024-04-14 11:25:38,967:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1170,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:25:38,967:INFO:create_model() successfully completed......................................
2024-04-14 11:25:39,072:INFO:_master_model_container: 4
2024-04-14 11:25:39,072:INFO:_display_container: 6
2024-04-14 11:25:39,081:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1170,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:25:39,081:INFO:finalize_model() successfully completed......................................
2024-04-14 11:25:39,200:INFO:Initializing save_model()
2024-04-14 11:25:39,201:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1170,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 11:25:39,201:INFO:Adding model into prep_pipe
2024-04-14 11:25:39,201:WARNING:Only Model saved as it was a pipeline.
2024-04-14 11:25:39,207:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 11:25:39,216:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1170,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:25:39,216:INFO:save_model() successfully completed......................................
2024-04-14 11:25:39,323:INFO:Initializing load_model()
2024-04-14 11:25:39,323:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 11:43:33,795:INFO:PyCaret ClassificationExperiment
2024-04-14 11:43:33,795:INFO:Logging name: clf-default-name
2024-04-14 11:43:33,795:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:43:33,795:INFO:version 3.3.0
2024-04-14 11:43:33,795:INFO:Initializing setup()
2024-04-14 11:43:33,795:INFO:self.USI: dc02
2024-04-14 11:43:33,795:INFO:self._variable_keys: {'gpu_param', 'exp_id', 'seed', 'y_train', 'idx', 'exp_name_log', 'data', 'logging_param', 'X_test', 'log_plots_param', 'fix_imbalance', '_ml_usecase', 'X_train', 'html_param', 'pipeline', 'y_test', 'target_param', 'X', 'gpu_n_jobs_param', 'fold_generator', 'is_multiclass', 'memory', 'fold_groups_param', 'USI', '_available_plots', 'fold_shuffle_param', 'n_jobs_param', 'y'}
2024-04-14 11:43:33,795:INFO:Checking environment
2024-04-14 11:43:33,795:INFO:python_version: 3.10.14
2024-04-14 11:43:33,796:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 11:43:33,796:INFO:machine: AMD64
2024-04-14 11:43:33,796:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 11:43:33,800:INFO:Memory: svmem(total=17131573248, available=5715865600, percent=66.6, used=11415707648, free=5715865600)
2024-04-14 11:43:33,801:INFO:Physical Core: 8
2024-04-14 11:43:33,801:INFO:Logical Core: 16
2024-04-14 11:43:33,801:INFO:Checking libraries
2024-04-14 11:43:33,801:INFO:System:
2024-04-14 11:43:33,801:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 11:43:33,801:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 11:43:33,801:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 11:43:33,801:INFO:PyCaret required dependencies:
2024-04-14 11:43:33,801:INFO:                 pip: 23.3.1
2024-04-14 11:43:33,801:INFO:          setuptools: 68.2.2
2024-04-14 11:43:33,801:INFO:             pycaret: 3.3.0
2024-04-14 11:43:33,801:INFO:             IPython: 8.23.0
2024-04-14 11:43:33,802:INFO:          ipywidgets: 8.1.2
2024-04-14 11:43:33,802:INFO:                tqdm: 4.66.2
2024-04-14 11:43:33,802:INFO:               numpy: 1.26.4
2024-04-14 11:43:33,802:INFO:              pandas: 2.1.4
2024-04-14 11:43:33,802:INFO:              jinja2: 3.1.3
2024-04-14 11:43:33,802:INFO:               scipy: 1.11.4
2024-04-14 11:43:33,802:INFO:              joblib: 1.3.2
2024-04-14 11:43:33,802:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:43:33,802:INFO:                pyod: 1.1.3
2024-04-14 11:43:33,802:INFO:            imblearn: 0.12.2
2024-04-14 11:43:33,802:INFO:   category_encoders: 2.6.3
2024-04-14 11:43:33,802:INFO:            lightgbm: 4.3.0
2024-04-14 11:43:33,802:INFO:               numba: 0.59.1
2024-04-14 11:43:33,802:INFO:            requests: 2.31.0
2024-04-14 11:43:33,802:INFO:          matplotlib: 3.7.5
2024-04-14 11:43:33,803:INFO:          scikitplot: 0.3.7
2024-04-14 11:43:33,803:INFO:         yellowbrick: 1.5
2024-04-14 11:43:33,803:INFO:              plotly: 5.20.0
2024-04-14 11:43:33,803:INFO:    plotly-resampler: Not installed
2024-04-14 11:43:33,803:INFO:             kaleido: 0.2.1
2024-04-14 11:43:33,803:INFO:           schemdraw: 0.15
2024-04-14 11:43:33,803:INFO:         statsmodels: 0.14.1
2024-04-14 11:43:33,803:INFO:              sktime: 0.28.0
2024-04-14 11:43:33,803:INFO:               tbats: 1.1.3
2024-04-14 11:43:33,803:INFO:            pmdarima: 2.0.4
2024-04-14 11:43:33,803:INFO:              psutil: 5.9.8
2024-04-14 11:43:33,803:INFO:          markupsafe: 2.1.5
2024-04-14 11:43:33,804:INFO:             pickle5: Not installed
2024-04-14 11:43:33,804:INFO:         cloudpickle: 3.0.0
2024-04-14 11:43:33,804:INFO:         deprecation: 2.1.0
2024-04-14 11:43:33,804:INFO:              xxhash: 3.4.1
2024-04-14 11:43:33,804:INFO:           wurlitzer: 3.0.3
2024-04-14 11:43:33,804:INFO:PyCaret optional dependencies:
2024-04-14 11:43:33,804:INFO:                shap: Not installed
2024-04-14 11:43:33,804:INFO:           interpret: Not installed
2024-04-14 11:43:33,804:INFO:                umap: Not installed
2024-04-14 11:43:33,804:INFO:     ydata_profiling: Not installed
2024-04-14 11:43:33,804:INFO:  explainerdashboard: Not installed
2024-04-14 11:43:33,804:INFO:             autoviz: Not installed
2024-04-14 11:43:33,804:INFO:           fairlearn: Not installed
2024-04-14 11:43:33,804:INFO:          deepchecks: Not installed
2024-04-14 11:43:33,805:INFO:             xgboost: Not installed
2024-04-14 11:43:33,805:INFO:            catboost: Not installed
2024-04-14 11:43:33,805:INFO:              kmodes: Not installed
2024-04-14 11:43:33,805:INFO:             mlxtend: Not installed
2024-04-14 11:43:33,805:INFO:       statsforecast: Not installed
2024-04-14 11:43:33,805:INFO:        tune_sklearn: Not installed
2024-04-14 11:43:33,805:INFO:                 ray: Not installed
2024-04-14 11:43:33,805:INFO:            hyperopt: Not installed
2024-04-14 11:43:33,805:INFO:              optuna: Not installed
2024-04-14 11:43:33,805:INFO:               skopt: Not installed
2024-04-14 11:43:33,805:INFO:              mlflow: 2.11.3
2024-04-14 11:43:33,805:INFO:              gradio: Not installed
2024-04-14 11:43:33,805:INFO:             fastapi: Not installed
2024-04-14 11:43:33,805:INFO:             uvicorn: Not installed
2024-04-14 11:43:33,806:INFO:              m2cgen: Not installed
2024-04-14 11:43:33,806:INFO:           evidently: Not installed
2024-04-14 11:43:33,806:INFO:               fugue: Not installed
2024-04-14 11:43:33,806:INFO:           streamlit: 1.33.0
2024-04-14 11:43:33,806:INFO:             prophet: Not installed
2024-04-14 11:43:33,806:INFO:None
2024-04-14 11:43:33,806:INFO:Set up data.
2024-04-14 11:43:33,813:INFO:Set up folding strategy.
2024-04-14 11:43:33,813:INFO:Set up train/test split.
2024-04-14 11:43:33,813:INFO:Set up data.
2024-04-14 11:43:33,818:INFO:Set up index.
2024-04-14 11:43:33,818:INFO:Assigning column types.
2024-04-14 11:43:33,825:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:43:33,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:43:33,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:33,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:33,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:43:34,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:34,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,061:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:43:34,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:34,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:34,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,296:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:43:34,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,531:INFO:Preparing preprocessing pipeline...
2024-04-14 11:43:34,533:INFO:Set up simple imputation.
2024-04-14 11:43:34,533:INFO:Set up feature normalization.
2024-04-14 11:43:34,572:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:43:34,579:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:43:34,579:INFO:Creating final display dataframe.
2024-04-14 11:43:34,713:INFO:Setup _display_container:                     Description             Value
0                    Session id              8664
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              dc02
2024-04-14 11:43:34,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:34,962:INFO:setup() successfully completed in 1.17s...............
2024-04-14 11:43:34,962:INFO:Initializing compare_models()
2024-04-14 11:43:34,962:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 11:43:34,962:INFO:Checking exceptions
2024-04-14 11:43:34,968:INFO:Preparing display monitor
2024-04-14 11:43:34,994:INFO:Initializing Logistic Regression
2024-04-14 11:43:34,994:INFO:Total runtime is 0.0 minutes
2024-04-14 11:43:34,998:INFO:SubProcess create_model() called ==================================
2024-04-14 11:43:34,999:INFO:Initializing create_model()
2024-04-14 11:43:34,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000278330B4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:34,999:INFO:Checking exceptions
2024-04-14 11:43:34,999:INFO:Importing libraries
2024-04-14 11:43:34,999:INFO:Copying training dataset
2024-04-14 11:43:35,010:INFO:Defining folds
2024-04-14 11:43:35,010:INFO:Declaring metric variables
2024-04-14 11:43:35,014:INFO:Importing untrained model
2024-04-14 11:43:35,018:INFO:Logistic Regression Imported successfully
2024-04-14 11:43:35,026:INFO:Starting cross validation
2024-04-14 11:43:35,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:43:39,945:INFO:Calculating mean and std
2024-04-14 11:43:39,948:INFO:Creating metrics dataframe
2024-04-14 11:43:39,953:INFO:Uploading results into container
2024-04-14 11:43:39,954:INFO:Uploading model into container now
2024-04-14 11:43:39,955:INFO:_master_model_container: 1
2024-04-14 11:43:39,956:INFO:_display_container: 2
2024-04-14 11:43:39,956:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8664, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:43:39,956:INFO:create_model() successfully completed......................................
2024-04-14 11:43:40,115:INFO:SubProcess create_model() end ==================================
2024-04-14 11:43:40,115:INFO:Creating metrics dataframe
2024-04-14 11:43:40,124:INFO:Initializing Decision Tree Classifier
2024-04-14 11:43:40,124:INFO:Total runtime is 0.08551100492477418 minutes
2024-04-14 11:43:40,129:INFO:SubProcess create_model() called ==================================
2024-04-14 11:43:40,130:INFO:Initializing create_model()
2024-04-14 11:43:40,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000278330B4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:40,130:INFO:Checking exceptions
2024-04-14 11:43:40,130:INFO:Importing libraries
2024-04-14 11:43:40,130:INFO:Copying training dataset
2024-04-14 11:43:40,139:INFO:Defining folds
2024-04-14 11:43:40,139:INFO:Declaring metric variables
2024-04-14 11:43:40,144:INFO:Importing untrained model
2024-04-14 11:43:40,148:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:43:40,156:INFO:Starting cross validation
2024-04-14 11:43:40,157:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:43:43,533:INFO:Calculating mean and std
2024-04-14 11:43:43,536:INFO:Creating metrics dataframe
2024-04-14 11:43:43,540:INFO:Uploading results into container
2024-04-14 11:43:43,541:INFO:Uploading model into container now
2024-04-14 11:43:43,542:INFO:_master_model_container: 2
2024-04-14 11:43:43,542:INFO:_display_container: 2
2024-04-14 11:43:43,543:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best')
2024-04-14 11:43:43,543:INFO:create_model() successfully completed......................................
2024-04-14 11:43:43,710:INFO:SubProcess create_model() end ==================================
2024-04-14 11:43:43,710:INFO:Creating metrics dataframe
2024-04-14 11:43:43,731:INFO:Initializing create_model()
2024-04-14 11:43:43,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:43,732:INFO:Checking exceptions
2024-04-14 11:43:43,734:INFO:Importing libraries
2024-04-14 11:43:43,734:INFO:Copying training dataset
2024-04-14 11:43:43,743:INFO:Defining folds
2024-04-14 11:43:43,743:INFO:Declaring metric variables
2024-04-14 11:43:43,743:INFO:Importing untrained model
2024-04-14 11:43:43,743:INFO:Declaring custom model
2024-04-14 11:43:43,744:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:43:43,745:INFO:Cross validation set to False
2024-04-14 11:43:43,746:INFO:Fitting Model
2024-04-14 11:43:43,826:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best')
2024-04-14 11:43:43,827:INFO:create_model() successfully completed......................................
2024-04-14 11:43:43,971:INFO:Initializing create_model()
2024-04-14 11:43:43,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8664, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:43,971:INFO:Checking exceptions
2024-04-14 11:43:43,973:INFO:Importing libraries
2024-04-14 11:43:43,974:INFO:Copying training dataset
2024-04-14 11:43:43,982:INFO:Defining folds
2024-04-14 11:43:43,982:INFO:Declaring metric variables
2024-04-14 11:43:43,982:INFO:Importing untrained model
2024-04-14 11:43:43,982:INFO:Declaring custom model
2024-04-14 11:43:43,983:INFO:Logistic Regression Imported successfully
2024-04-14 11:43:43,984:INFO:Cross validation set to False
2024-04-14 11:43:43,984:INFO:Fitting Model
2024-04-14 11:43:44,007:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8664, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:43:44,008:INFO:create_model() successfully completed......................................
2024-04-14 11:43:44,164:INFO:_master_model_container: 2
2024-04-14 11:43:44,164:INFO:_display_container: 2
2024-04-14 11:43:44,165:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8664, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 11:43:44,166:INFO:compare_models() successfully completed......................................
2024-04-14 11:43:44,166:INFO:Initializing predict_model()
2024-04-14 11:43:44,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8664, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000278311160E0>)
2024-04-14 11:43:44,167:INFO:Checking exceptions
2024-04-14 11:43:44,167:INFO:Preloading libraries
2024-04-14 11:43:45,475:INFO:Initializing predict_model()
2024-04-14 11:43:45,475:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002783325B9A0>)
2024-04-14 11:43:45,475:INFO:Checking exceptions
2024-04-14 11:43:45,475:INFO:Preloading libraries
2024-04-14 11:43:46,368:INFO:Initializing tune_model()
2024-04-14 11:43:46,368:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>)
2024-04-14 11:43:46,368:INFO:Checking exceptions
2024-04-14 11:43:46,388:INFO:Copying training dataset
2024-04-14 11:43:46,396:INFO:Checking base model
2024-04-14 11:43:46,396:INFO:Base model : Decision Tree Classifier
2024-04-14 11:43:46,401:INFO:Declaring metric variables
2024-04-14 11:43:46,405:INFO:Defining Hyperparameters
2024-04-14 11:43:46,548:INFO:Tuning with n_jobs=-1
2024-04-14 11:43:46,548:INFO:Initializing RandomizedSearchCV
2024-04-14 11:43:46,809:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'entropy'}
2024-04-14 11:43:46,809:INFO:Hyperparameter search completed
2024-04-14 11:43:46,809:INFO:SubProcess create_model() called ==================================
2024-04-14 11:43:46,810:INFO:Initializing create_model()
2024-04-14 11:43:46,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027831B7E530>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 'sqrt', 'max_depth': 12, 'criterion': 'entropy'})
2024-04-14 11:43:46,810:INFO:Checking exceptions
2024-04-14 11:43:46,810:INFO:Importing libraries
2024-04-14 11:43:46,810:INFO:Copying training dataset
2024-04-14 11:43:46,818:INFO:Defining folds
2024-04-14 11:43:46,818:INFO:Declaring metric variables
2024-04-14 11:43:46,823:INFO:Importing untrained model
2024-04-14 11:43:46,823:INFO:Declaring custom model
2024-04-14 11:43:46,828:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:43:46,835:INFO:Starting cross validation
2024-04-14 11:43:46,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:43:46,982:INFO:Calculating mean and std
2024-04-14 11:43:46,983:INFO:Creating metrics dataframe
2024-04-14 11:43:46,990:INFO:Finalizing model
2024-04-14 11:43:47,013:INFO:Uploading results into container
2024-04-14 11:43:47,014:INFO:Uploading model into container now
2024-04-14 11:43:47,014:INFO:_master_model_container: 3
2024-04-14 11:43:47,015:INFO:_display_container: 5
2024-04-14 11:43:47,015:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best')
2024-04-14 11:43:47,015:INFO:create_model() successfully completed......................................
2024-04-14 11:43:47,155:INFO:SubProcess create_model() end ==================================
2024-04-14 11:43:47,155:INFO:choose_better activated
2024-04-14 11:43:47,159:INFO:SubProcess create_model() called ==================================
2024-04-14 11:43:47,160:INFO:Initializing create_model()
2024-04-14 11:43:47,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:47,161:INFO:Checking exceptions
2024-04-14 11:43:47,163:INFO:Importing libraries
2024-04-14 11:43:47,163:INFO:Copying training dataset
2024-04-14 11:43:47,171:INFO:Defining folds
2024-04-14 11:43:47,171:INFO:Declaring metric variables
2024-04-14 11:43:47,171:INFO:Importing untrained model
2024-04-14 11:43:47,171:INFO:Declaring custom model
2024-04-14 11:43:47,172:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:43:47,172:INFO:Starting cross validation
2024-04-14 11:43:47,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:43:47,346:INFO:Calculating mean and std
2024-04-14 11:43:47,347:INFO:Creating metrics dataframe
2024-04-14 11:43:47,349:INFO:Finalizing model
2024-04-14 11:43:47,426:INFO:Uploading results into container
2024-04-14 11:43:47,426:INFO:Uploading model into container now
2024-04-14 11:43:47,427:INFO:_master_model_container: 4
2024-04-14 11:43:47,427:INFO:_display_container: 6
2024-04-14 11:43:47,427:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best')
2024-04-14 11:43:47,427:INFO:create_model() successfully completed......................................
2024-04-14 11:43:47,567:INFO:SubProcess create_model() end ==================================
2024-04-14 11:43:47,568:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best') result for F1 is 0.551
2024-04-14 11:43:47,569:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best') result for F1 is 0.4606
2024-04-14 11:43:47,569:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best') is best model
2024-04-14 11:43:47,569:INFO:choose_better completed
2024-04-14 11:43:47,570:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 11:43:47,583:INFO:_master_model_container: 4
2024-04-14 11:43:47,583:INFO:_display_container: 5
2024-04-14 11:43:47,584:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best')
2024-04-14 11:43:47,584:INFO:tune_model() successfully completed......................................
2024-04-14 11:43:47,741:INFO:Initializing predict_model()
2024-04-14 11:43:47,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027831116050>)
2024-04-14 11:43:47,741:INFO:Checking exceptions
2024-04-14 11:43:47,741:INFO:Preloading libraries
2024-04-14 11:43:48,039:INFO:Initializing finalize_model()
2024-04-14 11:43:48,040:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 11:43:48,040:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best')
2024-04-14 11:43:48,045:INFO:Initializing create_model()
2024-04-14 11:43:48,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027831DE2D40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8664, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:48,045:INFO:Checking exceptions
2024-04-14 11:43:48,047:INFO:Importing libraries
2024-04-14 11:43:48,047:INFO:Copying training dataset
2024-04-14 11:43:48,048:INFO:Defining folds
2024-04-14 11:43:48,048:INFO:Declaring metric variables
2024-04-14 11:43:48,048:INFO:Importing untrained model
2024-04-14 11:43:48,048:INFO:Declaring custom model
2024-04-14 11:43:48,049:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:43:48,050:INFO:Cross validation set to False
2024-04-14 11:43:48,050:INFO:Fitting Model
2024-04-14 11:43:48,150:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8664,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:43:48,150:INFO:create_model() successfully completed......................................
2024-04-14 11:43:48,292:INFO:_master_model_container: 4
2024-04-14 11:43:48,292:INFO:_display_container: 6
2024-04-14 11:43:48,300:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8664,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:43:48,300:INFO:finalize_model() successfully completed......................................
2024-04-14 11:43:48,456:INFO:Initializing save_model()
2024-04-14 11:43:48,456:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8664,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 11:43:48,456:INFO:Adding model into prep_pipe
2024-04-14 11:43:48,456:WARNING:Only Model saved as it was a pipeline.
2024-04-14 11:43:48,463:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 11:43:48,471:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8664,
                                        splitter='best'))],
         verbose=False)
2024-04-14 11:43:48,471:INFO:save_model() successfully completed......................................
2024-04-14 11:43:48,613:INFO:Initializing load_model()
2024-04-14 11:43:48,614:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 14:22:43,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:22:43,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:22:43,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:22:43,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:22:46,095:INFO:PyCaret ClassificationExperiment
2024-04-14 14:22:46,095:INFO:Logging name: clf-default-name
2024-04-14 14:22:46,095:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 14:22:46,095:INFO:version 3.3.0
2024-04-14 14:22:46,095:INFO:Initializing setup()
2024-04-14 14:22:46,095:INFO:self.USI: b75d
2024-04-14 14:22:46,096:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'y', 'exp_name_log', 'gpu_n_jobs_param', 'fold_groups_param', 'pipeline', 'idx', 'memory', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'y_train', 'X', 'html_param', 'target_param', 'exp_id', 'n_jobs_param', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_param', 'USI', 'logging_param', 'y_test', 'data', '_available_plots', 'seed'}
2024-04-14 14:22:46,096:INFO:Checking environment
2024-04-14 14:22:46,096:INFO:python_version: 3.10.14
2024-04-14 14:22:46,096:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 14:22:46,096:INFO:machine: AMD64
2024-04-14 14:22:46,096:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 14:22:46,101:INFO:Memory: svmem(total=17131573248, available=6288756736, percent=63.3, used=10842816512, free=6288756736)
2024-04-14 14:22:46,101:INFO:Physical Core: 8
2024-04-14 14:22:46,101:INFO:Logical Core: 16
2024-04-14 14:22:46,101:INFO:Checking libraries
2024-04-14 14:22:46,101:INFO:System:
2024-04-14 14:22:46,101:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 14:22:46,101:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 14:22:46,101:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 14:22:46,101:INFO:PyCaret required dependencies:
2024-04-14 14:22:46,144:INFO:                 pip: 23.3.1
2024-04-14 14:22:46,144:INFO:          setuptools: 68.2.2
2024-04-14 14:22:46,144:INFO:             pycaret: 3.3.0
2024-04-14 14:22:46,144:INFO:             IPython: 8.23.0
2024-04-14 14:22:46,144:INFO:          ipywidgets: 8.1.2
2024-04-14 14:22:46,144:INFO:                tqdm: 4.66.2
2024-04-14 14:22:46,145:INFO:               numpy: 1.26.4
2024-04-14 14:22:46,145:INFO:              pandas: 2.1.4
2024-04-14 14:22:46,145:INFO:              jinja2: 3.1.3
2024-04-14 14:22:46,145:INFO:               scipy: 1.11.4
2024-04-14 14:22:46,145:INFO:              joblib: 1.3.2
2024-04-14 14:22:46,145:INFO:             sklearn: 1.4.1.post1
2024-04-14 14:22:46,145:INFO:                pyod: 1.1.3
2024-04-14 14:22:46,145:INFO:            imblearn: 0.12.2
2024-04-14 14:22:46,145:INFO:   category_encoders: 2.6.3
2024-04-14 14:22:46,145:INFO:            lightgbm: 4.3.0
2024-04-14 14:22:46,145:INFO:               numba: 0.59.1
2024-04-14 14:22:46,145:INFO:            requests: 2.31.0
2024-04-14 14:22:46,145:INFO:          matplotlib: 3.7.5
2024-04-14 14:22:46,145:INFO:          scikitplot: 0.3.7
2024-04-14 14:22:46,145:INFO:         yellowbrick: 1.5
2024-04-14 14:22:46,146:INFO:              plotly: 5.20.0
2024-04-14 14:22:46,146:INFO:    plotly-resampler: Not installed
2024-04-14 14:22:46,146:INFO:             kaleido: 0.2.1
2024-04-14 14:22:46,146:INFO:           schemdraw: 0.15
2024-04-14 14:22:46,146:INFO:         statsmodels: 0.14.1
2024-04-14 14:22:46,146:INFO:              sktime: 0.28.0
2024-04-14 14:22:46,146:INFO:               tbats: 1.1.3
2024-04-14 14:22:46,146:INFO:            pmdarima: 2.0.4
2024-04-14 14:22:46,146:INFO:              psutil: 5.9.8
2024-04-14 14:22:46,146:INFO:          markupsafe: 2.1.5
2024-04-14 14:22:46,146:INFO:             pickle5: Not installed
2024-04-14 14:22:46,146:INFO:         cloudpickle: 3.0.0
2024-04-14 14:22:46,146:INFO:         deprecation: 2.1.0
2024-04-14 14:22:46,146:INFO:              xxhash: 3.4.1
2024-04-14 14:22:46,146:INFO:           wurlitzer: 3.0.3
2024-04-14 14:22:46,147:INFO:PyCaret optional dependencies:
2024-04-14 14:22:46,173:INFO:                shap: Not installed
2024-04-14 14:22:46,174:INFO:           interpret: Not installed
2024-04-14 14:22:46,174:INFO:                umap: Not installed
2024-04-14 14:22:46,174:INFO:     ydata_profiling: Not installed
2024-04-14 14:22:46,174:INFO:  explainerdashboard: Not installed
2024-04-14 14:22:46,174:INFO:             autoviz: Not installed
2024-04-14 14:22:46,174:INFO:           fairlearn: Not installed
2024-04-14 14:22:46,174:INFO:          deepchecks: Not installed
2024-04-14 14:22:46,174:INFO:             xgboost: Not installed
2024-04-14 14:22:46,174:INFO:            catboost: Not installed
2024-04-14 14:22:46,174:INFO:              kmodes: Not installed
2024-04-14 14:22:46,174:INFO:             mlxtend: Not installed
2024-04-14 14:22:46,174:INFO:       statsforecast: Not installed
2024-04-14 14:22:46,174:INFO:        tune_sklearn: Not installed
2024-04-14 14:22:46,174:INFO:                 ray: Not installed
2024-04-14 14:22:46,174:INFO:            hyperopt: Not installed
2024-04-14 14:22:46,175:INFO:              optuna: Not installed
2024-04-14 14:22:46,175:INFO:               skopt: Not installed
2024-04-14 14:22:46,175:INFO:              mlflow: 2.11.3
2024-04-14 14:22:46,175:INFO:              gradio: Not installed
2024-04-14 14:22:46,175:INFO:             fastapi: Not installed
2024-04-14 14:22:46,175:INFO:             uvicorn: Not installed
2024-04-14 14:22:46,175:INFO:              m2cgen: Not installed
2024-04-14 14:22:46,175:INFO:           evidently: Not installed
2024-04-14 14:22:46,175:INFO:               fugue: Not installed
2024-04-14 14:22:46,175:INFO:           streamlit: 1.33.0
2024-04-14 14:22:46,175:INFO:             prophet: Not installed
2024-04-14 14:22:46,175:INFO:None
2024-04-14 14:22:46,175:INFO:Set up data.
2024-04-14 14:22:46,182:INFO:Set up folding strategy.
2024-04-14 14:22:46,182:INFO:Set up train/test split.
2024-04-14 14:22:46,182:INFO:Set up data.
2024-04-14 14:22:46,187:INFO:Set up index.
2024-04-14 14:22:46,188:INFO:Assigning column types.
2024-04-14 14:22:46,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 14:22:46,266:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 14:22:46,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:22:46,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 14:22:46,398:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:22:46,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,444:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 14:22:46,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:22:46,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:22:46,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,680:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 14:22:46,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:46,924:INFO:Preparing preprocessing pipeline...
2024-04-14 14:22:46,926:INFO:Set up simple imputation.
2024-04-14 14:22:46,926:INFO:Set up feature normalization.
2024-04-14 14:22:46,971:INFO:Finished creating preprocessing pipeline.
2024-04-14 14:22:46,981:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 14:22:46,981:INFO:Creating final display dataframe.
2024-04-14 14:22:47,116:INFO:Setup _display_container:                     Description             Value
0                    Session id              4360
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b75d
2024-04-14 14:22:47,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:47,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:47,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:47,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:22:47,364:INFO:setup() successfully completed in 1.27s...............
2024-04-14 14:22:47,364:INFO:Initializing compare_models()
2024-04-14 14:22:47,364:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 14:22:47,364:INFO:Checking exceptions
2024-04-14 14:22:47,370:INFO:Preparing display monitor
2024-04-14 14:22:47,402:INFO:Initializing Logistic Regression
2024-04-14 14:22:47,402:INFO:Total runtime is 0.0 minutes
2024-04-14 14:22:47,406:INFO:SubProcess create_model() called ==================================
2024-04-14 14:22:47,407:INFO:Initializing create_model()
2024-04-14 14:22:47,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B32564F9A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:22:47,407:INFO:Checking exceptions
2024-04-14 14:22:47,407:INFO:Importing libraries
2024-04-14 14:22:47,408:INFO:Copying training dataset
2024-04-14 14:22:47,418:INFO:Defining folds
2024-04-14 14:22:47,419:INFO:Declaring metric variables
2024-04-14 14:22:47,423:INFO:Importing untrained model
2024-04-14 14:22:47,428:INFO:Logistic Regression Imported successfully
2024-04-14 14:22:47,436:INFO:Starting cross validation
2024-04-14 14:22:47,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:22:52,468:INFO:Calculating mean and std
2024-04-14 14:22:52,471:INFO:Creating metrics dataframe
2024-04-14 14:22:52,475:INFO:Uploading results into container
2024-04-14 14:22:52,476:INFO:Uploading model into container now
2024-04-14 14:22:52,477:INFO:_master_model_container: 1
2024-04-14 14:22:52,477:INFO:_display_container: 2
2024-04-14 14:22:52,478:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4360, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 14:22:52,478:INFO:create_model() successfully completed......................................
2024-04-14 14:22:52,602:INFO:SubProcess create_model() end ==================================
2024-04-14 14:22:52,603:INFO:Creating metrics dataframe
2024-04-14 14:22:52,612:INFO:Initializing Decision Tree Classifier
2024-04-14 14:22:52,612:INFO:Total runtime is 0.08682886759440105 minutes
2024-04-14 14:22:52,617:INFO:SubProcess create_model() called ==================================
2024-04-14 14:22:52,617:INFO:Initializing create_model()
2024-04-14 14:22:52,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B32564F9A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:22:52,617:INFO:Checking exceptions
2024-04-14 14:22:52,617:INFO:Importing libraries
2024-04-14 14:22:52,618:INFO:Copying training dataset
2024-04-14 14:22:52,627:INFO:Defining folds
2024-04-14 14:22:52,627:INFO:Declaring metric variables
2024-04-14 14:22:52,631:INFO:Importing untrained model
2024-04-14 14:22:52,636:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:22:52,644:INFO:Starting cross validation
2024-04-14 14:22:52,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:22:55,922:INFO:Calculating mean and std
2024-04-14 14:22:55,925:INFO:Creating metrics dataframe
2024-04-14 14:22:55,928:INFO:Uploading results into container
2024-04-14 14:22:55,929:INFO:Uploading model into container now
2024-04-14 14:22:55,930:INFO:_master_model_container: 2
2024-04-14 14:22:55,930:INFO:_display_container: 2
2024-04-14 14:22:55,931:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best')
2024-04-14 14:22:55,932:INFO:create_model() successfully completed......................................
2024-04-14 14:22:56,063:INFO:SubProcess create_model() end ==================================
2024-04-14 14:22:56,063:INFO:Creating metrics dataframe
2024-04-14 14:22:56,084:INFO:Initializing create_model()
2024-04-14 14:22:56,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:22:56,085:INFO:Checking exceptions
2024-04-14 14:22:56,087:INFO:Importing libraries
2024-04-14 14:22:56,087:INFO:Copying training dataset
2024-04-14 14:22:56,095:INFO:Defining folds
2024-04-14 14:22:56,095:INFO:Declaring metric variables
2024-04-14 14:22:56,095:INFO:Importing untrained model
2024-04-14 14:22:56,095:INFO:Declaring custom model
2024-04-14 14:22:56,096:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:22:56,097:INFO:Cross validation set to False
2024-04-14 14:22:56,097:INFO:Fitting Model
2024-04-14 14:22:56,174:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best')
2024-04-14 14:22:56,174:INFO:create_model() successfully completed......................................
2024-04-14 14:22:56,283:INFO:Initializing create_model()
2024-04-14 14:22:56,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4360, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:22:56,283:INFO:Checking exceptions
2024-04-14 14:22:56,285:INFO:Importing libraries
2024-04-14 14:22:56,286:INFO:Copying training dataset
2024-04-14 14:22:56,293:INFO:Defining folds
2024-04-14 14:22:56,294:INFO:Declaring metric variables
2024-04-14 14:22:56,294:INFO:Importing untrained model
2024-04-14 14:22:56,294:INFO:Declaring custom model
2024-04-14 14:22:56,295:INFO:Logistic Regression Imported successfully
2024-04-14 14:22:56,296:INFO:Cross validation set to False
2024-04-14 14:22:56,296:INFO:Fitting Model
2024-04-14 14:22:56,320:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4360, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 14:22:56,321:INFO:create_model() successfully completed......................................
2024-04-14 14:22:56,445:INFO:_master_model_container: 2
2024-04-14 14:22:56,445:INFO:_display_container: 2
2024-04-14 14:22:56,446:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4360, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 14:22:56,446:INFO:compare_models() successfully completed......................................
2024-04-14 14:22:56,447:INFO:Initializing predict_model()
2024-04-14 14:22:56,447:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4360, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B32482FF40>)
2024-04-14 14:22:56,447:INFO:Checking exceptions
2024-04-14 14:22:56,447:INFO:Preloading libraries
2024-04-14 14:22:57,834:INFO:Initializing predict_model()
2024-04-14 14:22:57,834:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B32542A710>)
2024-04-14 14:22:57,834:INFO:Checking exceptions
2024-04-14 14:22:57,834:INFO:Preloading libraries
2024-04-14 14:22:58,739:INFO:Initializing tune_model()
2024-04-14 14:22:58,739:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>)
2024-04-14 14:22:58,739:INFO:Checking exceptions
2024-04-14 14:22:58,759:INFO:Copying training dataset
2024-04-14 14:22:58,767:INFO:Checking base model
2024-04-14 14:22:58,767:INFO:Base model : Decision Tree Classifier
2024-04-14 14:22:58,771:INFO:Declaring metric variables
2024-04-14 14:22:58,776:INFO:Defining Hyperparameters
2024-04-14 14:22:58,896:INFO:Tuning with n_jobs=-1
2024-04-14 14:22:58,896:INFO:Initializing RandomizedSearchCV
2024-04-14 14:22:59,149:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'entropy'}
2024-04-14 14:22:59,149:INFO:Hyperparameter search completed
2024-04-14 14:22:59,149:INFO:SubProcess create_model() called ==================================
2024-04-14 14:22:59,150:INFO:Initializing create_model()
2024-04-14 14:22:59,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B32688B640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.002, 'max_features': 'log2', 'max_depth': 12, 'criterion': 'entropy'})
2024-04-14 14:22:59,150:INFO:Checking exceptions
2024-04-14 14:22:59,150:INFO:Importing libraries
2024-04-14 14:22:59,150:INFO:Copying training dataset
2024-04-14 14:22:59,158:INFO:Defining folds
2024-04-14 14:22:59,158:INFO:Declaring metric variables
2024-04-14 14:22:59,163:INFO:Importing untrained model
2024-04-14 14:22:59,163:INFO:Declaring custom model
2024-04-14 14:22:59,167:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:22:59,175:INFO:Starting cross validation
2024-04-14 14:22:59,176:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:22:59,302:INFO:Calculating mean and std
2024-04-14 14:22:59,303:INFO:Creating metrics dataframe
2024-04-14 14:22:59,309:INFO:Finalizing model
2024-04-14 14:22:59,331:INFO:Uploading results into container
2024-04-14 14:22:59,332:INFO:Uploading model into container now
2024-04-14 14:22:59,333:INFO:_master_model_container: 3
2024-04-14 14:22:59,333:INFO:_display_container: 5
2024-04-14 14:22:59,333:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best')
2024-04-14 14:22:59,334:INFO:create_model() successfully completed......................................
2024-04-14 14:22:59,439:INFO:SubProcess create_model() end ==================================
2024-04-14 14:22:59,440:INFO:choose_better activated
2024-04-14 14:22:59,444:INFO:SubProcess create_model() called ==================================
2024-04-14 14:22:59,445:INFO:Initializing create_model()
2024-04-14 14:22:59,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:22:59,445:INFO:Checking exceptions
2024-04-14 14:22:59,447:INFO:Importing libraries
2024-04-14 14:22:59,447:INFO:Copying training dataset
2024-04-14 14:22:59,455:INFO:Defining folds
2024-04-14 14:22:59,455:INFO:Declaring metric variables
2024-04-14 14:22:59,455:INFO:Importing untrained model
2024-04-14 14:22:59,455:INFO:Declaring custom model
2024-04-14 14:22:59,456:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:22:59,456:INFO:Starting cross validation
2024-04-14 14:22:59,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:22:59,632:INFO:Calculating mean and std
2024-04-14 14:22:59,633:INFO:Creating metrics dataframe
2024-04-14 14:22:59,635:INFO:Finalizing model
2024-04-14 14:22:59,713:INFO:Uploading results into container
2024-04-14 14:22:59,713:INFO:Uploading model into container now
2024-04-14 14:22:59,714:INFO:_master_model_container: 4
2024-04-14 14:22:59,714:INFO:_display_container: 6
2024-04-14 14:22:59,714:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best')
2024-04-14 14:22:59,714:INFO:create_model() successfully completed......................................
2024-04-14 14:22:59,821:INFO:SubProcess create_model() end ==================================
2024-04-14 14:22:59,822:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best') result for F1 is 0.5412
2024-04-14 14:22:59,822:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best') result for F1 is 0.4602
2024-04-14 14:22:59,823:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best') is best model
2024-04-14 14:22:59,823:INFO:choose_better completed
2024-04-14 14:22:59,823:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 14:22:59,837:INFO:_master_model_container: 4
2024-04-14 14:22:59,837:INFO:_display_container: 5
2024-04-14 14:22:59,837:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best')
2024-04-14 14:22:59,838:INFO:tune_model() successfully completed......................................
2024-04-14 14:22:59,944:INFO:Initializing predict_model()
2024-04-14 14:22:59,944:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B324841BD0>)
2024-04-14 14:22:59,945:INFO:Checking exceptions
2024-04-14 14:22:59,945:INFO:Preloading libraries
2024-04-14 14:23:00,208:INFO:Initializing finalize_model()
2024-04-14 14:23:00,208:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 14:23:00,209:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best')
2024-04-14 14:23:00,213:INFO:Initializing create_model()
2024-04-14 14:23:00,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B35E381D50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4360, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:00,214:INFO:Checking exceptions
2024-04-14 14:23:00,215:INFO:Importing libraries
2024-04-14 14:23:00,215:INFO:Copying training dataset
2024-04-14 14:23:00,216:INFO:Defining folds
2024-04-14 14:23:00,216:INFO:Declaring metric variables
2024-04-14 14:23:00,216:INFO:Importing untrained model
2024-04-14 14:23:00,216:INFO:Declaring custom model
2024-04-14 14:23:00,217:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:23:00,218:INFO:Cross validation set to False
2024-04-14 14:23:00,218:INFO:Fitting Model
2024-04-14 14:23:00,313:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4360,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:23:00,313:INFO:create_model() successfully completed......................................
2024-04-14 14:23:00,417:INFO:_master_model_container: 4
2024-04-14 14:23:00,418:INFO:_display_container: 6
2024-04-14 14:23:00,426:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4360,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:23:00,426:INFO:finalize_model() successfully completed......................................
2024-04-14 14:23:00,545:INFO:Initializing save_model()
2024-04-14 14:23:00,545:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4360,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 14:23:00,545:INFO:Adding model into prep_pipe
2024-04-14 14:23:00,545:WARNING:Only Model saved as it was a pipeline.
2024-04-14 14:23:00,552:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 14:23:00,560:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4360,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:23:00,560:INFO:save_model() successfully completed......................................
2024-04-14 14:23:00,665:INFO:Initializing load_model()
2024-04-14 14:23:00,665:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 14:23:35,040:INFO:PyCaret ClassificationExperiment
2024-04-14 14:23:35,041:INFO:Logging name: clf-default-name
2024-04-14 14:23:35,041:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 14:23:35,041:INFO:version 3.3.0
2024-04-14 14:23:35,041:INFO:Initializing setup()
2024-04-14 14:23:35,041:INFO:self.USI: b23d
2024-04-14 14:23:35,041:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'y', 'exp_name_log', 'gpu_n_jobs_param', 'fold_groups_param', 'pipeline', 'idx', 'memory', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'y_train', 'X', 'html_param', 'target_param', 'exp_id', 'n_jobs_param', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_param', 'USI', 'logging_param', 'y_test', 'data', '_available_plots', 'seed'}
2024-04-14 14:23:35,041:INFO:Checking environment
2024-04-14 14:23:35,041:INFO:python_version: 3.10.14
2024-04-14 14:23:35,041:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 14:23:35,041:INFO:machine: AMD64
2024-04-14 14:23:35,041:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 14:23:35,047:INFO:Memory: svmem(total=17131573248, available=4870938624, percent=71.6, used=12260634624, free=4870938624)
2024-04-14 14:23:35,047:INFO:Physical Core: 8
2024-04-14 14:23:35,047:INFO:Logical Core: 16
2024-04-14 14:23:35,047:INFO:Checking libraries
2024-04-14 14:23:35,047:INFO:System:
2024-04-14 14:23:35,047:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 14:23:35,047:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 14:23:35,047:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 14:23:35,047:INFO:PyCaret required dependencies:
2024-04-14 14:23:35,047:INFO:                 pip: 23.3.1
2024-04-14 14:23:35,047:INFO:          setuptools: 68.2.2
2024-04-14 14:23:35,048:INFO:             pycaret: 3.3.0
2024-04-14 14:23:35,048:INFO:             IPython: 8.23.0
2024-04-14 14:23:35,048:INFO:          ipywidgets: 8.1.2
2024-04-14 14:23:35,048:INFO:                tqdm: 4.66.2
2024-04-14 14:23:35,048:INFO:               numpy: 1.26.4
2024-04-14 14:23:35,048:INFO:              pandas: 2.1.4
2024-04-14 14:23:35,048:INFO:              jinja2: 3.1.3
2024-04-14 14:23:35,048:INFO:               scipy: 1.11.4
2024-04-14 14:23:35,048:INFO:              joblib: 1.3.2
2024-04-14 14:23:35,048:INFO:             sklearn: 1.4.1.post1
2024-04-14 14:23:35,048:INFO:                pyod: 1.1.3
2024-04-14 14:23:35,048:INFO:            imblearn: 0.12.2
2024-04-14 14:23:35,048:INFO:   category_encoders: 2.6.3
2024-04-14 14:23:35,048:INFO:            lightgbm: 4.3.0
2024-04-14 14:23:35,048:INFO:               numba: 0.59.1
2024-04-14 14:23:35,049:INFO:            requests: 2.31.0
2024-04-14 14:23:35,049:INFO:          matplotlib: 3.7.5
2024-04-14 14:23:35,049:INFO:          scikitplot: 0.3.7
2024-04-14 14:23:35,049:INFO:         yellowbrick: 1.5
2024-04-14 14:23:35,049:INFO:              plotly: 5.20.0
2024-04-14 14:23:35,049:INFO:    plotly-resampler: Not installed
2024-04-14 14:23:35,049:INFO:             kaleido: 0.2.1
2024-04-14 14:23:35,049:INFO:           schemdraw: 0.15
2024-04-14 14:23:35,049:INFO:         statsmodels: 0.14.1
2024-04-14 14:23:35,049:INFO:              sktime: 0.28.0
2024-04-14 14:23:35,049:INFO:               tbats: 1.1.3
2024-04-14 14:23:35,049:INFO:            pmdarima: 2.0.4
2024-04-14 14:23:35,049:INFO:              psutil: 5.9.8
2024-04-14 14:23:35,049:INFO:          markupsafe: 2.1.5
2024-04-14 14:23:35,049:INFO:             pickle5: Not installed
2024-04-14 14:23:35,050:INFO:         cloudpickle: 3.0.0
2024-04-14 14:23:35,050:INFO:         deprecation: 2.1.0
2024-04-14 14:23:35,050:INFO:              xxhash: 3.4.1
2024-04-14 14:23:35,050:INFO:           wurlitzer: 3.0.3
2024-04-14 14:23:35,050:INFO:PyCaret optional dependencies:
2024-04-14 14:23:35,050:INFO:                shap: Not installed
2024-04-14 14:23:35,050:INFO:           interpret: Not installed
2024-04-14 14:23:35,050:INFO:                umap: Not installed
2024-04-14 14:23:35,050:INFO:     ydata_profiling: Not installed
2024-04-14 14:23:35,050:INFO:  explainerdashboard: Not installed
2024-04-14 14:23:35,050:INFO:             autoviz: Not installed
2024-04-14 14:23:35,050:INFO:           fairlearn: Not installed
2024-04-14 14:23:35,050:INFO:          deepchecks: Not installed
2024-04-14 14:23:35,050:INFO:             xgboost: Not installed
2024-04-14 14:23:35,051:INFO:            catboost: Not installed
2024-04-14 14:23:35,051:INFO:              kmodes: Not installed
2024-04-14 14:23:35,051:INFO:             mlxtend: Not installed
2024-04-14 14:23:35,051:INFO:       statsforecast: Not installed
2024-04-14 14:23:35,051:INFO:        tune_sklearn: Not installed
2024-04-14 14:23:35,051:INFO:                 ray: Not installed
2024-04-14 14:23:35,051:INFO:            hyperopt: Not installed
2024-04-14 14:23:35,051:INFO:              optuna: Not installed
2024-04-14 14:23:35,051:INFO:               skopt: Not installed
2024-04-14 14:23:35,051:INFO:              mlflow: 2.11.3
2024-04-14 14:23:35,051:INFO:              gradio: Not installed
2024-04-14 14:23:35,051:INFO:             fastapi: Not installed
2024-04-14 14:23:35,051:INFO:             uvicorn: Not installed
2024-04-14 14:23:35,051:INFO:              m2cgen: Not installed
2024-04-14 14:23:35,052:INFO:           evidently: Not installed
2024-04-14 14:23:35,052:INFO:               fugue: Not installed
2024-04-14 14:23:35,052:INFO:           streamlit: 1.33.0
2024-04-14 14:23:35,052:INFO:             prophet: Not installed
2024-04-14 14:23:35,052:INFO:None
2024-04-14 14:23:35,052:INFO:Set up data.
2024-04-14 14:23:35,058:INFO:Set up folding strategy.
2024-04-14 14:23:35,058:INFO:Set up train/test split.
2024-04-14 14:23:35,058:INFO:Set up data.
2024-04-14 14:23:35,064:INFO:Set up index.
2024-04-14 14:23:35,064:INFO:Assigning column types.
2024-04-14 14:23:35,071:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 14:23:35,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 14:23:35,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:23:35,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 14:23:35,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:23:35,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,310:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 14:23:35,383:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:23:35,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,501:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:23:35,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,547:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 14:23:35,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:35,784:INFO:Preparing preprocessing pipeline...
2024-04-14 14:23:35,785:INFO:Set up simple imputation.
2024-04-14 14:23:35,785:INFO:Set up feature normalization.
2024-04-14 14:23:35,825:INFO:Finished creating preprocessing pipeline.
2024-04-14 14:23:35,832:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 14:23:35,833:INFO:Creating final display dataframe.
2024-04-14 14:23:35,974:INFO:Setup _display_container:                     Description             Value
0                    Session id              4886
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b23d
2024-04-14 14:23:36,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:36,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:36,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:36,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:23:36,224:INFO:setup() successfully completed in 1.19s...............
2024-04-14 14:23:36,225:INFO:Initializing compare_models()
2024-04-14 14:23:36,225:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 14:23:36,225:INFO:Checking exceptions
2024-04-14 14:23:36,230:INFO:Preparing display monitor
2024-04-14 14:23:36,257:INFO:Initializing Logistic Regression
2024-04-14 14:23:36,257:INFO:Total runtime is 0.0 minutes
2024-04-14 14:23:36,261:INFO:SubProcess create_model() called ==================================
2024-04-14 14:23:36,261:INFO:Initializing create_model()
2024-04-14 14:23:36,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B32670BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:36,261:INFO:Checking exceptions
2024-04-14 14:23:36,262:INFO:Importing libraries
2024-04-14 14:23:36,262:INFO:Copying training dataset
2024-04-14 14:23:36,272:INFO:Defining folds
2024-04-14 14:23:36,272:INFO:Declaring metric variables
2024-04-14 14:23:36,276:INFO:Importing untrained model
2024-04-14 14:23:36,281:INFO:Logistic Regression Imported successfully
2024-04-14 14:23:36,289:INFO:Starting cross validation
2024-04-14 14:23:36,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:23:36,426:INFO:Calculating mean and std
2024-04-14 14:23:36,427:INFO:Creating metrics dataframe
2024-04-14 14:23:36,429:INFO:Uploading results into container
2024-04-14 14:23:36,429:INFO:Uploading model into container now
2024-04-14 14:23:36,430:INFO:_master_model_container: 1
2024-04-14 14:23:36,430:INFO:_display_container: 2
2024-04-14 14:23:36,430:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4886, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 14:23:36,430:INFO:create_model() successfully completed......................................
2024-04-14 14:23:36,570:INFO:SubProcess create_model() end ==================================
2024-04-14 14:23:36,570:INFO:Creating metrics dataframe
2024-04-14 14:23:36,579:INFO:Initializing Decision Tree Classifier
2024-04-14 14:23:36,579:INFO:Total runtime is 0.005354861418406169 minutes
2024-04-14 14:23:36,584:INFO:SubProcess create_model() called ==================================
2024-04-14 14:23:36,584:INFO:Initializing create_model()
2024-04-14 14:23:36,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B32670BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:36,584:INFO:Checking exceptions
2024-04-14 14:23:36,584:INFO:Importing libraries
2024-04-14 14:23:36,584:INFO:Copying training dataset
2024-04-14 14:23:36,592:INFO:Defining folds
2024-04-14 14:23:36,592:INFO:Declaring metric variables
2024-04-14 14:23:36,596:INFO:Importing untrained model
2024-04-14 14:23:36,601:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:23:36,609:INFO:Starting cross validation
2024-04-14 14:23:36,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:23:36,776:INFO:Calculating mean and std
2024-04-14 14:23:36,777:INFO:Creating metrics dataframe
2024-04-14 14:23:36,779:INFO:Uploading results into container
2024-04-14 14:23:36,779:INFO:Uploading model into container now
2024-04-14 14:23:36,780:INFO:_master_model_container: 2
2024-04-14 14:23:36,780:INFO:_display_container: 2
2024-04-14 14:23:36,780:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best')
2024-04-14 14:23:36,780:INFO:create_model() successfully completed......................................
2024-04-14 14:23:36,921:INFO:SubProcess create_model() end ==================================
2024-04-14 14:23:36,922:INFO:Creating metrics dataframe
2024-04-14 14:23:36,940:INFO:Initializing create_model()
2024-04-14 14:23:36,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:36,941:INFO:Checking exceptions
2024-04-14 14:23:36,943:INFO:Importing libraries
2024-04-14 14:23:36,943:INFO:Copying training dataset
2024-04-14 14:23:36,951:INFO:Defining folds
2024-04-14 14:23:36,951:INFO:Declaring metric variables
2024-04-14 14:23:36,951:INFO:Importing untrained model
2024-04-14 14:23:36,951:INFO:Declaring custom model
2024-04-14 14:23:36,952:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:23:36,953:INFO:Cross validation set to False
2024-04-14 14:23:36,953:INFO:Fitting Model
2024-04-14 14:23:37,029:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best')
2024-04-14 14:23:37,029:INFO:create_model() successfully completed......................................
2024-04-14 14:23:37,172:INFO:Initializing create_model()
2024-04-14 14:23:37,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4886, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:37,172:INFO:Checking exceptions
2024-04-14 14:23:37,174:INFO:Importing libraries
2024-04-14 14:23:37,174:INFO:Copying training dataset
2024-04-14 14:23:37,182:INFO:Defining folds
2024-04-14 14:23:37,182:INFO:Declaring metric variables
2024-04-14 14:23:37,182:INFO:Importing untrained model
2024-04-14 14:23:37,182:INFO:Declaring custom model
2024-04-14 14:23:37,183:INFO:Logistic Regression Imported successfully
2024-04-14 14:23:37,184:INFO:Cross validation set to False
2024-04-14 14:23:37,184:INFO:Fitting Model
2024-04-14 14:23:37,208:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4886, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 14:23:37,208:INFO:create_model() successfully completed......................................
2024-04-14 14:23:37,364:INFO:_master_model_container: 2
2024-04-14 14:23:37,364:INFO:_display_container: 2
2024-04-14 14:23:37,365:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4886, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 14:23:37,365:INFO:compare_models() successfully completed......................................
2024-04-14 14:23:37,366:INFO:Initializing predict_model()
2024-04-14 14:23:37,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4886, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B324840B80>)
2024-04-14 14:23:37,366:INFO:Checking exceptions
2024-04-14 14:23:37,366:INFO:Preloading libraries
2024-04-14 14:23:38,678:INFO:Initializing predict_model()
2024-04-14 14:23:38,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B32684B9A0>)
2024-04-14 14:23:38,678:INFO:Checking exceptions
2024-04-14 14:23:38,678:INFO:Preloading libraries
2024-04-14 14:23:39,584:INFO:Initializing tune_model()
2024-04-14 14:23:39,584:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>)
2024-04-14 14:23:39,584:INFO:Checking exceptions
2024-04-14 14:23:39,603:INFO:Copying training dataset
2024-04-14 14:23:39,610:INFO:Checking base model
2024-04-14 14:23:39,610:INFO:Base model : Decision Tree Classifier
2024-04-14 14:23:39,617:INFO:Declaring metric variables
2024-04-14 14:23:39,622:INFO:Defining Hyperparameters
2024-04-14 14:23:39,779:INFO:Tuning with n_jobs=-1
2024-04-14 14:23:39,779:INFO:Initializing RandomizedSearchCV
2024-04-14 14:23:40,042:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'entropy'}
2024-04-14 14:23:40,042:INFO:Hyperparameter search completed
2024-04-14 14:23:40,042:INFO:SubProcess create_model() called ==================================
2024-04-14 14:23:40,043:INFO:Initializing create_model()
2024-04-14 14:23:40,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B3251E4130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.002, 'max_features': 'sqrt', 'max_depth': 15, 'criterion': 'entropy'})
2024-04-14 14:23:40,043:INFO:Checking exceptions
2024-04-14 14:23:40,043:INFO:Importing libraries
2024-04-14 14:23:40,043:INFO:Copying training dataset
2024-04-14 14:23:40,052:INFO:Defining folds
2024-04-14 14:23:40,052:INFO:Declaring metric variables
2024-04-14 14:23:40,056:INFO:Importing untrained model
2024-04-14 14:23:40,057:INFO:Declaring custom model
2024-04-14 14:23:40,062:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:23:40,069:INFO:Starting cross validation
2024-04-14 14:23:40,071:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:23:40,201:INFO:Calculating mean and std
2024-04-14 14:23:40,202:INFO:Creating metrics dataframe
2024-04-14 14:23:40,208:INFO:Finalizing model
2024-04-14 14:23:40,230:INFO:Uploading results into container
2024-04-14 14:23:40,231:INFO:Uploading model into container now
2024-04-14 14:23:40,232:INFO:_master_model_container: 3
2024-04-14 14:23:40,232:INFO:_display_container: 5
2024-04-14 14:23:40,232:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best')
2024-04-14 14:23:40,233:INFO:create_model() successfully completed......................................
2024-04-14 14:23:40,372:INFO:SubProcess create_model() end ==================================
2024-04-14 14:23:40,373:INFO:choose_better activated
2024-04-14 14:23:40,377:INFO:SubProcess create_model() called ==================================
2024-04-14 14:23:40,378:INFO:Initializing create_model()
2024-04-14 14:23:40,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:40,378:INFO:Checking exceptions
2024-04-14 14:23:40,380:INFO:Importing libraries
2024-04-14 14:23:40,380:INFO:Copying training dataset
2024-04-14 14:23:40,388:INFO:Defining folds
2024-04-14 14:23:40,388:INFO:Declaring metric variables
2024-04-14 14:23:40,388:INFO:Importing untrained model
2024-04-14 14:23:40,388:INFO:Declaring custom model
2024-04-14 14:23:40,389:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:23:40,389:INFO:Starting cross validation
2024-04-14 14:23:40,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:23:40,565:INFO:Calculating mean and std
2024-04-14 14:23:40,566:INFO:Creating metrics dataframe
2024-04-14 14:23:40,568:INFO:Finalizing model
2024-04-14 14:23:40,644:INFO:Uploading results into container
2024-04-14 14:23:40,644:INFO:Uploading model into container now
2024-04-14 14:23:40,645:INFO:_master_model_container: 4
2024-04-14 14:23:40,645:INFO:_display_container: 6
2024-04-14 14:23:40,645:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best')
2024-04-14 14:23:40,646:INFO:create_model() successfully completed......................................
2024-04-14 14:23:40,783:INFO:SubProcess create_model() end ==================================
2024-04-14 14:23:40,784:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best') result for F1 is 0.5558
2024-04-14 14:23:40,784:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best') result for F1 is 0.4376
2024-04-14 14:23:40,785:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best') is best model
2024-04-14 14:23:40,785:INFO:choose_better completed
2024-04-14 14:23:40,785:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 14:23:40,799:INFO:_master_model_container: 4
2024-04-14 14:23:40,799:INFO:_display_container: 5
2024-04-14 14:23:40,800:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best')
2024-04-14 14:23:40,800:INFO:tune_model() successfully completed......................................
2024-04-14 14:23:40,944:INFO:Initializing predict_model()
2024-04-14 14:23:40,944:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B324840940>)
2024-04-14 14:23:40,944:INFO:Checking exceptions
2024-04-14 14:23:40,944:INFO:Preloading libraries
2024-04-14 14:23:41,227:INFO:Initializing finalize_model()
2024-04-14 14:23:41,227:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 14:23:41,228:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best')
2024-04-14 14:23:41,232:INFO:Initializing create_model()
2024-04-14 14:23:41,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B329B8CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4886, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:23:41,232:INFO:Checking exceptions
2024-04-14 14:23:41,234:INFO:Importing libraries
2024-04-14 14:23:41,234:INFO:Copying training dataset
2024-04-14 14:23:41,235:INFO:Defining folds
2024-04-14 14:23:41,235:INFO:Declaring metric variables
2024-04-14 14:23:41,235:INFO:Importing untrained model
2024-04-14 14:23:41,235:INFO:Declaring custom model
2024-04-14 14:23:41,236:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:23:41,237:INFO:Cross validation set to False
2024-04-14 14:23:41,237:INFO:Fitting Model
2024-04-14 14:23:41,332:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4886,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:23:41,333:INFO:create_model() successfully completed......................................
2024-04-14 14:23:41,468:INFO:_master_model_container: 4
2024-04-14 14:23:41,469:INFO:_display_container: 6
2024-04-14 14:23:41,477:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4886,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:23:41,477:INFO:finalize_model() successfully completed......................................
2024-04-14 14:23:41,629:INFO:Initializing save_model()
2024-04-14 14:23:41,629:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4886,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 14:23:41,629:INFO:Adding model into prep_pipe
2024-04-14 14:23:41,629:WARNING:Only Model saved as it was a pipeline.
2024-04-14 14:23:41,635:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 14:23:41,644:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4886,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:23:41,644:INFO:save_model() successfully completed......................................
2024-04-14 14:23:41,783:INFO:Initializing load_model()
2024-04-14 14:23:41,783:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 14:26:29,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:26:29,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:26:29,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:26:29,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 14:26:31,093:INFO:PyCaret ClassificationExperiment
2024-04-14 14:26:31,093:INFO:Logging name: clf-default-name
2024-04-14 14:26:31,094:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 14:26:31,094:INFO:version 3.3.0
2024-04-14 14:26:31,094:INFO:Initializing setup()
2024-04-14 14:26:31,094:INFO:self.USI: 823a
2024-04-14 14:26:31,094:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 14:26:31,094:INFO:Checking environment
2024-04-14 14:26:31,094:INFO:python_version: 3.10.14
2024-04-14 14:26:31,094:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 14:26:31,094:INFO:machine: AMD64
2024-04-14 14:26:31,094:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 14:26:31,099:INFO:Memory: svmem(total=17131573248, available=7007789056, percent=59.1, used=10123784192, free=7007789056)
2024-04-14 14:26:31,100:INFO:Physical Core: 8
2024-04-14 14:26:31,100:INFO:Logical Core: 16
2024-04-14 14:26:31,100:INFO:Checking libraries
2024-04-14 14:26:31,100:INFO:System:
2024-04-14 14:26:31,100:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 14:26:31,100:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 14:26:31,100:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 14:26:31,100:INFO:PyCaret required dependencies:
2024-04-14 14:26:31,140:INFO:                 pip: 23.3.1
2024-04-14 14:26:31,140:INFO:          setuptools: 68.2.2
2024-04-14 14:26:31,141:INFO:             pycaret: 3.3.0
2024-04-14 14:26:31,141:INFO:             IPython: 8.23.0
2024-04-14 14:26:31,141:INFO:          ipywidgets: 8.1.2
2024-04-14 14:26:31,141:INFO:                tqdm: 4.66.2
2024-04-14 14:26:31,141:INFO:               numpy: 1.26.4
2024-04-14 14:26:31,141:INFO:              pandas: 2.1.4
2024-04-14 14:26:31,141:INFO:              jinja2: 3.1.3
2024-04-14 14:26:31,141:INFO:               scipy: 1.11.4
2024-04-14 14:26:31,141:INFO:              joblib: 1.3.2
2024-04-14 14:26:31,141:INFO:             sklearn: 1.4.1.post1
2024-04-14 14:26:31,141:INFO:                pyod: 1.1.3
2024-04-14 14:26:31,141:INFO:            imblearn: 0.12.2
2024-04-14 14:26:31,141:INFO:   category_encoders: 2.6.3
2024-04-14 14:26:31,141:INFO:            lightgbm: 4.3.0
2024-04-14 14:26:31,142:INFO:               numba: 0.59.1
2024-04-14 14:26:31,142:INFO:            requests: 2.31.0
2024-04-14 14:26:31,142:INFO:          matplotlib: 3.7.5
2024-04-14 14:26:31,142:INFO:          scikitplot: 0.3.7
2024-04-14 14:26:31,142:INFO:         yellowbrick: 1.5
2024-04-14 14:26:31,142:INFO:              plotly: 5.20.0
2024-04-14 14:26:31,142:INFO:    plotly-resampler: Not installed
2024-04-14 14:26:31,142:INFO:             kaleido: 0.2.1
2024-04-14 14:26:31,142:INFO:           schemdraw: 0.15
2024-04-14 14:26:31,142:INFO:         statsmodels: 0.14.1
2024-04-14 14:26:31,142:INFO:              sktime: 0.28.0
2024-04-14 14:26:31,142:INFO:               tbats: 1.1.3
2024-04-14 14:26:31,142:INFO:            pmdarima: 2.0.4
2024-04-14 14:26:31,142:INFO:              psutil: 5.9.8
2024-04-14 14:26:31,142:INFO:          markupsafe: 2.1.5
2024-04-14 14:26:31,143:INFO:             pickle5: Not installed
2024-04-14 14:26:31,143:INFO:         cloudpickle: 3.0.0
2024-04-14 14:26:31,143:INFO:         deprecation: 2.1.0
2024-04-14 14:26:31,143:INFO:              xxhash: 3.4.1
2024-04-14 14:26:31,143:INFO:           wurlitzer: 3.0.3
2024-04-14 14:26:31,143:INFO:PyCaret optional dependencies:
2024-04-14 14:26:31,173:INFO:                shap: Not installed
2024-04-14 14:26:31,173:INFO:           interpret: Not installed
2024-04-14 14:26:31,173:INFO:                umap: Not installed
2024-04-14 14:26:31,173:INFO:     ydata_profiling: Not installed
2024-04-14 14:26:31,173:INFO:  explainerdashboard: Not installed
2024-04-14 14:26:31,173:INFO:             autoviz: Not installed
2024-04-14 14:26:31,173:INFO:           fairlearn: Not installed
2024-04-14 14:26:31,173:INFO:          deepchecks: Not installed
2024-04-14 14:26:31,173:INFO:             xgboost: Not installed
2024-04-14 14:26:31,173:INFO:            catboost: Not installed
2024-04-14 14:26:31,173:INFO:              kmodes: Not installed
2024-04-14 14:26:31,174:INFO:             mlxtend: Not installed
2024-04-14 14:26:31,174:INFO:       statsforecast: Not installed
2024-04-14 14:26:31,174:INFO:        tune_sklearn: Not installed
2024-04-14 14:26:31,174:INFO:                 ray: Not installed
2024-04-14 14:26:31,174:INFO:            hyperopt: Not installed
2024-04-14 14:26:31,174:INFO:              optuna: Not installed
2024-04-14 14:26:31,174:INFO:               skopt: Not installed
2024-04-14 14:26:31,174:INFO:              mlflow: 2.11.3
2024-04-14 14:26:31,174:INFO:              gradio: Not installed
2024-04-14 14:26:31,174:INFO:             fastapi: Not installed
2024-04-14 14:26:31,174:INFO:             uvicorn: Not installed
2024-04-14 14:26:31,174:INFO:              m2cgen: Not installed
2024-04-14 14:26:31,174:INFO:           evidently: Not installed
2024-04-14 14:26:31,174:INFO:               fugue: Not installed
2024-04-14 14:26:31,174:INFO:           streamlit: 1.33.0
2024-04-14 14:26:31,175:INFO:             prophet: Not installed
2024-04-14 14:26:31,175:INFO:None
2024-04-14 14:26:31,175:INFO:Set up data.
2024-04-14 14:26:31,181:INFO:Set up folding strategy.
2024-04-14 14:26:31,181:INFO:Set up train/test split.
2024-04-14 14:26:31,181:INFO:Set up data.
2024-04-14 14:26:31,187:INFO:Set up index.
2024-04-14 14:26:31,187:INFO:Assigning column types.
2024-04-14 14:26:31,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 14:26:31,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 14:26:31,267:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:26:31,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 14:26:31,390:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:26:31,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,434:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 14:26:31,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:26:31,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 14:26:31,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,664:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 14:26:31,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:31,896:INFO:Preparing preprocessing pipeline...
2024-04-14 14:26:31,898:INFO:Set up simple imputation.
2024-04-14 14:26:31,898:INFO:Set up feature normalization.
2024-04-14 14:26:31,940:INFO:Finished creating preprocessing pipeline.
2024-04-14 14:26:31,948:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 14:26:31,949:INFO:Creating final display dataframe.
2024-04-14 14:26:32,084:INFO:Setup _display_container:                     Description             Value
0                    Session id              3220
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              823a
2024-04-14 14:26:32,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:32,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:32,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:32,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 14:26:32,322:INFO:setup() successfully completed in 1.23s...............
2024-04-14 14:26:32,322:INFO:Initializing compare_models()
2024-04-14 14:26:32,322:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 14:26:32,322:INFO:Checking exceptions
2024-04-14 14:26:32,328:INFO:Preparing display monitor
2024-04-14 14:26:32,362:INFO:Initializing Logistic Regression
2024-04-14 14:26:32,362:INFO:Total runtime is 0.0 minutes
2024-04-14 14:26:32,367:INFO:SubProcess create_model() called ==================================
2024-04-14 14:26:32,367:INFO:Initializing create_model()
2024-04-14 14:26:32,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3582F760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:26:32,368:INFO:Checking exceptions
2024-04-14 14:26:32,368:INFO:Importing libraries
2024-04-14 14:26:32,368:INFO:Copying training dataset
2024-04-14 14:26:32,379:INFO:Defining folds
2024-04-14 14:26:32,379:INFO:Declaring metric variables
2024-04-14 14:26:32,384:INFO:Importing untrained model
2024-04-14 14:26:32,389:INFO:Logistic Regression Imported successfully
2024-04-14 14:26:32,397:INFO:Starting cross validation
2024-04-14 14:26:32,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:26:37,726:INFO:Calculating mean and std
2024-04-14 14:26:37,730:INFO:Creating metrics dataframe
2024-04-14 14:26:37,735:INFO:Uploading results into container
2024-04-14 14:26:37,736:INFO:Uploading model into container now
2024-04-14 14:26:37,737:INFO:_master_model_container: 1
2024-04-14 14:26:37,737:INFO:_display_container: 2
2024-04-14 14:26:37,738:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 14:26:37,739:INFO:create_model() successfully completed......................................
2024-04-14 14:26:37,909:INFO:SubProcess create_model() end ==================================
2024-04-14 14:26:37,909:INFO:Creating metrics dataframe
2024-04-14 14:26:37,919:INFO:Initializing Decision Tree Classifier
2024-04-14 14:26:37,919:INFO:Total runtime is 0.09261746803919474 minutes
2024-04-14 14:26:37,924:INFO:SubProcess create_model() called ==================================
2024-04-14 14:26:37,925:INFO:Initializing create_model()
2024-04-14 14:26:37,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3582F760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:26:37,925:INFO:Checking exceptions
2024-04-14 14:26:37,925:INFO:Importing libraries
2024-04-14 14:26:37,925:INFO:Copying training dataset
2024-04-14 14:26:37,938:INFO:Defining folds
2024-04-14 14:26:37,938:INFO:Declaring metric variables
2024-04-14 14:26:37,944:INFO:Importing untrained model
2024-04-14 14:26:37,950:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:26:37,963:INFO:Starting cross validation
2024-04-14 14:26:37,965:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:26:41,724:INFO:Calculating mean and std
2024-04-14 14:26:41,727:INFO:Creating metrics dataframe
2024-04-14 14:26:41,730:INFO:Uploading results into container
2024-04-14 14:26:41,732:INFO:Uploading model into container now
2024-04-14 14:26:41,733:INFO:_master_model_container: 2
2024-04-14 14:26:41,733:INFO:_display_container: 2
2024-04-14 14:26:41,734:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best')
2024-04-14 14:26:41,734:INFO:create_model() successfully completed......................................
2024-04-14 14:26:41,856:INFO:SubProcess create_model() end ==================================
2024-04-14 14:26:41,856:INFO:Creating metrics dataframe
2024-04-14 14:26:41,877:INFO:Initializing create_model()
2024-04-14 14:26:41,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:26:41,878:INFO:Checking exceptions
2024-04-14 14:26:41,880:INFO:Importing libraries
2024-04-14 14:26:41,880:INFO:Copying training dataset
2024-04-14 14:26:41,889:INFO:Defining folds
2024-04-14 14:26:41,890:INFO:Declaring metric variables
2024-04-14 14:26:41,890:INFO:Importing untrained model
2024-04-14 14:26:41,890:INFO:Declaring custom model
2024-04-14 14:26:41,891:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:26:41,892:INFO:Cross validation set to False
2024-04-14 14:26:41,892:INFO:Fitting Model
2024-04-14 14:26:41,968:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best')
2024-04-14 14:26:41,969:INFO:create_model() successfully completed......................................
2024-04-14 14:26:42,080:INFO:Initializing create_model()
2024-04-14 14:26:42,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:26:42,080:INFO:Checking exceptions
2024-04-14 14:26:42,083:INFO:Importing libraries
2024-04-14 14:26:42,083:INFO:Copying training dataset
2024-04-14 14:26:42,091:INFO:Defining folds
2024-04-14 14:26:42,091:INFO:Declaring metric variables
2024-04-14 14:26:42,092:INFO:Importing untrained model
2024-04-14 14:26:42,092:INFO:Declaring custom model
2024-04-14 14:26:42,092:INFO:Logistic Regression Imported successfully
2024-04-14 14:26:42,094:INFO:Cross validation set to False
2024-04-14 14:26:42,094:INFO:Fitting Model
2024-04-14 14:26:42,118:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 14:26:42,119:INFO:create_model() successfully completed......................................
2024-04-14 14:26:42,242:INFO:_master_model_container: 2
2024-04-14 14:26:42,242:INFO:_display_container: 2
2024-04-14 14:26:42,243:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 14:26:42,243:INFO:compare_models() successfully completed......................................
2024-04-14 14:26:42,244:INFO:Initializing predict_model()
2024-04-14 14:26:42,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B349FBF40>)
2024-04-14 14:26:42,244:INFO:Checking exceptions
2024-04-14 14:26:42,245:INFO:Preloading libraries
2024-04-14 14:26:43,727:INFO:Initializing predict_model()
2024-04-14 14:26:43,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3561E7A0>)
2024-04-14 14:26:43,727:INFO:Checking exceptions
2024-04-14 14:26:43,727:INFO:Preloading libraries
2024-04-14 14:26:44,613:INFO:Initializing tune_model()
2024-04-14 14:26:44,613:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>)
2024-04-14 14:26:44,613:INFO:Checking exceptions
2024-04-14 14:26:44,632:INFO:Copying training dataset
2024-04-14 14:26:44,640:INFO:Checking base model
2024-04-14 14:26:44,640:INFO:Base model : Decision Tree Classifier
2024-04-14 14:26:44,647:INFO:Declaring metric variables
2024-04-14 14:26:44,653:INFO:Defining Hyperparameters
2024-04-14 14:26:44,773:INFO:Tuning with n_jobs=-1
2024-04-14 14:26:44,773:INFO:Initializing RandomizedSearchCV
2024-04-14 14:26:45,040:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'entropy'}
2024-04-14 14:26:45,040:INFO:Hyperparameter search completed
2024-04-14 14:26:45,040:INFO:SubProcess create_model() called ==================================
2024-04-14 14:26:45,041:INFO:Initializing create_model()
2024-04-14 14:26:45,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B36AADB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 15, 'criterion': 'entropy'})
2024-04-14 14:26:45,041:INFO:Checking exceptions
2024-04-14 14:26:45,041:INFO:Importing libraries
2024-04-14 14:26:45,041:INFO:Copying training dataset
2024-04-14 14:26:45,050:INFO:Defining folds
2024-04-14 14:26:45,050:INFO:Declaring metric variables
2024-04-14 14:26:45,055:INFO:Importing untrained model
2024-04-14 14:26:45,055:INFO:Declaring custom model
2024-04-14 14:26:45,060:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:26:45,068:INFO:Starting cross validation
2024-04-14 14:26:45,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:26:45,197:INFO:Calculating mean and std
2024-04-14 14:26:45,198:INFO:Creating metrics dataframe
2024-04-14 14:26:45,205:INFO:Finalizing model
2024-04-14 14:26:45,231:INFO:Uploading results into container
2024-04-14 14:26:45,232:INFO:Uploading model into container now
2024-04-14 14:26:45,233:INFO:_master_model_container: 3
2024-04-14 14:26:45,233:INFO:_display_container: 5
2024-04-14 14:26:45,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best')
2024-04-14 14:26:45,234:INFO:create_model() successfully completed......................................
2024-04-14 14:26:45,344:INFO:SubProcess create_model() end ==================================
2024-04-14 14:26:45,345:INFO:choose_better activated
2024-04-14 14:26:45,349:INFO:SubProcess create_model() called ==================================
2024-04-14 14:26:45,350:INFO:Initializing create_model()
2024-04-14 14:26:45,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:26:45,351:INFO:Checking exceptions
2024-04-14 14:26:45,352:INFO:Importing libraries
2024-04-14 14:26:45,352:INFO:Copying training dataset
2024-04-14 14:26:45,360:INFO:Defining folds
2024-04-14 14:26:45,361:INFO:Declaring metric variables
2024-04-14 14:26:45,361:INFO:Importing untrained model
2024-04-14 14:26:45,361:INFO:Declaring custom model
2024-04-14 14:26:45,362:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:26:45,362:INFO:Starting cross validation
2024-04-14 14:26:45,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 14:26:45,533:INFO:Calculating mean and std
2024-04-14 14:26:45,534:INFO:Creating metrics dataframe
2024-04-14 14:26:45,536:INFO:Finalizing model
2024-04-14 14:26:45,610:INFO:Uploading results into container
2024-04-14 14:26:45,610:INFO:Uploading model into container now
2024-04-14 14:26:45,611:INFO:_master_model_container: 4
2024-04-14 14:26:45,611:INFO:_display_container: 6
2024-04-14 14:26:45,611:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best')
2024-04-14 14:26:45,611:INFO:create_model() successfully completed......................................
2024-04-14 14:26:45,719:INFO:SubProcess create_model() end ==================================
2024-04-14 14:26:45,719:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best') result for F1 is 0.5515
2024-04-14 14:26:45,720:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best') result for F1 is 0.4534
2024-04-14 14:26:45,720:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best') is best model
2024-04-14 14:26:45,720:INFO:choose_better completed
2024-04-14 14:26:45,721:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 14:26:45,734:INFO:_master_model_container: 4
2024-04-14 14:26:45,734:INFO:_display_container: 5
2024-04-14 14:26:45,735:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best')
2024-04-14 14:26:45,735:INFO:tune_model() successfully completed......................................
2024-04-14 14:26:45,845:INFO:Initializing predict_model()
2024-04-14 14:26:45,845:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B34A11AB0>)
2024-04-14 14:26:45,845:INFO:Checking exceptions
2024-04-14 14:26:45,846:INFO:Preloading libraries
2024-04-14 14:26:46,103:INFO:Initializing finalize_model()
2024-04-14 14:26:46,103:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 14:26:46,103:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best')
2024-04-14 14:26:46,108:INFO:Initializing create_model()
2024-04-14 14:26:46,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 14:26:46,108:INFO:Checking exceptions
2024-04-14 14:26:46,110:INFO:Importing libraries
2024-04-14 14:26:46,110:INFO:Copying training dataset
2024-04-14 14:26:46,111:INFO:Defining folds
2024-04-14 14:26:46,111:INFO:Declaring metric variables
2024-04-14 14:26:46,111:INFO:Importing untrained model
2024-04-14 14:26:46,111:INFO:Declaring custom model
2024-04-14 14:26:46,112:INFO:Decision Tree Classifier Imported successfully
2024-04-14 14:26:46,113:INFO:Cross validation set to False
2024-04-14 14:26:46,113:INFO:Fitting Model
2024-04-14 14:26:46,213:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3220,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:26:46,213:INFO:create_model() successfully completed......................................
2024-04-14 14:26:46,319:INFO:_master_model_container: 4
2024-04-14 14:26:46,319:INFO:_display_container: 6
2024-04-14 14:26:46,327:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3220,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:26:46,327:INFO:finalize_model() successfully completed......................................
2024-04-14 14:26:46,448:INFO:Initializing save_model()
2024-04-14 14:26:46,448:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3220,
                                        splitter='best'))],
         verbose=False), model_name=./model_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 14:26:46,448:INFO:Adding model into prep_pipe
2024-04-14 14:26:46,448:WARNING:Only Model saved as it was a pipeline.
2024-04-14 14:26:46,454:INFO:./model_Kobe.pkl saved in current working directory
2024-04-14 14:26:46,463:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3220,
                                        splitter='best'))],
         verbose=False)
2024-04-14 14:26:46,463:INFO:save_model() successfully completed......................................
2024-04-14 14:26:46,569:INFO:Initializing load_model()
2024-04-14 14:26:46,569:INFO:load_model(model_name=./model_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 14:47:07,467:INFO:Initializing predict_model()
2024-04-14 14:47:07,467:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B34CF3370>)
2024-04-14 14:47:07,467:INFO:Checking exceptions
2024-04-14 14:47:07,467:INFO:Preloading libraries
2024-04-14 14:47:07,747:INFO:Initializing predict_model()
2024-04-14 14:47:07,747:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39DE9510>)
2024-04-14 14:47:07,747:INFO:Checking exceptions
2024-04-14 14:47:07,747:INFO:Preloading libraries
2024-04-14 14:47:23,556:INFO:Initializing predict_model()
2024-04-14 14:47:23,556:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3009F760>)
2024-04-14 14:47:23,556:INFO:Checking exceptions
2024-04-14 14:47:23,556:INFO:Preloading libraries
2024-04-14 14:47:23,827:INFO:Initializing predict_model()
2024-04-14 14:47:23,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39E28A60>)
2024-04-14 14:47:23,827:INFO:Checking exceptions
2024-04-14 14:47:23,827:INFO:Preloading libraries
2024-04-14 14:48:45,451:INFO:Initializing predict_model()
2024-04-14 14:48:45,452:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39B21BD0>)
2024-04-14 14:48:45,452:INFO:Checking exceptions
2024-04-14 14:48:45,452:INFO:Preloading libraries
2024-04-14 14:48:45,735:INFO:Initializing predict_model()
2024-04-14 14:48:45,735:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D40310>)
2024-04-14 14:48:45,735:INFO:Checking exceptions
2024-04-14 14:48:45,735:INFO:Preloading libraries
2024-04-14 14:49:20,490:INFO:Initializing predict_model()
2024-04-14 14:49:20,490:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D41FC0>)
2024-04-14 14:49:20,490:INFO:Checking exceptions
2024-04-14 14:49:20,490:INFO:Preloading libraries
2024-04-14 14:49:20,765:INFO:Initializing predict_model()
2024-04-14 14:49:20,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D945E0>)
2024-04-14 14:49:20,765:INFO:Checking exceptions
2024-04-14 14:49:20,765:INFO:Preloading libraries
2024-04-14 14:53:42,638:INFO:Initializing predict_model()
2024-04-14 14:53:42,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39E2A170>)
2024-04-14 14:53:42,639:INFO:Checking exceptions
2024-04-14 14:53:42,639:INFO:Preloading libraries
2024-04-14 14:53:42,920:INFO:Initializing predict_model()
2024-04-14 14:53:42,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D94820>)
2024-04-14 14:53:42,920:INFO:Checking exceptions
2024-04-14 14:53:42,920:INFO:Preloading libraries
2024-04-14 14:54:21,365:INFO:Initializing predict_model()
2024-04-14 14:54:21,365:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D95510>)
2024-04-14 14:54:21,365:INFO:Checking exceptions
2024-04-14 14:54:21,365:INFO:Preloading libraries
2024-04-14 14:54:21,646:INFO:Initializing predict_model()
2024-04-14 14:54:21,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D94DC0>)
2024-04-14 14:54:21,646:INFO:Checking exceptions
2024-04-14 14:54:21,646:INFO:Preloading libraries
2024-04-14 14:54:40,659:INFO:Initializing predict_model()
2024-04-14 14:54:40,659:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D95B40>)
2024-04-14 14:54:40,659:INFO:Checking exceptions
2024-04-14 14:54:40,659:INFO:Preloading libraries
2024-04-14 14:54:40,934:INFO:Initializing predict_model()
2024-04-14 14:54:40,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D95BD0>)
2024-04-14 14:54:40,934:INFO:Checking exceptions
2024-04-14 14:54:40,935:INFO:Preloading libraries
2024-04-14 14:57:42,770:INFO:Initializing predict_model()
2024-04-14 14:57:42,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39E2BB50>)
2024-04-14 14:57:42,770:INFO:Checking exceptions
2024-04-14 14:57:42,770:INFO:Preloading libraries
2024-04-14 14:57:43,046:INFO:Initializing predict_model()
2024-04-14 14:57:43,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D95510>)
2024-04-14 14:57:43,046:INFO:Checking exceptions
2024-04-14 14:57:43,046:INFO:Preloading libraries
2024-04-14 14:59:08,970:INFO:Initializing predict_model()
2024-04-14 14:59:08,971:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3220, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D95A20>)
2024-04-14 14:59:08,971:INFO:Checking exceptions
2024-04-14 14:59:08,971:INFO:Preloading libraries
2024-04-14 14:59:09,250:INFO:Initializing predict_model()
2024-04-14 14:59:09,250:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B351FC070>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3220, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D439A0>)
2024-04-14 14:59:09,250:INFO:Checking exceptions
2024-04-14 14:59:09,250:INFO:Preloading libraries
2024-04-14 15:54:40,629:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:54:40,629:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:54:40,629:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:54:40,629:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:05:36,883:INFO:PyCaret ClassificationExperiment
2024-04-14 16:05:36,883:INFO:Logging name: clf-default-name
2024-04-14 16:05:36,883:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:05:36,883:INFO:version 3.3.0
2024-04-14 16:05:36,883:INFO:Initializing setup()
2024-04-14 16:05:36,884:INFO:self.USI: 5ba4
2024-04-14 16:05:36,884:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 16:05:36,884:INFO:Checking environment
2024-04-14 16:05:36,884:INFO:python_version: 3.10.14
2024-04-14 16:05:36,884:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 16:05:36,884:INFO:machine: AMD64
2024-04-14 16:05:36,884:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 16:05:36,890:INFO:Memory: svmem(total=17131573248, available=6364192768, percent=62.9, used=10767380480, free=6364192768)
2024-04-14 16:05:36,890:INFO:Physical Core: 8
2024-04-14 16:05:36,890:INFO:Logical Core: 16
2024-04-14 16:05:36,890:INFO:Checking libraries
2024-04-14 16:05:36,890:INFO:System:
2024-04-14 16:05:36,890:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:05:36,890:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 16:05:36,891:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 16:05:36,891:INFO:PyCaret required dependencies:
2024-04-14 16:05:36,891:INFO:                 pip: 23.3.1
2024-04-14 16:05:36,891:INFO:          setuptools: 68.2.2
2024-04-14 16:05:36,891:INFO:             pycaret: 3.3.0
2024-04-14 16:05:36,891:INFO:             IPython: 8.23.0
2024-04-14 16:05:36,891:INFO:          ipywidgets: 8.1.2
2024-04-14 16:05:36,891:INFO:                tqdm: 4.66.2
2024-04-14 16:05:36,891:INFO:               numpy: 1.26.4
2024-04-14 16:05:36,891:INFO:              pandas: 2.1.4
2024-04-14 16:05:36,891:INFO:              jinja2: 3.1.3
2024-04-14 16:05:36,891:INFO:               scipy: 1.11.4
2024-04-14 16:05:36,892:INFO:              joblib: 1.3.2
2024-04-14 16:05:36,892:INFO:             sklearn: 1.4.1.post1
2024-04-14 16:05:36,892:INFO:                pyod: 1.1.3
2024-04-14 16:05:36,892:INFO:            imblearn: 0.12.2
2024-04-14 16:05:36,892:INFO:   category_encoders: 2.6.3
2024-04-14 16:05:36,892:INFO:            lightgbm: 4.3.0
2024-04-14 16:05:36,892:INFO:               numba: 0.59.1
2024-04-14 16:05:36,892:INFO:            requests: 2.31.0
2024-04-14 16:05:36,892:INFO:          matplotlib: 3.7.5
2024-04-14 16:05:36,892:INFO:          scikitplot: 0.3.7
2024-04-14 16:05:36,892:INFO:         yellowbrick: 1.5
2024-04-14 16:05:36,893:INFO:              plotly: 5.20.0
2024-04-14 16:05:36,893:INFO:    plotly-resampler: Not installed
2024-04-14 16:05:36,893:INFO:             kaleido: 0.2.1
2024-04-14 16:05:36,893:INFO:           schemdraw: 0.15
2024-04-14 16:05:36,893:INFO:         statsmodels: 0.14.1
2024-04-14 16:05:36,893:INFO:              sktime: 0.28.0
2024-04-14 16:05:36,893:INFO:               tbats: 1.1.3
2024-04-14 16:05:36,893:INFO:            pmdarima: 2.0.4
2024-04-14 16:05:36,893:INFO:              psutil: 5.9.8
2024-04-14 16:05:36,893:INFO:          markupsafe: 2.1.5
2024-04-14 16:05:36,893:INFO:             pickle5: Not installed
2024-04-14 16:05:36,894:INFO:         cloudpickle: 3.0.0
2024-04-14 16:05:36,894:INFO:         deprecation: 2.1.0
2024-04-14 16:05:36,894:INFO:              xxhash: 3.4.1
2024-04-14 16:05:36,894:INFO:           wurlitzer: 3.0.3
2024-04-14 16:05:36,894:INFO:PyCaret optional dependencies:
2024-04-14 16:05:36,894:INFO:                shap: Not installed
2024-04-14 16:05:36,894:INFO:           interpret: Not installed
2024-04-14 16:05:36,894:INFO:                umap: Not installed
2024-04-14 16:05:36,894:INFO:     ydata_profiling: Not installed
2024-04-14 16:05:36,894:INFO:  explainerdashboard: Not installed
2024-04-14 16:05:36,894:INFO:             autoviz: Not installed
2024-04-14 16:05:36,894:INFO:           fairlearn: Not installed
2024-04-14 16:05:36,895:INFO:          deepchecks: Not installed
2024-04-14 16:05:36,895:INFO:             xgboost: Not installed
2024-04-14 16:05:36,895:INFO:            catboost: Not installed
2024-04-14 16:05:36,895:INFO:              kmodes: Not installed
2024-04-14 16:05:36,895:INFO:             mlxtend: Not installed
2024-04-14 16:05:36,895:INFO:       statsforecast: Not installed
2024-04-14 16:05:36,895:INFO:        tune_sklearn: Not installed
2024-04-14 16:05:36,895:INFO:                 ray: Not installed
2024-04-14 16:05:36,895:INFO:            hyperopt: Not installed
2024-04-14 16:05:36,895:INFO:              optuna: Not installed
2024-04-14 16:05:36,895:INFO:               skopt: Not installed
2024-04-14 16:05:36,895:INFO:              mlflow: 2.11.3
2024-04-14 16:05:36,895:INFO:              gradio: Not installed
2024-04-14 16:05:36,895:INFO:             fastapi: Not installed
2024-04-14 16:05:36,896:INFO:             uvicorn: Not installed
2024-04-14 16:05:36,896:INFO:              m2cgen: Not installed
2024-04-14 16:05:36,896:INFO:           evidently: Not installed
2024-04-14 16:05:36,896:INFO:               fugue: Not installed
2024-04-14 16:05:36,896:INFO:           streamlit: 1.33.0
2024-04-14 16:05:36,896:INFO:             prophet: Not installed
2024-04-14 16:05:36,896:INFO:None
2024-04-14 16:05:36,896:INFO:Set up data.
2024-04-14 16:05:36,903:INFO:Set up folding strategy.
2024-04-14 16:05:36,903:INFO:Set up train/test split.
2024-04-14 16:05:36,903:INFO:Set up data.
2024-04-14 16:05:36,909:INFO:Set up index.
2024-04-14 16:05:36,910:INFO:Assigning column types.
2024-04-14 16:05:36,917:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:05:36,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:05:36,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:05:37,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:05:37,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:05:37,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,149:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:05:37,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:05:37,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,335:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:05:37,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,379:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:05:37,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,637:INFO:Preparing preprocessing pipeline...
2024-04-14 16:05:37,639:INFO:Set up simple imputation.
2024-04-14 16:05:37,640:INFO:Set up feature normalization.
2024-04-14 16:05:37,681:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:05:37,688:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 16:05:37,688:INFO:Creating final display dataframe.
2024-04-14 16:05:37,825:INFO:Setup _display_container:                     Description             Value
0                    Session id              8540
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5ba4
2024-04-14 16:05:37,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:37,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:38,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:38,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:05:38,065:INFO:setup() successfully completed in 1.19s...............
2024-04-14 16:05:38,066:INFO:Initializing compare_models()
2024-04-14 16:05:38,066:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 16:05:38,066:INFO:Checking exceptions
2024-04-14 16:05:38,072:INFO:Preparing display monitor
2024-04-14 16:05:38,099:INFO:Initializing Logistic Regression
2024-04-14 16:05:38,099:INFO:Total runtime is 0.0 minutes
2024-04-14 16:05:38,104:INFO:SubProcess create_model() called ==================================
2024-04-14 16:05:38,104:INFO:Initializing create_model()
2024-04-14 16:05:38,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B368F0040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:05:38,104:INFO:Checking exceptions
2024-04-14 16:05:38,105:INFO:Importing libraries
2024-04-14 16:05:38,105:INFO:Copying training dataset
2024-04-14 16:05:38,114:INFO:Defining folds
2024-04-14 16:05:38,115:INFO:Declaring metric variables
2024-04-14 16:05:38,119:INFO:Importing untrained model
2024-04-14 16:05:38,123:INFO:Logistic Regression Imported successfully
2024-04-14 16:05:38,131:INFO:Starting cross validation
2024-04-14 16:05:38,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:05:43,402:INFO:Calculating mean and std
2024-04-14 16:05:43,406:INFO:Creating metrics dataframe
2024-04-14 16:05:43,410:INFO:Uploading results into container
2024-04-14 16:05:43,412:INFO:Uploading model into container now
2024-04-14 16:05:43,412:INFO:_master_model_container: 1
2024-04-14 16:05:43,412:INFO:_display_container: 2
2024-04-14 16:05:43,413:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8540, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:05:43,413:INFO:create_model() successfully completed......................................
2024-04-14 16:05:43,866:INFO:SubProcess create_model() end ==================================
2024-04-14 16:05:43,866:INFO:Creating metrics dataframe
2024-04-14 16:05:43,875:INFO:Initializing Decision Tree Classifier
2024-04-14 16:05:43,875:INFO:Total runtime is 0.0962707797686259 minutes
2024-04-14 16:05:43,879:INFO:SubProcess create_model() called ==================================
2024-04-14 16:05:43,880:INFO:Initializing create_model()
2024-04-14 16:05:43,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B368F0040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:05:43,880:INFO:Checking exceptions
2024-04-14 16:05:43,880:INFO:Importing libraries
2024-04-14 16:05:43,880:INFO:Copying training dataset
2024-04-14 16:05:43,890:INFO:Defining folds
2024-04-14 16:05:43,890:INFO:Declaring metric variables
2024-04-14 16:05:43,895:INFO:Importing untrained model
2024-04-14 16:05:43,899:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:05:43,907:INFO:Starting cross validation
2024-04-14 16:05:43,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:05:47,256:INFO:Calculating mean and std
2024-04-14 16:05:47,259:INFO:Creating metrics dataframe
2024-04-14 16:05:47,263:INFO:Uploading results into container
2024-04-14 16:05:47,265:INFO:Uploading model into container now
2024-04-14 16:05:47,265:INFO:_master_model_container: 2
2024-04-14 16:05:47,266:INFO:_display_container: 2
2024-04-14 16:05:47,266:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best')
2024-04-14 16:05:47,267:INFO:create_model() successfully completed......................................
2024-04-14 16:05:47,449:INFO:SubProcess create_model() end ==================================
2024-04-14 16:05:47,449:INFO:Creating metrics dataframe
2024-04-14 16:05:47,471:INFO:Initializing create_model()
2024-04-14 16:05:47,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:05:47,471:INFO:Checking exceptions
2024-04-14 16:05:47,473:INFO:Importing libraries
2024-04-14 16:05:47,473:INFO:Copying training dataset
2024-04-14 16:05:47,482:INFO:Defining folds
2024-04-14 16:05:47,482:INFO:Declaring metric variables
2024-04-14 16:05:47,482:INFO:Importing untrained model
2024-04-14 16:05:47,482:INFO:Declaring custom model
2024-04-14 16:05:47,483:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:05:47,484:INFO:Cross validation set to False
2024-04-14 16:05:47,484:INFO:Fitting Model
2024-04-14 16:05:47,559:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best')
2024-04-14 16:05:47,559:INFO:create_model() successfully completed......................................
2024-04-14 16:05:47,717:INFO:Initializing create_model()
2024-04-14 16:05:47,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8540, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:05:47,718:INFO:Checking exceptions
2024-04-14 16:05:47,720:INFO:Importing libraries
2024-04-14 16:05:47,720:INFO:Copying training dataset
2024-04-14 16:05:47,728:INFO:Defining folds
2024-04-14 16:05:47,728:INFO:Declaring metric variables
2024-04-14 16:05:47,729:INFO:Importing untrained model
2024-04-14 16:05:47,729:INFO:Declaring custom model
2024-04-14 16:05:47,729:INFO:Logistic Regression Imported successfully
2024-04-14 16:05:47,730:INFO:Cross validation set to False
2024-04-14 16:05:47,731:INFO:Fitting Model
2024-04-14 16:05:47,755:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8540, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:05:47,755:INFO:create_model() successfully completed......................................
2024-04-14 16:05:47,925:INFO:_master_model_container: 2
2024-04-14 16:05:47,925:INFO:_display_container: 2
2024-04-14 16:05:47,926:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8540, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 16:05:47,927:INFO:compare_models() successfully completed......................................
2024-04-14 16:05:47,928:INFO:Initializing predict_model()
2024-04-14 16:05:47,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8540, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B34A13A30>)
2024-04-14 16:05:47,928:INFO:Checking exceptions
2024-04-14 16:05:47,929:INFO:Preloading libraries
2024-04-14 16:05:49,287:INFO:Initializing predict_model()
2024-04-14 16:05:49,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C0267A0>)
2024-04-14 16:05:49,287:INFO:Checking exceptions
2024-04-14 16:05:49,287:INFO:Preloading libraries
2024-04-14 16:05:50,223:INFO:Initializing tune_model()
2024-04-14 16:05:50,223:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>)
2024-04-14 16:05:50,223:INFO:Checking exceptions
2024-04-14 16:05:50,243:INFO:Copying training dataset
2024-04-14 16:05:50,251:INFO:Checking base model
2024-04-14 16:05:50,251:INFO:Base model : Decision Tree Classifier
2024-04-14 16:05:50,256:INFO:Declaring metric variables
2024-04-14 16:05:50,260:INFO:Defining Hyperparameters
2024-04-14 16:05:50,455:INFO:Tuning with n_jobs=-1
2024-04-14 16:05:50,455:INFO:Initializing RandomizedSearchCV
2024-04-14 16:05:50,714:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 13, 'actual_estimator__criterion': 'entropy'}
2024-04-14 16:05:50,714:INFO:Hyperparameter search completed
2024-04-14 16:05:50,714:INFO:SubProcess create_model() called ==================================
2024-04-14 16:05:50,715:INFO:Initializing create_model()
2024-04-14 16:05:50,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3539D9F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 13, 'criterion': 'entropy'})
2024-04-14 16:05:50,715:INFO:Checking exceptions
2024-04-14 16:05:50,715:INFO:Importing libraries
2024-04-14 16:05:50,715:INFO:Copying training dataset
2024-04-14 16:05:50,723:INFO:Defining folds
2024-04-14 16:05:50,723:INFO:Declaring metric variables
2024-04-14 16:05:50,728:INFO:Importing untrained model
2024-04-14 16:05:50,728:INFO:Declaring custom model
2024-04-14 16:05:50,733:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:05:50,741:INFO:Starting cross validation
2024-04-14 16:05:50,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:05:50,889:INFO:Calculating mean and std
2024-04-14 16:05:50,890:INFO:Creating metrics dataframe
2024-04-14 16:05:50,896:INFO:Finalizing model
2024-04-14 16:05:50,922:INFO:Uploading results into container
2024-04-14 16:05:50,923:INFO:Uploading model into container now
2024-04-14 16:05:50,924:INFO:_master_model_container: 3
2024-04-14 16:05:50,924:INFO:_display_container: 5
2024-04-14 16:05:50,924:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=13, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best')
2024-04-14 16:05:50,925:INFO:create_model() successfully completed......................................
2024-04-14 16:05:51,115:INFO:SubProcess create_model() end ==================================
2024-04-14 16:05:51,115:INFO:choose_better activated
2024-04-14 16:05:51,119:INFO:SubProcess create_model() called ==================================
2024-04-14 16:05:51,120:INFO:Initializing create_model()
2024-04-14 16:05:51,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:05:51,120:INFO:Checking exceptions
2024-04-14 16:05:51,122:INFO:Importing libraries
2024-04-14 16:05:51,122:INFO:Copying training dataset
2024-04-14 16:05:51,131:INFO:Defining folds
2024-04-14 16:05:51,131:INFO:Declaring metric variables
2024-04-14 16:05:51,131:INFO:Importing untrained model
2024-04-14 16:05:51,131:INFO:Declaring custom model
2024-04-14 16:05:51,132:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:05:51,132:INFO:Starting cross validation
2024-04-14 16:05:51,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:05:51,306:INFO:Calculating mean and std
2024-04-14 16:05:51,307:INFO:Creating metrics dataframe
2024-04-14 16:05:51,309:INFO:Finalizing model
2024-04-14 16:05:51,382:INFO:Uploading results into container
2024-04-14 16:05:51,382:INFO:Uploading model into container now
2024-04-14 16:05:51,383:INFO:_master_model_container: 4
2024-04-14 16:05:51,383:INFO:_display_container: 6
2024-04-14 16:05:51,383:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best')
2024-04-14 16:05:51,383:INFO:create_model() successfully completed......................................
2024-04-14 16:05:51,534:INFO:SubProcess create_model() end ==================================
2024-04-14 16:05:51,535:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best') result for F1 is 0.5467
2024-04-14 16:05:51,535:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=13, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best') result for F1 is 0.4614
2024-04-14 16:05:51,536:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best') is best model
2024-04-14 16:05:51,536:INFO:choose_better completed
2024-04-14 16:05:51,536:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 16:05:51,550:INFO:_master_model_container: 4
2024-04-14 16:05:51,550:INFO:_display_container: 5
2024-04-14 16:05:51,551:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best')
2024-04-14 16:05:51,551:INFO:tune_model() successfully completed......................................
2024-04-14 16:05:51,701:INFO:Initializing predict_model()
2024-04-14 16:05:51,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39B21BD0>)
2024-04-14 16:05:51,701:INFO:Checking exceptions
2024-04-14 16:05:51,701:INFO:Preloading libraries
2024-04-14 16:05:52,025:INFO:Initializing finalize_model()
2024-04-14 16:05:52,025:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 16:05:52,025:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best')
2024-04-14 16:05:52,031:INFO:Initializing create_model()
2024-04-14 16:05:52,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:05:52,031:INFO:Checking exceptions
2024-04-14 16:05:52,033:INFO:Importing libraries
2024-04-14 16:05:52,033:INFO:Copying training dataset
2024-04-14 16:05:52,034:INFO:Defining folds
2024-04-14 16:05:52,034:INFO:Declaring metric variables
2024-04-14 16:05:52,034:INFO:Importing untrained model
2024-04-14 16:05:52,034:INFO:Declaring custom model
2024-04-14 16:05:52,035:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:05:52,037:INFO:Cross validation set to False
2024-04-14 16:05:52,037:INFO:Fitting Model
2024-04-14 16:05:52,144:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8540,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:05:52,144:INFO:create_model() successfully completed......................................
2024-04-14 16:05:52,298:INFO:_master_model_container: 4
2024-04-14 16:05:52,298:INFO:_display_container: 6
2024-04-14 16:05:52,307:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8540,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:05:52,307:INFO:finalize_model() successfully completed......................................
2024-04-14 16:05:52,470:INFO:Initializing save_model()
2024-04-14 16:05:52,470:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8540,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:05:52,470:INFO:Adding model into prep_pipe
2024-04-14 16:05:52,470:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:05:52,478:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 16:05:52,486:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8540,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:05:52,486:INFO:save_model() successfully completed......................................
2024-04-14 16:05:52,645:INFO:Initializing load_model()
2024-04-14 16:05:52,645:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 16:05:57,411:INFO:Initializing predict_model()
2024-04-14 16:05:57,412:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8540, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3BFC4280>)
2024-04-14 16:05:57,412:INFO:Checking exceptions
2024-04-14 16:05:57,412:INFO:Preloading libraries
2024-04-14 16:05:57,710:INFO:Initializing predict_model()
2024-04-14 16:05:57,710:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B6E23E1D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8540, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D95120>)
2024-04-14 16:05:57,710:INFO:Checking exceptions
2024-04-14 16:05:57,710:INFO:Preloading libraries
2024-04-14 16:07:22,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:22,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:22,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:22,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:10:54,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:10:54,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:10:54,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:10:54,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:14:46,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:14:46,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:14:46,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:14:46,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:22:51,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:22:51,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:22:51,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:22:51,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:50:10,536:INFO:PyCaret ClassificationExperiment
2024-04-14 16:50:10,536:INFO:Logging name: clf-default-name
2024-04-14 16:50:10,536:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:50:10,536:INFO:version 3.3.0
2024-04-14 16:50:10,536:INFO:Initializing setup()
2024-04-14 16:50:10,536:INFO:self.USI: 6359
2024-04-14 16:50:10,537:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 16:50:10,537:INFO:Checking environment
2024-04-14 16:50:10,537:INFO:python_version: 3.10.14
2024-04-14 16:50:10,537:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 16:50:10,537:INFO:machine: AMD64
2024-04-14 16:50:10,537:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 16:50:10,542:INFO:Memory: svmem(total=17131573248, available=5579239424, percent=67.4, used=11552333824, free=5579239424)
2024-04-14 16:50:10,543:INFO:Physical Core: 8
2024-04-14 16:50:10,543:INFO:Logical Core: 16
2024-04-14 16:50:10,543:INFO:Checking libraries
2024-04-14 16:50:10,543:INFO:System:
2024-04-14 16:50:10,543:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:50:10,543:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 16:50:10,543:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 16:50:10,543:INFO:PyCaret required dependencies:
2024-04-14 16:50:10,545:INFO:                 pip: 23.3.1
2024-04-14 16:50:10,545:INFO:          setuptools: 68.2.2
2024-04-14 16:50:10,545:INFO:             pycaret: 3.3.0
2024-04-14 16:50:10,545:INFO:             IPython: 8.23.0
2024-04-14 16:50:10,545:INFO:          ipywidgets: 8.1.2
2024-04-14 16:50:10,545:INFO:                tqdm: 4.66.2
2024-04-14 16:50:10,545:INFO:               numpy: 1.26.4
2024-04-14 16:50:10,545:INFO:              pandas: 2.1.4
2024-04-14 16:50:10,545:INFO:              jinja2: 3.1.3
2024-04-14 16:50:10,545:INFO:               scipy: 1.11.4
2024-04-14 16:50:10,545:INFO:              joblib: 1.3.2
2024-04-14 16:50:10,545:INFO:             sklearn: 1.4.1.post1
2024-04-14 16:50:10,545:INFO:                pyod: 1.1.3
2024-04-14 16:50:10,546:INFO:            imblearn: 0.12.2
2024-04-14 16:50:10,546:INFO:   category_encoders: 2.6.3
2024-04-14 16:50:10,546:INFO:            lightgbm: 4.3.0
2024-04-14 16:50:10,546:INFO:               numba: 0.59.1
2024-04-14 16:50:10,546:INFO:            requests: 2.31.0
2024-04-14 16:50:10,546:INFO:          matplotlib: 3.7.5
2024-04-14 16:50:10,546:INFO:          scikitplot: 0.3.7
2024-04-14 16:50:10,546:INFO:         yellowbrick: 1.5
2024-04-14 16:50:10,546:INFO:              plotly: 5.20.0
2024-04-14 16:50:10,546:INFO:    plotly-resampler: Not installed
2024-04-14 16:50:10,546:INFO:             kaleido: 0.2.1
2024-04-14 16:50:10,546:INFO:           schemdraw: 0.15
2024-04-14 16:50:10,546:INFO:         statsmodels: 0.14.1
2024-04-14 16:50:10,546:INFO:              sktime: 0.28.0
2024-04-14 16:50:10,546:INFO:               tbats: 1.1.3
2024-04-14 16:50:10,547:INFO:            pmdarima: 2.0.4
2024-04-14 16:50:10,547:INFO:              psutil: 5.9.8
2024-04-14 16:50:10,547:INFO:          markupsafe: 2.1.5
2024-04-14 16:50:10,547:INFO:             pickle5: Not installed
2024-04-14 16:50:10,547:INFO:         cloudpickle: 3.0.0
2024-04-14 16:50:10,547:INFO:         deprecation: 2.1.0
2024-04-14 16:50:10,547:INFO:              xxhash: 3.4.1
2024-04-14 16:50:10,547:INFO:           wurlitzer: 3.0.3
2024-04-14 16:50:10,547:INFO:PyCaret optional dependencies:
2024-04-14 16:50:10,547:INFO:                shap: Not installed
2024-04-14 16:50:10,547:INFO:           interpret: Not installed
2024-04-14 16:50:10,547:INFO:                umap: Not installed
2024-04-14 16:50:10,547:INFO:     ydata_profiling: Not installed
2024-04-14 16:50:10,548:INFO:  explainerdashboard: Not installed
2024-04-14 16:50:10,548:INFO:             autoviz: Not installed
2024-04-14 16:50:10,548:INFO:           fairlearn: Not installed
2024-04-14 16:50:10,548:INFO:          deepchecks: Not installed
2024-04-14 16:50:10,548:INFO:             xgboost: Not installed
2024-04-14 16:50:10,548:INFO:            catboost: Not installed
2024-04-14 16:50:10,548:INFO:              kmodes: Not installed
2024-04-14 16:50:10,548:INFO:             mlxtend: Not installed
2024-04-14 16:50:10,548:INFO:       statsforecast: Not installed
2024-04-14 16:50:10,548:INFO:        tune_sklearn: Not installed
2024-04-14 16:50:10,548:INFO:                 ray: Not installed
2024-04-14 16:50:10,548:INFO:            hyperopt: Not installed
2024-04-14 16:50:10,548:INFO:              optuna: Not installed
2024-04-14 16:50:10,548:INFO:               skopt: Not installed
2024-04-14 16:50:10,548:INFO:              mlflow: 2.11.3
2024-04-14 16:50:10,549:INFO:              gradio: Not installed
2024-04-14 16:50:10,549:INFO:             fastapi: Not installed
2024-04-14 16:50:10,549:INFO:             uvicorn: Not installed
2024-04-14 16:50:10,549:INFO:              m2cgen: Not installed
2024-04-14 16:50:10,549:INFO:           evidently: Not installed
2024-04-14 16:50:10,549:INFO:               fugue: Not installed
2024-04-14 16:50:10,549:INFO:           streamlit: 1.33.0
2024-04-14 16:50:10,549:INFO:             prophet: Not installed
2024-04-14 16:50:10,549:INFO:None
2024-04-14 16:50:10,550:INFO:Set up data.
2024-04-14 16:50:10,560:INFO:Set up folding strategy.
2024-04-14 16:50:10,560:INFO:Set up train/test split.
2024-04-14 16:50:10,560:INFO:Set up data.
2024-04-14 16:50:10,566:INFO:Set up index.
2024-04-14 16:50:10,566:INFO:Assigning column types.
2024-04-14 16:50:10,573:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:50:10,645:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:50:10,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:50:10,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:10,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:10,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:50:10,767:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:50:10,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:10,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:10,812:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:50:10,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:50:10,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:10,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:50:11,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,045:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:50:11,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,276:INFO:Preparing preprocessing pipeline...
2024-04-14 16:50:11,278:INFO:Set up simple imputation.
2024-04-14 16:50:11,279:INFO:Set up feature normalization.
2024-04-14 16:50:11,321:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:50:11,328:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 16:50:11,328:INFO:Creating final display dataframe.
2024-04-14 16:50:11,463:INFO:Setup _display_container:                     Description             Value
0                    Session id              8130
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6359
2024-04-14 16:50:11,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:50:11,707:INFO:setup() successfully completed in 1.18s...............
2024-04-14 16:50:11,708:INFO:Initializing compare_models()
2024-04-14 16:50:11,708:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 16:50:11,709:INFO:Checking exceptions
2024-04-14 16:50:11,714:INFO:Preparing display monitor
2024-04-14 16:50:11,744:INFO:Initializing Logistic Regression
2024-04-14 16:50:11,744:INFO:Total runtime is 0.0 minutes
2024-04-14 16:50:11,748:INFO:SubProcess create_model() called ==================================
2024-04-14 16:50:11,749:INFO:Initializing create_model()
2024-04-14 16:50:11,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3C5126E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:50:11,749:INFO:Checking exceptions
2024-04-14 16:50:11,749:INFO:Importing libraries
2024-04-14 16:50:11,749:INFO:Copying training dataset
2024-04-14 16:50:11,759:INFO:Defining folds
2024-04-14 16:50:11,759:INFO:Declaring metric variables
2024-04-14 16:50:11,764:INFO:Importing untrained model
2024-04-14 16:50:11,772:INFO:Logistic Regression Imported successfully
2024-04-14 16:50:11,789:INFO:Starting cross validation
2024-04-14 16:50:11,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:50:16,713:INFO:Calculating mean and std
2024-04-14 16:50:16,717:INFO:Creating metrics dataframe
2024-04-14 16:50:16,722:INFO:Uploading results into container
2024-04-14 16:50:16,724:INFO:Uploading model into container now
2024-04-14 16:50:16,724:INFO:_master_model_container: 1
2024-04-14 16:50:16,725:INFO:_display_container: 2
2024-04-14 16:50:16,725:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8130, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:50:16,726:INFO:create_model() successfully completed......................................
2024-04-14 16:50:17,009:INFO:SubProcess create_model() end ==================================
2024-04-14 16:50:17,009:INFO:Creating metrics dataframe
2024-04-14 16:50:17,018:INFO:Initializing Decision Tree Classifier
2024-04-14 16:50:17,018:INFO:Total runtime is 0.08789650996526083 minutes
2024-04-14 16:50:17,022:INFO:SubProcess create_model() called ==================================
2024-04-14 16:50:17,023:INFO:Initializing create_model()
2024-04-14 16:50:17,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3C5126E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:50:17,023:INFO:Checking exceptions
2024-04-14 16:50:17,023:INFO:Importing libraries
2024-04-14 16:50:17,023:INFO:Copying training dataset
2024-04-14 16:50:17,032:INFO:Defining folds
2024-04-14 16:50:17,032:INFO:Declaring metric variables
2024-04-14 16:50:17,037:INFO:Importing untrained model
2024-04-14 16:50:17,042:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:50:17,050:INFO:Starting cross validation
2024-04-14 16:50:17,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:50:20,437:INFO:Calculating mean and std
2024-04-14 16:50:20,441:INFO:Creating metrics dataframe
2024-04-14 16:50:20,444:INFO:Uploading results into container
2024-04-14 16:50:20,445:INFO:Uploading model into container now
2024-04-14 16:50:20,445:INFO:_master_model_container: 2
2024-04-14 16:50:20,446:INFO:_display_container: 2
2024-04-14 16:50:20,447:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best')
2024-04-14 16:50:20,447:INFO:create_model() successfully completed......................................
2024-04-14 16:50:20,625:INFO:SubProcess create_model() end ==================================
2024-04-14 16:50:20,625:INFO:Creating metrics dataframe
2024-04-14 16:50:20,646:INFO:Initializing create_model()
2024-04-14 16:50:20,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:50:20,646:INFO:Checking exceptions
2024-04-14 16:50:20,648:INFO:Importing libraries
2024-04-14 16:50:20,648:INFO:Copying training dataset
2024-04-14 16:50:20,656:INFO:Defining folds
2024-04-14 16:50:20,656:INFO:Declaring metric variables
2024-04-14 16:50:20,657:INFO:Importing untrained model
2024-04-14 16:50:20,657:INFO:Declaring custom model
2024-04-14 16:50:20,657:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:50:20,658:INFO:Cross validation set to False
2024-04-14 16:50:20,658:INFO:Fitting Model
2024-04-14 16:50:20,732:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best')
2024-04-14 16:50:20,732:INFO:create_model() successfully completed......................................
2024-04-14 16:50:20,887:INFO:Initializing create_model()
2024-04-14 16:50:20,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8130, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:50:20,888:INFO:Checking exceptions
2024-04-14 16:50:20,890:INFO:Importing libraries
2024-04-14 16:50:20,890:INFO:Copying training dataset
2024-04-14 16:50:20,898:INFO:Defining folds
2024-04-14 16:50:20,898:INFO:Declaring metric variables
2024-04-14 16:50:20,898:INFO:Importing untrained model
2024-04-14 16:50:20,898:INFO:Declaring custom model
2024-04-14 16:50:20,899:INFO:Logistic Regression Imported successfully
2024-04-14 16:50:20,900:INFO:Cross validation set to False
2024-04-14 16:50:20,900:INFO:Fitting Model
2024-04-14 16:50:20,925:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8130, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:50:20,925:INFO:create_model() successfully completed......................................
2024-04-14 16:50:21,093:INFO:_master_model_container: 2
2024-04-14 16:50:21,093:INFO:_display_container: 2
2024-04-14 16:50:21,094:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8130, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 16:50:21,094:INFO:compare_models() successfully completed......................................
2024-04-14 16:50:21,095:INFO:Initializing predict_model()
2024-04-14 16:50:21,095:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8130, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B34A120E0>)
2024-04-14 16:50:21,096:INFO:Checking exceptions
2024-04-14 16:50:21,096:INFO:Preloading libraries
2024-04-14 16:50:22,427:INFO:Initializing predict_model()
2024-04-14 16:50:22,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B34D72170>)
2024-04-14 16:50:22,427:INFO:Checking exceptions
2024-04-14 16:50:22,428:INFO:Preloading libraries
2024-04-14 16:50:23,364:INFO:Initializing tune_model()
2024-04-14 16:50:23,364:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>)
2024-04-14 16:50:23,364:INFO:Checking exceptions
2024-04-14 16:50:23,384:INFO:Copying training dataset
2024-04-14 16:50:23,393:INFO:Checking base model
2024-04-14 16:50:23,393:INFO:Base model : Decision Tree Classifier
2024-04-14 16:50:23,398:INFO:Declaring metric variables
2024-04-14 16:50:23,403:INFO:Defining Hyperparameters
2024-04-14 16:50:23,564:INFO:Tuning with n_jobs=-1
2024-04-14 16:50:23,564:INFO:Initializing RandomizedSearchCV
2024-04-14 16:50:23,823:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2024-04-14 16:50:23,823:INFO:Hyperparameter search completed
2024-04-14 16:50:23,823:INFO:SubProcess create_model() called ==================================
2024-04-14 16:50:23,824:INFO:Initializing create_model()
2024-04-14 16:50:23,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3C511CF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 10, 'criterion': 'entropy'})
2024-04-14 16:50:23,824:INFO:Checking exceptions
2024-04-14 16:50:23,824:INFO:Importing libraries
2024-04-14 16:50:23,824:INFO:Copying training dataset
2024-04-14 16:50:23,832:INFO:Defining folds
2024-04-14 16:50:23,832:INFO:Declaring metric variables
2024-04-14 16:50:23,837:INFO:Importing untrained model
2024-04-14 16:50:23,837:INFO:Declaring custom model
2024-04-14 16:50:23,842:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:50:23,850:INFO:Starting cross validation
2024-04-14 16:50:23,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:50:23,996:INFO:Calculating mean and std
2024-04-14 16:50:23,997:INFO:Creating metrics dataframe
2024-04-14 16:50:24,003:INFO:Finalizing model
2024-04-14 16:50:24,034:INFO:Uploading results into container
2024-04-14 16:50:24,035:INFO:Uploading model into container now
2024-04-14 16:50:24,037:INFO:_master_model_container: 3
2024-04-14 16:50:24,037:INFO:_display_container: 5
2024-04-14 16:50:24,038:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best')
2024-04-14 16:50:24,038:INFO:create_model() successfully completed......................................
2024-04-14 16:50:24,190:INFO:SubProcess create_model() end ==================================
2024-04-14 16:50:24,190:INFO:choose_better activated
2024-04-14 16:50:24,194:INFO:SubProcess create_model() called ==================================
2024-04-14 16:50:24,195:INFO:Initializing create_model()
2024-04-14 16:50:24,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:50:24,195:INFO:Checking exceptions
2024-04-14 16:50:24,197:INFO:Importing libraries
2024-04-14 16:50:24,197:INFO:Copying training dataset
2024-04-14 16:50:24,205:INFO:Defining folds
2024-04-14 16:50:24,205:INFO:Declaring metric variables
2024-04-14 16:50:24,205:INFO:Importing untrained model
2024-04-14 16:50:24,205:INFO:Declaring custom model
2024-04-14 16:50:24,206:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:50:24,206:INFO:Starting cross validation
2024-04-14 16:50:24,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:50:24,380:INFO:Calculating mean and std
2024-04-14 16:50:24,381:INFO:Creating metrics dataframe
2024-04-14 16:50:24,383:INFO:Finalizing model
2024-04-14 16:50:24,455:INFO:Uploading results into container
2024-04-14 16:50:24,456:INFO:Uploading model into container now
2024-04-14 16:50:24,456:INFO:_master_model_container: 4
2024-04-14 16:50:24,456:INFO:_display_container: 6
2024-04-14 16:50:24,457:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best')
2024-04-14 16:50:24,457:INFO:create_model() successfully completed......................................
2024-04-14 16:50:24,603:INFO:SubProcess create_model() end ==================================
2024-04-14 16:50:24,604:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best') result for F1 is 0.547
2024-04-14 16:50:24,605:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best') result for F1 is 0.4925
2024-04-14 16:50:24,605:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best') is best model
2024-04-14 16:50:24,605:INFO:choose_better completed
2024-04-14 16:50:24,606:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 16:50:24,626:INFO:_master_model_container: 4
2024-04-14 16:50:24,627:INFO:_display_container: 5
2024-04-14 16:50:24,627:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best')
2024-04-14 16:50:24,628:INFO:tune_model() successfully completed......................................
2024-04-14 16:50:24,795:INFO:Initializing predict_model()
2024-04-14 16:50:24,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3998D2D0>)
2024-04-14 16:50:24,795:INFO:Checking exceptions
2024-04-14 16:50:24,795:INFO:Preloading libraries
2024-04-14 16:50:25,092:INFO:Initializing finalize_model()
2024-04-14 16:50:25,092:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 16:50:25,093:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best')
2024-04-14 16:50:25,097:INFO:Initializing create_model()
2024-04-14 16:50:25,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:50:25,098:INFO:Checking exceptions
2024-04-14 16:50:25,099:INFO:Importing libraries
2024-04-14 16:50:25,099:INFO:Copying training dataset
2024-04-14 16:50:25,100:INFO:Defining folds
2024-04-14 16:50:25,100:INFO:Declaring metric variables
2024-04-14 16:50:25,100:INFO:Importing untrained model
2024-04-14 16:50:25,100:INFO:Declaring custom model
2024-04-14 16:50:25,101:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:50:25,102:INFO:Cross validation set to False
2024-04-14 16:50:25,102:INFO:Fitting Model
2024-04-14 16:50:25,197:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8130,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:50:25,197:INFO:create_model() successfully completed......................................
2024-04-14 16:50:25,344:INFO:_master_model_container: 4
2024-04-14 16:50:25,344:INFO:_display_container: 6
2024-04-14 16:50:25,352:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8130,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:50:25,352:INFO:finalize_model() successfully completed......................................
2024-04-14 16:50:25,515:INFO:Initializing save_model()
2024-04-14 16:50:25,515:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8130,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:50:25,516:INFO:Adding model into prep_pipe
2024-04-14 16:50:25,516:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:50:25,522:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 16:50:25,531:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8130,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:50:25,531:INFO:save_model() successfully completed......................................
2024-04-14 16:50:25,680:INFO:Initializing load_model()
2024-04-14 16:50:25,680:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 16:50:30,430:INFO:Initializing predict_model()
2024-04-14 16:50:30,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8130, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3BC42E60>)
2024-04-14 16:50:30,431:INFO:Checking exceptions
2024-04-14 16:50:30,431:INFO:Preloading libraries
2024-04-14 16:50:30,708:INFO:Initializing predict_model()
2024-04-14 16:50:30,709:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DD2D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8130, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D96560>)
2024-04-14 16:50:30,709:INFO:Checking exceptions
2024-04-14 16:50:30,709:INFO:Preloading libraries
2024-04-14 16:54:08,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:54:08,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:54:08,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:54:08,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:59:30,954:INFO:PyCaret ClassificationExperiment
2024-04-14 16:59:30,954:INFO:Logging name: clf-default-name
2024-04-14 16:59:30,954:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:59:30,954:INFO:version 3.3.0
2024-04-14 16:59:30,954:INFO:Initializing setup()
2024-04-14 16:59:30,954:INFO:self.USI: e152
2024-04-14 16:59:30,954:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 16:59:30,954:INFO:Checking environment
2024-04-14 16:59:30,954:INFO:python_version: 3.10.14
2024-04-14 16:59:30,954:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 16:59:30,954:INFO:machine: AMD64
2024-04-14 16:59:30,954:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 16:59:30,959:INFO:Memory: svmem(total=17131573248, available=5217157120, percent=69.5, used=11914416128, free=5217157120)
2024-04-14 16:59:30,959:INFO:Physical Core: 8
2024-04-14 16:59:30,960:INFO:Logical Core: 16
2024-04-14 16:59:30,960:INFO:Checking libraries
2024-04-14 16:59:30,960:INFO:System:
2024-04-14 16:59:30,960:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:59:30,960:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 16:59:30,960:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 16:59:30,960:INFO:PyCaret required dependencies:
2024-04-14 16:59:30,960:INFO:                 pip: 23.3.1
2024-04-14 16:59:30,960:INFO:          setuptools: 68.2.2
2024-04-14 16:59:30,960:INFO:             pycaret: 3.3.0
2024-04-14 16:59:30,960:INFO:             IPython: 8.23.0
2024-04-14 16:59:30,960:INFO:          ipywidgets: 8.1.2
2024-04-14 16:59:30,961:INFO:                tqdm: 4.66.2
2024-04-14 16:59:30,961:INFO:               numpy: 1.26.4
2024-04-14 16:59:30,961:INFO:              pandas: 2.1.4
2024-04-14 16:59:30,961:INFO:              jinja2: 3.1.3
2024-04-14 16:59:30,961:INFO:               scipy: 1.11.4
2024-04-14 16:59:30,961:INFO:              joblib: 1.3.2
2024-04-14 16:59:30,961:INFO:             sklearn: 1.4.1.post1
2024-04-14 16:59:30,961:INFO:                pyod: 1.1.3
2024-04-14 16:59:30,961:INFO:            imblearn: 0.12.2
2024-04-14 16:59:30,961:INFO:   category_encoders: 2.6.3
2024-04-14 16:59:30,961:INFO:            lightgbm: 4.3.0
2024-04-14 16:59:30,961:INFO:               numba: 0.59.1
2024-04-14 16:59:30,961:INFO:            requests: 2.31.0
2024-04-14 16:59:30,961:INFO:          matplotlib: 3.7.5
2024-04-14 16:59:30,961:INFO:          scikitplot: 0.3.7
2024-04-14 16:59:30,962:INFO:         yellowbrick: 1.5
2024-04-14 16:59:30,962:INFO:              plotly: 5.20.0
2024-04-14 16:59:30,962:INFO:    plotly-resampler: Not installed
2024-04-14 16:59:30,962:INFO:             kaleido: 0.2.1
2024-04-14 16:59:30,962:INFO:           schemdraw: 0.15
2024-04-14 16:59:30,962:INFO:         statsmodels: 0.14.1
2024-04-14 16:59:30,962:INFO:              sktime: 0.28.0
2024-04-14 16:59:30,962:INFO:               tbats: 1.1.3
2024-04-14 16:59:30,962:INFO:            pmdarima: 2.0.4
2024-04-14 16:59:30,962:INFO:              psutil: 5.9.8
2024-04-14 16:59:30,962:INFO:          markupsafe: 2.1.5
2024-04-14 16:59:30,962:INFO:             pickle5: Not installed
2024-04-14 16:59:30,962:INFO:         cloudpickle: 3.0.0
2024-04-14 16:59:30,962:INFO:         deprecation: 2.1.0
2024-04-14 16:59:30,962:INFO:              xxhash: 3.4.1
2024-04-14 16:59:30,962:INFO:           wurlitzer: 3.0.3
2024-04-14 16:59:30,963:INFO:PyCaret optional dependencies:
2024-04-14 16:59:30,963:INFO:                shap: Not installed
2024-04-14 16:59:30,963:INFO:           interpret: Not installed
2024-04-14 16:59:30,963:INFO:                umap: Not installed
2024-04-14 16:59:30,963:INFO:     ydata_profiling: Not installed
2024-04-14 16:59:30,963:INFO:  explainerdashboard: Not installed
2024-04-14 16:59:30,963:INFO:             autoviz: Not installed
2024-04-14 16:59:30,963:INFO:           fairlearn: Not installed
2024-04-14 16:59:30,963:INFO:          deepchecks: Not installed
2024-04-14 16:59:30,963:INFO:             xgboost: Not installed
2024-04-14 16:59:30,963:INFO:            catboost: Not installed
2024-04-14 16:59:30,963:INFO:              kmodes: Not installed
2024-04-14 16:59:30,963:INFO:             mlxtend: Not installed
2024-04-14 16:59:30,963:INFO:       statsforecast: Not installed
2024-04-14 16:59:30,964:INFO:        tune_sklearn: Not installed
2024-04-14 16:59:30,964:INFO:                 ray: Not installed
2024-04-14 16:59:30,964:INFO:            hyperopt: Not installed
2024-04-14 16:59:30,964:INFO:              optuna: Not installed
2024-04-14 16:59:30,964:INFO:               skopt: Not installed
2024-04-14 16:59:30,964:INFO:              mlflow: 2.11.3
2024-04-14 16:59:30,964:INFO:              gradio: Not installed
2024-04-14 16:59:30,964:INFO:             fastapi: Not installed
2024-04-14 16:59:30,964:INFO:             uvicorn: Not installed
2024-04-14 16:59:30,964:INFO:              m2cgen: Not installed
2024-04-14 16:59:30,964:INFO:           evidently: Not installed
2024-04-14 16:59:30,964:INFO:               fugue: Not installed
2024-04-14 16:59:30,964:INFO:           streamlit: 1.33.0
2024-04-14 16:59:30,964:INFO:             prophet: Not installed
2024-04-14 16:59:30,964:INFO:None
2024-04-14 16:59:30,965:INFO:Set up data.
2024-04-14 16:59:30,971:INFO:Set up folding strategy.
2024-04-14 16:59:30,971:INFO:Set up train/test split.
2024-04-14 16:59:30,971:INFO:Set up data.
2024-04-14 16:59:30,976:INFO:Set up index.
2024-04-14 16:59:30,976:INFO:Assigning column types.
2024-04-14 16:59:30,982:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:59:31,052:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:59:31,053:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:59:31,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:59:31,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:59:31,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,213:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:59:31,284:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:59:31,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:59:31,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,445:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:59:31,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:31,682:INFO:Preparing preprocessing pipeline...
2024-04-14 16:59:31,684:INFO:Set up simple imputation.
2024-04-14 16:59:31,684:INFO:Set up feature normalization.
2024-04-14 16:59:31,734:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:59:31,743:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 16:59:31,744:INFO:Creating final display dataframe.
2024-04-14 16:59:31,882:INFO:Setup _display_container:                     Description             Value
0                    Session id              2494
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e152
2024-04-14 16:59:32,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:32,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:32,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:32,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:59:32,136:INFO:setup() successfully completed in 1.19s...............
2024-04-14 16:59:32,136:INFO:Initializing compare_models()
2024-04-14 16:59:32,137:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 16:59:32,137:INFO:Checking exceptions
2024-04-14 16:59:32,142:INFO:Preparing display monitor
2024-04-14 16:59:32,169:INFO:Initializing Logistic Regression
2024-04-14 16:59:32,170:INFO:Total runtime is 1.6701221466064452e-05 minutes
2024-04-14 16:59:32,174:INFO:SubProcess create_model() called ==================================
2024-04-14 16:59:32,174:INFO:Initializing create_model()
2024-04-14 16:59:32,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B368E82E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:59:32,174:INFO:Checking exceptions
2024-04-14 16:59:32,175:INFO:Importing libraries
2024-04-14 16:59:32,175:INFO:Copying training dataset
2024-04-14 16:59:32,185:INFO:Defining folds
2024-04-14 16:59:32,185:INFO:Declaring metric variables
2024-04-14 16:59:32,190:INFO:Importing untrained model
2024-04-14 16:59:32,195:INFO:Logistic Regression Imported successfully
2024-04-14 16:59:32,204:INFO:Starting cross validation
2024-04-14 16:59:32,206:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:59:32,676:INFO:Calculating mean and std
2024-04-14 16:59:32,677:INFO:Creating metrics dataframe
2024-04-14 16:59:32,682:INFO:Uploading results into container
2024-04-14 16:59:32,683:INFO:Uploading model into container now
2024-04-14 16:59:32,683:INFO:_master_model_container: 1
2024-04-14 16:59:32,684:INFO:_display_container: 2
2024-04-14 16:59:32,685:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2494, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:59:32,685:INFO:create_model() successfully completed......................................
2024-04-14 16:59:32,996:INFO:SubProcess create_model() end ==================================
2024-04-14 16:59:32,997:INFO:Creating metrics dataframe
2024-04-14 16:59:33,005:INFO:Initializing Decision Tree Classifier
2024-04-14 16:59:33,005:INFO:Total runtime is 0.013929307460784912 minutes
2024-04-14 16:59:33,010:INFO:SubProcess create_model() called ==================================
2024-04-14 16:59:33,010:INFO:Initializing create_model()
2024-04-14 16:59:33,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B368E82E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:59:33,010:INFO:Checking exceptions
2024-04-14 16:59:33,010:INFO:Importing libraries
2024-04-14 16:59:33,011:INFO:Copying training dataset
2024-04-14 16:59:33,018:INFO:Defining folds
2024-04-14 16:59:33,019:INFO:Declaring metric variables
2024-04-14 16:59:33,023:INFO:Importing untrained model
2024-04-14 16:59:33,027:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:59:33,035:INFO:Starting cross validation
2024-04-14 16:59:33,036:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:59:36,652:INFO:Calculating mean and std
2024-04-14 16:59:36,655:INFO:Creating metrics dataframe
2024-04-14 16:59:36,658:INFO:Uploading results into container
2024-04-14 16:59:36,659:INFO:Uploading model into container now
2024-04-14 16:59:36,660:INFO:_master_model_container: 2
2024-04-14 16:59:36,660:INFO:_display_container: 2
2024-04-14 16:59:36,661:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best')
2024-04-14 16:59:36,662:INFO:create_model() successfully completed......................................
2024-04-14 16:59:36,845:INFO:SubProcess create_model() end ==================================
2024-04-14 16:59:36,845:INFO:Creating metrics dataframe
2024-04-14 16:59:36,865:INFO:Initializing create_model()
2024-04-14 16:59:36,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:59:36,866:INFO:Checking exceptions
2024-04-14 16:59:36,868:INFO:Importing libraries
2024-04-14 16:59:36,868:INFO:Copying training dataset
2024-04-14 16:59:36,877:INFO:Defining folds
2024-04-14 16:59:36,877:INFO:Declaring metric variables
2024-04-14 16:59:36,878:INFO:Importing untrained model
2024-04-14 16:59:36,878:INFO:Declaring custom model
2024-04-14 16:59:36,879:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:59:36,880:INFO:Cross validation set to False
2024-04-14 16:59:36,880:INFO:Fitting Model
2024-04-14 16:59:36,953:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best')
2024-04-14 16:59:36,953:INFO:create_model() successfully completed......................................
2024-04-14 16:59:37,108:INFO:Initializing create_model()
2024-04-14 16:59:37,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2494, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:59:37,109:INFO:Checking exceptions
2024-04-14 16:59:37,111:INFO:Importing libraries
2024-04-14 16:59:37,111:INFO:Copying training dataset
2024-04-14 16:59:37,119:INFO:Defining folds
2024-04-14 16:59:37,119:INFO:Declaring metric variables
2024-04-14 16:59:37,120:INFO:Importing untrained model
2024-04-14 16:59:37,120:INFO:Declaring custom model
2024-04-14 16:59:37,120:INFO:Logistic Regression Imported successfully
2024-04-14 16:59:37,121:INFO:Cross validation set to False
2024-04-14 16:59:37,122:INFO:Fitting Model
2024-04-14 16:59:37,145:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2494, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:59:37,145:INFO:create_model() successfully completed......................................
2024-04-14 16:59:37,313:INFO:_master_model_container: 2
2024-04-14 16:59:37,313:INFO:_display_container: 2
2024-04-14 16:59:37,314:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2494, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 16:59:37,314:INFO:compare_models() successfully completed......................................
2024-04-14 16:59:37,315:INFO:Initializing predict_model()
2024-04-14 16:59:37,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2494, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3BBC0DC0>)
2024-04-14 16:59:37,315:INFO:Checking exceptions
2024-04-14 16:59:37,315:INFO:Preloading libraries
2024-04-14 16:59:40,072:INFO:Initializing predict_model()
2024-04-14 16:59:40,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C0271C0>)
2024-04-14 16:59:40,072:INFO:Checking exceptions
2024-04-14 16:59:40,072:INFO:Preloading libraries
2024-04-14 16:59:41,039:INFO:Initializing tune_model()
2024-04-14 16:59:41,039:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>)
2024-04-14 16:59:41,039:INFO:Checking exceptions
2024-04-14 16:59:41,059:INFO:Copying training dataset
2024-04-14 16:59:41,066:INFO:Checking base model
2024-04-14 16:59:41,066:INFO:Base model : Decision Tree Classifier
2024-04-14 16:59:41,071:INFO:Declaring metric variables
2024-04-14 16:59:41,075:INFO:Defining Hyperparameters
2024-04-14 16:59:41,256:INFO:Tuning with n_jobs=-1
2024-04-14 16:59:41,256:INFO:Initializing RandomizedSearchCV
2024-04-14 16:59:43,013:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'gini'}
2024-04-14 16:59:43,014:INFO:Hyperparameter search completed
2024-04-14 16:59:43,014:INFO:SubProcess create_model() called ==================================
2024-04-14 16:59:43,015:INFO:Initializing create_model()
2024-04-14 16:59:43,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B369F8B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 5, 'criterion': 'gini'})
2024-04-14 16:59:43,015:INFO:Checking exceptions
2024-04-14 16:59:43,015:INFO:Importing libraries
2024-04-14 16:59:43,016:INFO:Copying training dataset
2024-04-14 16:59:43,024:INFO:Defining folds
2024-04-14 16:59:43,024:INFO:Declaring metric variables
2024-04-14 16:59:43,028:INFO:Importing untrained model
2024-04-14 16:59:43,028:INFO:Declaring custom model
2024-04-14 16:59:43,033:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:59:43,041:INFO:Starting cross validation
2024-04-14 16:59:43,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:59:43,123:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,125:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,131:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,132:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,132:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,134:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,142:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,144:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,145:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,146:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 16:59:43,168:INFO:Calculating mean and std
2024-04-14 16:59:43,170:INFO:Creating metrics dataframe
2024-04-14 16:59:43,176:INFO:Finalizing model
2024-04-14 16:59:43,199:INFO:Uploading results into container
2024-04-14 16:59:43,200:INFO:Uploading model into container now
2024-04-14 16:59:43,201:INFO:_master_model_container: 3
2024-04-14 16:59:43,201:INFO:_display_container: 5
2024-04-14 16:59:43,201:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=5, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best')
2024-04-14 16:59:43,202:INFO:create_model() successfully completed......................................
2024-04-14 16:59:43,350:INFO:SubProcess create_model() end ==================================
2024-04-14 16:59:43,350:INFO:choose_better activated
2024-04-14 16:59:43,354:INFO:SubProcess create_model() called ==================================
2024-04-14 16:59:43,355:INFO:Initializing create_model()
2024-04-14 16:59:43,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:59:43,355:INFO:Checking exceptions
2024-04-14 16:59:43,357:INFO:Importing libraries
2024-04-14 16:59:43,357:INFO:Copying training dataset
2024-04-14 16:59:43,365:INFO:Defining folds
2024-04-14 16:59:43,365:INFO:Declaring metric variables
2024-04-14 16:59:43,365:INFO:Importing untrained model
2024-04-14 16:59:43,365:INFO:Declaring custom model
2024-04-14 16:59:43,366:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:59:43,366:INFO:Starting cross validation
2024-04-14 16:59:43,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:59:43,551:INFO:Calculating mean and std
2024-04-14 16:59:43,552:INFO:Creating metrics dataframe
2024-04-14 16:59:43,554:INFO:Finalizing model
2024-04-14 16:59:43,626:INFO:Uploading results into container
2024-04-14 16:59:43,626:INFO:Uploading model into container now
2024-04-14 16:59:43,627:INFO:_master_model_container: 4
2024-04-14 16:59:43,627:INFO:_display_container: 6
2024-04-14 16:59:43,627:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best')
2024-04-14 16:59:43,627:INFO:create_model() successfully completed......................................
2024-04-14 16:59:43,773:INFO:SubProcess create_model() end ==================================
2024-04-14 16:59:43,774:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best') result for F1 is 0.5383
2024-04-14 16:59:43,775:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=5, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best') result for F1 is 0.0
2024-04-14 16:59:43,775:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best') is best model
2024-04-14 16:59:43,775:INFO:choose_better completed
2024-04-14 16:59:43,776:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 16:59:43,788:INFO:_master_model_container: 4
2024-04-14 16:59:43,788:INFO:_display_container: 5
2024-04-14 16:59:43,789:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best')
2024-04-14 16:59:43,789:INFO:tune_model() successfully completed......................................
2024-04-14 16:59:43,939:INFO:Initializing predict_model()
2024-04-14 16:59:43,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3BBC0DC0>)
2024-04-14 16:59:43,939:INFO:Checking exceptions
2024-04-14 16:59:43,939:INFO:Preloading libraries
2024-04-14 16:59:44,231:INFO:Initializing finalize_model()
2024-04-14 16:59:44,231:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 16:59:44,232:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best')
2024-04-14 16:59:44,236:INFO:Initializing create_model()
2024-04-14 16:59:44,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:59:44,237:INFO:Checking exceptions
2024-04-14 16:59:44,238:INFO:Importing libraries
2024-04-14 16:59:44,238:INFO:Copying training dataset
2024-04-14 16:59:44,239:INFO:Defining folds
2024-04-14 16:59:44,239:INFO:Declaring metric variables
2024-04-14 16:59:44,239:INFO:Importing untrained model
2024-04-14 16:59:44,239:INFO:Declaring custom model
2024-04-14 16:59:44,240:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:59:44,241:INFO:Cross validation set to False
2024-04-14 16:59:44,241:INFO:Fitting Model
2024-04-14 16:59:44,339:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2494,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:59:44,339:INFO:create_model() successfully completed......................................
2024-04-14 16:59:44,528:INFO:_master_model_container: 4
2024-04-14 16:59:44,528:INFO:_display_container: 6
2024-04-14 16:59:44,537:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2494,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:59:44,537:INFO:finalize_model() successfully completed......................................
2024-04-14 16:59:44,704:INFO:Initializing save_model()
2024-04-14 16:59:44,704:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2494,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:59:44,704:INFO:Adding model into prep_pipe
2024-04-14 16:59:44,704:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:59:44,711:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 16:59:44,719:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2494,
                                        splitter='best'))],
         verbose=False)
2024-04-14 16:59:44,719:INFO:save_model() successfully completed......................................
2024-04-14 16:59:44,872:INFO:Initializing load_model()
2024-04-14 16:59:44,872:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 16:59:49,682:INFO:Initializing predict_model()
2024-04-14 16:59:49,682:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2494, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C024E50>)
2024-04-14 16:59:49,682:INFO:Checking exceptions
2024-04-14 16:59:49,682:INFO:Preloading libraries
2024-04-14 16:59:49,965:INFO:Initializing predict_model()
2024-04-14 16:59:49,965:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B39D53EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2494, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D94430>)
2024-04-14 16:59:49,965:INFO:Checking exceptions
2024-04-14 16:59:49,965:INFO:Preloading libraries
2024-04-14 17:00:42,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:00:42,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:00:42,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:00:42,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:01:07,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:01:07,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:01:07,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:01:07,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:03:53,099:INFO:PyCaret ClassificationExperiment
2024-04-14 17:03:53,099:INFO:Logging name: clf-default-name
2024-04-14 17:03:53,099:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 17:03:53,099:INFO:version 3.3.0
2024-04-14 17:03:53,099:INFO:Initializing setup()
2024-04-14 17:03:53,099:INFO:self.USI: 3547
2024-04-14 17:03:53,100:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 17:03:53,100:INFO:Checking environment
2024-04-14 17:03:53,100:INFO:python_version: 3.10.14
2024-04-14 17:03:53,100:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 17:03:53,100:INFO:machine: AMD64
2024-04-14 17:03:53,100:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 17:03:53,105:INFO:Memory: svmem(total=17131573248, available=3376947200, percent=80.3, used=13754626048, free=3376947200)
2024-04-14 17:03:53,105:INFO:Physical Core: 8
2024-04-14 17:03:53,105:INFO:Logical Core: 16
2024-04-14 17:03:53,105:INFO:Checking libraries
2024-04-14 17:03:53,105:INFO:System:
2024-04-14 17:03:53,105:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 17:03:53,106:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 17:03:53,106:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 17:03:53,106:INFO:PyCaret required dependencies:
2024-04-14 17:03:53,106:INFO:                 pip: 23.3.1
2024-04-14 17:03:53,106:INFO:          setuptools: 68.2.2
2024-04-14 17:03:53,106:INFO:             pycaret: 3.3.0
2024-04-14 17:03:53,106:INFO:             IPython: 8.23.0
2024-04-14 17:03:53,106:INFO:          ipywidgets: 8.1.2
2024-04-14 17:03:53,106:INFO:                tqdm: 4.66.2
2024-04-14 17:03:53,106:INFO:               numpy: 1.26.4
2024-04-14 17:03:53,106:INFO:              pandas: 2.1.4
2024-04-14 17:03:53,106:INFO:              jinja2: 3.1.3
2024-04-14 17:03:53,106:INFO:               scipy: 1.11.4
2024-04-14 17:03:53,106:INFO:              joblib: 1.3.2
2024-04-14 17:03:53,107:INFO:             sklearn: 1.4.1.post1
2024-04-14 17:03:53,107:INFO:                pyod: 1.1.3
2024-04-14 17:03:53,107:INFO:            imblearn: 0.12.2
2024-04-14 17:03:53,107:INFO:   category_encoders: 2.6.3
2024-04-14 17:03:53,107:INFO:            lightgbm: 4.3.0
2024-04-14 17:03:53,107:INFO:               numba: 0.59.1
2024-04-14 17:03:53,107:INFO:            requests: 2.31.0
2024-04-14 17:03:53,107:INFO:          matplotlib: 3.7.5
2024-04-14 17:03:53,107:INFO:          scikitplot: 0.3.7
2024-04-14 17:03:53,107:INFO:         yellowbrick: 1.5
2024-04-14 17:03:53,107:INFO:              plotly: 5.20.0
2024-04-14 17:03:53,107:INFO:    plotly-resampler: Not installed
2024-04-14 17:03:53,107:INFO:             kaleido: 0.2.1
2024-04-14 17:03:53,107:INFO:           schemdraw: 0.15
2024-04-14 17:03:53,107:INFO:         statsmodels: 0.14.1
2024-04-14 17:03:53,108:INFO:              sktime: 0.28.0
2024-04-14 17:03:53,108:INFO:               tbats: 1.1.3
2024-04-14 17:03:53,108:INFO:            pmdarima: 2.0.4
2024-04-14 17:03:53,108:INFO:              psutil: 5.9.8
2024-04-14 17:03:53,108:INFO:          markupsafe: 2.1.5
2024-04-14 17:03:53,108:INFO:             pickle5: Not installed
2024-04-14 17:03:53,108:INFO:         cloudpickle: 3.0.0
2024-04-14 17:03:53,108:INFO:         deprecation: 2.1.0
2024-04-14 17:03:53,108:INFO:              xxhash: 3.4.1
2024-04-14 17:03:53,108:INFO:           wurlitzer: 3.0.3
2024-04-14 17:03:53,108:INFO:PyCaret optional dependencies:
2024-04-14 17:03:53,108:INFO:                shap: Not installed
2024-04-14 17:03:53,108:INFO:           interpret: Not installed
2024-04-14 17:03:53,108:INFO:                umap: Not installed
2024-04-14 17:03:53,108:INFO:     ydata_profiling: Not installed
2024-04-14 17:03:53,109:INFO:  explainerdashboard: Not installed
2024-04-14 17:03:53,109:INFO:             autoviz: Not installed
2024-04-14 17:03:53,109:INFO:           fairlearn: Not installed
2024-04-14 17:03:53,109:INFO:          deepchecks: Not installed
2024-04-14 17:03:53,109:INFO:             xgboost: Not installed
2024-04-14 17:03:53,109:INFO:            catboost: Not installed
2024-04-14 17:03:53,109:INFO:              kmodes: Not installed
2024-04-14 17:03:53,109:INFO:             mlxtend: Not installed
2024-04-14 17:03:53,109:INFO:       statsforecast: Not installed
2024-04-14 17:03:53,109:INFO:        tune_sklearn: Not installed
2024-04-14 17:03:53,109:INFO:                 ray: Not installed
2024-04-14 17:03:53,109:INFO:            hyperopt: Not installed
2024-04-14 17:03:53,109:INFO:              optuna: Not installed
2024-04-14 17:03:53,109:INFO:               skopt: Not installed
2024-04-14 17:03:53,109:INFO:              mlflow: 2.11.3
2024-04-14 17:03:53,110:INFO:              gradio: Not installed
2024-04-14 17:03:53,110:INFO:             fastapi: Not installed
2024-04-14 17:03:53,110:INFO:             uvicorn: Not installed
2024-04-14 17:03:53,110:INFO:              m2cgen: Not installed
2024-04-14 17:03:53,110:INFO:           evidently: Not installed
2024-04-14 17:03:53,110:INFO:               fugue: Not installed
2024-04-14 17:03:53,110:INFO:           streamlit: 1.33.0
2024-04-14 17:03:53,110:INFO:             prophet: Not installed
2024-04-14 17:03:53,110:INFO:None
2024-04-14 17:03:53,110:INFO:Set up data.
2024-04-14 17:03:53,117:INFO:Set up folding strategy.
2024-04-14 17:03:53,117:INFO:Set up train/test split.
2024-04-14 17:03:53,117:INFO:Set up data.
2024-04-14 17:03:53,123:INFO:Set up index.
2024-04-14 17:03:53,123:INFO:Assigning column types.
2024-04-14 17:03:53,130:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 17:03:53,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 17:03:53,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 17:03:53,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 17:03:53,318:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 17:03:53,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,363:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 17:03:53,434:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 17:03:53,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,551:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 17:03:53,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,595:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 17:03:53,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:53,827:INFO:Preparing preprocessing pipeline...
2024-04-14 17:03:53,829:INFO:Set up simple imputation.
2024-04-14 17:03:53,829:INFO:Set up feature normalization.
2024-04-14 17:03:53,868:INFO:Finished creating preprocessing pipeline.
2024-04-14 17:03:53,875:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 17:03:53,875:INFO:Creating final display dataframe.
2024-04-14 17:03:54,008:INFO:Setup _display_container:                     Description             Value
0                    Session id              4679
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3547
2024-04-14 17:03:54,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:54,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:54,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:54,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 17:03:54,247:INFO:setup() successfully completed in 1.15s...............
2024-04-14 17:03:54,247:INFO:Initializing compare_models()
2024-04-14 17:03:54,247:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 17:03:54,247:INFO:Checking exceptions
2024-04-14 17:03:54,253:INFO:Preparing display monitor
2024-04-14 17:03:54,278:INFO:Initializing Logistic Regression
2024-04-14 17:03:54,278:INFO:Total runtime is 0.0 minutes
2024-04-14 17:03:54,282:INFO:SubProcess create_model() called ==================================
2024-04-14 17:03:54,283:INFO:Initializing create_model()
2024-04-14 17:03:54,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B34A8EC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 17:03:54,283:INFO:Checking exceptions
2024-04-14 17:03:54,283:INFO:Importing libraries
2024-04-14 17:03:54,283:INFO:Copying training dataset
2024-04-14 17:03:54,294:INFO:Defining folds
2024-04-14 17:03:54,294:INFO:Declaring metric variables
2024-04-14 17:03:54,299:INFO:Importing untrained model
2024-04-14 17:03:54,304:INFO:Logistic Regression Imported successfully
2024-04-14 17:03:54,312:INFO:Starting cross validation
2024-04-14 17:03:54,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 17:03:54,440:INFO:Calculating mean and std
2024-04-14 17:03:54,441:INFO:Creating metrics dataframe
2024-04-14 17:03:54,443:INFO:Uploading results into container
2024-04-14 17:03:54,443:INFO:Uploading model into container now
2024-04-14 17:03:54,444:INFO:_master_model_container: 1
2024-04-14 17:03:54,444:INFO:_display_container: 2
2024-04-14 17:03:54,444:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 17:03:54,444:INFO:create_model() successfully completed......................................
2024-04-14 17:03:54,604:INFO:SubProcess create_model() end ==================================
2024-04-14 17:03:54,604:INFO:Creating metrics dataframe
2024-04-14 17:03:54,612:INFO:Initializing Decision Tree Classifier
2024-04-14 17:03:54,612:INFO:Total runtime is 0.00555504560470581 minutes
2024-04-14 17:03:54,617:INFO:SubProcess create_model() called ==================================
2024-04-14 17:03:54,617:INFO:Initializing create_model()
2024-04-14 17:03:54,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B34A8EC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 17:03:54,617:INFO:Checking exceptions
2024-04-14 17:03:54,617:INFO:Importing libraries
2024-04-14 17:03:54,617:INFO:Copying training dataset
2024-04-14 17:03:54,625:INFO:Defining folds
2024-04-14 17:03:54,626:INFO:Declaring metric variables
2024-04-14 17:03:54,630:INFO:Importing untrained model
2024-04-14 17:03:54,634:INFO:Decision Tree Classifier Imported successfully
2024-04-14 17:03:54,642:INFO:Starting cross validation
2024-04-14 17:03:54,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 17:03:54,821:INFO:Calculating mean and std
2024-04-14 17:03:54,822:INFO:Creating metrics dataframe
2024-04-14 17:03:54,824:INFO:Uploading results into container
2024-04-14 17:03:54,824:INFO:Uploading model into container now
2024-04-14 17:03:54,825:INFO:_master_model_container: 2
2024-04-14 17:03:54,825:INFO:_display_container: 2
2024-04-14 17:03:54,825:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best')
2024-04-14 17:03:54,825:INFO:create_model() successfully completed......................................
2024-04-14 17:03:54,974:INFO:SubProcess create_model() end ==================================
2024-04-14 17:03:54,974:INFO:Creating metrics dataframe
2024-04-14 17:03:54,992:INFO:Initializing create_model()
2024-04-14 17:03:54,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 17:03:54,993:INFO:Checking exceptions
2024-04-14 17:03:54,995:INFO:Importing libraries
2024-04-14 17:03:54,996:INFO:Copying training dataset
2024-04-14 17:03:55,003:INFO:Defining folds
2024-04-14 17:03:55,004:INFO:Declaring metric variables
2024-04-14 17:03:55,004:INFO:Importing untrained model
2024-04-14 17:03:55,004:INFO:Declaring custom model
2024-04-14 17:03:55,005:INFO:Decision Tree Classifier Imported successfully
2024-04-14 17:03:55,006:INFO:Cross validation set to False
2024-04-14 17:03:55,006:INFO:Fitting Model
2024-04-14 17:03:55,079:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best')
2024-04-14 17:03:55,079:INFO:create_model() successfully completed......................................
2024-04-14 17:03:55,234:INFO:Initializing create_model()
2024-04-14 17:03:55,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 17:03:55,234:INFO:Checking exceptions
2024-04-14 17:03:55,236:INFO:Importing libraries
2024-04-14 17:03:55,236:INFO:Copying training dataset
2024-04-14 17:03:55,244:INFO:Defining folds
2024-04-14 17:03:55,244:INFO:Declaring metric variables
2024-04-14 17:03:55,244:INFO:Importing untrained model
2024-04-14 17:03:55,244:INFO:Declaring custom model
2024-04-14 17:03:55,245:INFO:Logistic Regression Imported successfully
2024-04-14 17:03:55,246:INFO:Cross validation set to False
2024-04-14 17:03:55,246:INFO:Fitting Model
2024-04-14 17:03:55,269:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 17:03:55,269:INFO:create_model() successfully completed......................................
2024-04-14 17:03:55,434:INFO:_master_model_container: 2
2024-04-14 17:03:55,434:INFO:_display_container: 2
2024-04-14 17:03:55,435:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 17:03:55,436:INFO:compare_models() successfully completed......................................
2024-04-14 17:03:55,436:INFO:Initializing predict_model()
2024-04-14 17:03:55,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B38D42D40>)
2024-04-14 17:03:55,437:INFO:Checking exceptions
2024-04-14 17:03:55,437:INFO:Preloading libraries
2024-04-14 17:03:56,795:INFO:Initializing predict_model()
2024-04-14 17:03:56,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C025AB0>)
2024-04-14 17:03:56,795:INFO:Checking exceptions
2024-04-14 17:03:56,795:INFO:Preloading libraries
2024-04-14 17:03:57,708:INFO:Initializing tune_model()
2024-04-14 17:03:57,708:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>)
2024-04-14 17:03:57,708:INFO:Checking exceptions
2024-04-14 17:03:57,728:INFO:Copying training dataset
2024-04-14 17:03:57,735:INFO:Checking base model
2024-04-14 17:03:57,735:INFO:Base model : Decision Tree Classifier
2024-04-14 17:03:57,740:INFO:Declaring metric variables
2024-04-14 17:03:57,744:INFO:Defining Hyperparameters
2024-04-14 17:03:57,912:INFO:Tuning with n_jobs=-1
2024-04-14 17:03:57,912:INFO:Initializing RandomizedSearchCV
2024-04-14 17:03:58,168:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'gini'}
2024-04-14 17:03:58,168:INFO:Hyperparameter search completed
2024-04-14 17:03:58,168:INFO:SubProcess create_model() called ==================================
2024-04-14 17:03:58,169:INFO:Initializing create_model()
2024-04-14 17:03:58,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3542C790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.005, 'max_features': 'sqrt', 'max_depth': 16, 'criterion': 'gini'})
2024-04-14 17:03:58,169:INFO:Checking exceptions
2024-04-14 17:03:58,169:INFO:Importing libraries
2024-04-14 17:03:58,169:INFO:Copying training dataset
2024-04-14 17:03:58,177:INFO:Defining folds
2024-04-14 17:03:58,177:INFO:Declaring metric variables
2024-04-14 17:03:58,181:INFO:Importing untrained model
2024-04-14 17:03:58,182:INFO:Declaring custom model
2024-04-14 17:03:58,187:INFO:Decision Tree Classifier Imported successfully
2024-04-14 17:03:58,194:INFO:Starting cross validation
2024-04-14 17:03:58,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 17:03:58,274:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,276:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,280:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,281:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,286:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,287:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,288:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,295:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,298:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,300:WARNING:c:\Users\julio\anaconda3\envs\mle-infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-14 17:03:58,311:INFO:Calculating mean and std
2024-04-14 17:03:58,312:INFO:Creating metrics dataframe
2024-04-14 17:03:58,318:INFO:Finalizing model
2024-04-14 17:03:58,339:INFO:Uploading results into container
2024-04-14 17:03:58,340:INFO:Uploading model into container now
2024-04-14 17:03:58,341:INFO:_master_model_container: 3
2024-04-14 17:03:58,341:INFO:_display_container: 5
2024-04-14 17:03:58,341:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best')
2024-04-14 17:03:58,342:INFO:create_model() successfully completed......................................
2024-04-14 17:03:58,490:INFO:SubProcess create_model() end ==================================
2024-04-14 17:03:58,491:INFO:choose_better activated
2024-04-14 17:03:58,495:INFO:SubProcess create_model() called ==================================
2024-04-14 17:03:58,496:INFO:Initializing create_model()
2024-04-14 17:03:58,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 17:03:58,496:INFO:Checking exceptions
2024-04-14 17:03:58,498:INFO:Importing libraries
2024-04-14 17:03:58,498:INFO:Copying training dataset
2024-04-14 17:03:58,506:INFO:Defining folds
2024-04-14 17:03:58,506:INFO:Declaring metric variables
2024-04-14 17:03:58,506:INFO:Importing untrained model
2024-04-14 17:03:58,506:INFO:Declaring custom model
2024-04-14 17:03:58,507:INFO:Decision Tree Classifier Imported successfully
2024-04-14 17:03:58,507:INFO:Starting cross validation
2024-04-14 17:03:58,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 17:03:58,692:INFO:Calculating mean and std
2024-04-14 17:03:58,693:INFO:Creating metrics dataframe
2024-04-14 17:03:58,695:INFO:Finalizing model
2024-04-14 17:03:58,767:INFO:Uploading results into container
2024-04-14 17:03:58,768:INFO:Uploading model into container now
2024-04-14 17:03:58,768:INFO:_master_model_container: 4
2024-04-14 17:03:58,768:INFO:_display_container: 6
2024-04-14 17:03:58,769:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best')
2024-04-14 17:03:58,769:INFO:create_model() successfully completed......................................
2024-04-14 17:03:58,925:INFO:SubProcess create_model() end ==================================
2024-04-14 17:03:58,925:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best') result for F1 is 0.5482
2024-04-14 17:03:58,926:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best') result for F1 is 0.0
2024-04-14 17:03:58,926:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best') is best model
2024-04-14 17:03:58,926:INFO:choose_better completed
2024-04-14 17:03:58,927:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 17:03:58,941:INFO:_master_model_container: 4
2024-04-14 17:03:58,941:INFO:_display_container: 5
2024-04-14 17:03:58,942:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best')
2024-04-14 17:03:58,942:INFO:tune_model() successfully completed......................................
2024-04-14 17:03:59,092:INFO:Initializing predict_model()
2024-04-14 17:03:59,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B368EC430>)
2024-04-14 17:03:59,092:INFO:Checking exceptions
2024-04-14 17:03:59,092:INFO:Preloading libraries
2024-04-14 17:03:59,386:INFO:Initializing finalize_model()
2024-04-14 17:03:59,386:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 17:03:59,387:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best')
2024-04-14 17:03:59,391:INFO:Initializing create_model()
2024-04-14 17:03:59,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 17:03:59,391:INFO:Checking exceptions
2024-04-14 17:03:59,393:INFO:Importing libraries
2024-04-14 17:03:59,393:INFO:Copying training dataset
2024-04-14 17:03:59,394:INFO:Defining folds
2024-04-14 17:03:59,394:INFO:Declaring metric variables
2024-04-14 17:03:59,394:INFO:Importing untrained model
2024-04-14 17:03:59,394:INFO:Declaring custom model
2024-04-14 17:03:59,395:INFO:Decision Tree Classifier Imported successfully
2024-04-14 17:03:59,396:INFO:Cross validation set to False
2024-04-14 17:03:59,396:INFO:Fitting Model
2024-04-14 17:03:59,492:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4679,
                                        splitter='best'))],
         verbose=False)
2024-04-14 17:03:59,492:INFO:create_model() successfully completed......................................
2024-04-14 17:03:59,642:INFO:_master_model_container: 4
2024-04-14 17:03:59,642:INFO:_display_container: 6
2024-04-14 17:03:59,650:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4679,
                                        splitter='best'))],
         verbose=False)
2024-04-14 17:03:59,650:INFO:finalize_model() successfully completed......................................
2024-04-14 17:03:59,835:INFO:Initializing save_model()
2024-04-14 17:03:59,835:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4679,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 17:03:59,835:INFO:Adding model into prep_pipe
2024-04-14 17:03:59,835:WARNING:Only Model saved as it was a pipeline.
2024-04-14 17:03:59,842:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 17:03:59,850:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4679,
                                        splitter='best'))],
         verbose=False)
2024-04-14 17:03:59,851:INFO:save_model() successfully completed......................................
2024-04-14 17:04:00,002:INFO:Initializing load_model()
2024-04-14 17:04:00,002:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 17:04:04,707:INFO:Initializing predict_model()
2024-04-14 17:04:04,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4679, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39E2BB50>)
2024-04-14 17:04:04,708:INFO:Checking exceptions
2024-04-14 17:04:04,708:INFO:Preloading libraries
2024-04-14 17:04:04,988:INFO:Initializing predict_model()
2024-04-14 17:04:04,988:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B369DCE80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4679, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C026710>)
2024-04-14 17:04:04,989:INFO:Checking exceptions
2024-04-14 17:04:04,989:INFO:Preloading libraries
2024-04-14 17:33:52,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:33:52,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:33:52,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:33:52,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:34:32,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:34:32,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:34:32,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:34:32,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:52:37,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:52:37,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:52:37,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:52:37,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:53:41,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:53:41,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:53:41,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 17:53:41,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 19:29:02,635:INFO:PyCaret ClassificationExperiment
2024-04-14 19:29:02,635:INFO:Logging name: clf-default-name
2024-04-14 19:29:02,635:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 19:29:02,635:INFO:version 3.3.0
2024-04-14 19:29:02,636:INFO:Initializing setup()
2024-04-14 19:29:02,636:INFO:self.USI: 3ec7
2024-04-14 19:29:02,636:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 19:29:02,636:INFO:Checking environment
2024-04-14 19:29:02,636:INFO:python_version: 3.10.14
2024-04-14 19:29:02,636:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 19:29:02,636:INFO:machine: AMD64
2024-04-14 19:29:02,636:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 19:29:02,641:INFO:Memory: svmem(total=17131573248, available=4320940032, percent=74.8, used=12810633216, free=4320940032)
2024-04-14 19:29:02,641:INFO:Physical Core: 8
2024-04-14 19:29:02,642:INFO:Logical Core: 16
2024-04-14 19:29:02,642:INFO:Checking libraries
2024-04-14 19:29:02,642:INFO:System:
2024-04-14 19:29:02,642:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 19:29:02,642:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 19:29:02,642:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 19:29:02,642:INFO:PyCaret required dependencies:
2024-04-14 19:29:02,643:INFO:                 pip: 23.3.1
2024-04-14 19:29:02,643:INFO:          setuptools: 68.2.2
2024-04-14 19:29:02,643:INFO:             pycaret: 3.3.0
2024-04-14 19:29:02,644:INFO:             IPython: 8.23.0
2024-04-14 19:29:02,644:INFO:          ipywidgets: 8.1.2
2024-04-14 19:29:02,644:INFO:                tqdm: 4.66.2
2024-04-14 19:29:02,644:INFO:               numpy: 1.26.4
2024-04-14 19:29:02,644:INFO:              pandas: 2.1.4
2024-04-14 19:29:02,644:INFO:              jinja2: 3.1.3
2024-04-14 19:29:02,644:INFO:               scipy: 1.11.4
2024-04-14 19:29:02,644:INFO:              joblib: 1.3.2
2024-04-14 19:29:02,644:INFO:             sklearn: 1.4.1.post1
2024-04-14 19:29:02,644:INFO:                pyod: 1.1.3
2024-04-14 19:29:02,644:INFO:            imblearn: 0.12.2
2024-04-14 19:29:02,644:INFO:   category_encoders: 2.6.3
2024-04-14 19:29:02,644:INFO:            lightgbm: 4.3.0
2024-04-14 19:29:02,644:INFO:               numba: 0.59.1
2024-04-14 19:29:02,644:INFO:            requests: 2.31.0
2024-04-14 19:29:02,645:INFO:          matplotlib: 3.7.5
2024-04-14 19:29:02,645:INFO:          scikitplot: 0.3.7
2024-04-14 19:29:02,645:INFO:         yellowbrick: 1.5
2024-04-14 19:29:02,645:INFO:              plotly: 5.20.0
2024-04-14 19:29:02,645:INFO:    plotly-resampler: Not installed
2024-04-14 19:29:02,645:INFO:             kaleido: 0.2.1
2024-04-14 19:29:02,645:INFO:           schemdraw: 0.15
2024-04-14 19:29:02,645:INFO:         statsmodels: 0.14.1
2024-04-14 19:29:02,645:INFO:              sktime: 0.28.0
2024-04-14 19:29:02,645:INFO:               tbats: 1.1.3
2024-04-14 19:29:02,645:INFO:            pmdarima: 2.0.4
2024-04-14 19:29:02,645:INFO:              psutil: 5.9.8
2024-04-14 19:29:02,645:INFO:          markupsafe: 2.1.5
2024-04-14 19:29:02,645:INFO:             pickle5: Not installed
2024-04-14 19:29:02,646:INFO:         cloudpickle: 3.0.0
2024-04-14 19:29:02,646:INFO:         deprecation: 2.1.0
2024-04-14 19:29:02,646:INFO:              xxhash: 3.4.1
2024-04-14 19:29:02,646:INFO:           wurlitzer: 3.0.3
2024-04-14 19:29:02,646:INFO:PyCaret optional dependencies:
2024-04-14 19:29:02,646:INFO:                shap: Not installed
2024-04-14 19:29:02,646:INFO:           interpret: Not installed
2024-04-14 19:29:02,646:INFO:                umap: Not installed
2024-04-14 19:29:02,646:INFO:     ydata_profiling: Not installed
2024-04-14 19:29:02,646:INFO:  explainerdashboard: Not installed
2024-04-14 19:29:02,646:INFO:             autoviz: Not installed
2024-04-14 19:29:02,646:INFO:           fairlearn: Not installed
2024-04-14 19:29:02,647:INFO:          deepchecks: Not installed
2024-04-14 19:29:02,647:INFO:             xgboost: Not installed
2024-04-14 19:29:02,647:INFO:            catboost: Not installed
2024-04-14 19:29:02,647:INFO:              kmodes: Not installed
2024-04-14 19:29:02,647:INFO:             mlxtend: Not installed
2024-04-14 19:29:02,647:INFO:       statsforecast: Not installed
2024-04-14 19:29:02,647:INFO:        tune_sklearn: Not installed
2024-04-14 19:29:02,647:INFO:                 ray: Not installed
2024-04-14 19:29:02,647:INFO:            hyperopt: Not installed
2024-04-14 19:29:02,647:INFO:              optuna: Not installed
2024-04-14 19:29:02,647:INFO:               skopt: Not installed
2024-04-14 19:29:02,647:INFO:              mlflow: 2.11.3
2024-04-14 19:29:02,647:INFO:              gradio: Not installed
2024-04-14 19:29:02,647:INFO:             fastapi: Not installed
2024-04-14 19:29:02,647:INFO:             uvicorn: Not installed
2024-04-14 19:29:02,647:INFO:              m2cgen: Not installed
2024-04-14 19:29:02,648:INFO:           evidently: Not installed
2024-04-14 19:29:02,648:INFO:               fugue: Not installed
2024-04-14 19:29:02,648:INFO:           streamlit: 1.33.0
2024-04-14 19:29:02,648:INFO:             prophet: Not installed
2024-04-14 19:29:02,648:INFO:None
2024-04-14 19:29:02,648:INFO:Set up data.
2024-04-14 19:29:02,658:INFO:Set up folding strategy.
2024-04-14 19:29:02,659:INFO:Set up train/test split.
2024-04-14 19:29:02,659:INFO:Set up data.
2024-04-14 19:29:02,664:INFO:Set up index.
2024-04-14 19:29:02,665:INFO:Assigning column types.
2024-04-14 19:29:02,672:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 19:29:02,744:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:29:02,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:29:02,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:02,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:02,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:29:02,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:29:02,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:02,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:02,911:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 19:29:02,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:29:03,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,097:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:29:03,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,141:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 19:29:03,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,376:INFO:Preparing preprocessing pipeline...
2024-04-14 19:29:03,378:INFO:Set up simple imputation.
2024-04-14 19:29:03,379:INFO:Set up feature normalization.
2024-04-14 19:29:03,433:INFO:Finished creating preprocessing pipeline.
2024-04-14 19:29:03,440:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 19:29:03,440:INFO:Creating final display dataframe.
2024-04-14 19:29:03,580:INFO:Setup _display_container:                     Description             Value
0                    Session id               957
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3ec7
2024-04-14 19:29:03,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:29:03,824:INFO:setup() successfully completed in 1.2s...............
2024-04-14 19:29:03,826:INFO:Initializing compare_models()
2024-04-14 19:29:03,826:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 19:29:03,826:INFO:Checking exceptions
2024-04-14 19:29:03,833:INFO:Preparing display monitor
2024-04-14 19:29:03,862:INFO:Initializing Logistic Regression
2024-04-14 19:29:03,862:INFO:Total runtime is 0.0 minutes
2024-04-14 19:29:03,867:INFO:SubProcess create_model() called ==================================
2024-04-14 19:29:03,868:INFO:Initializing create_model()
2024-04-14 19:29:03,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B39C88430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:29:03,868:INFO:Checking exceptions
2024-04-14 19:29:03,868:INFO:Importing libraries
2024-04-14 19:29:03,868:INFO:Copying training dataset
2024-04-14 19:29:03,879:INFO:Defining folds
2024-04-14 19:29:03,879:INFO:Declaring metric variables
2024-04-14 19:29:03,884:INFO:Importing untrained model
2024-04-14 19:29:03,890:INFO:Logistic Regression Imported successfully
2024-04-14 19:29:03,898:INFO:Starting cross validation
2024-04-14 19:29:03,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:29:08,843:INFO:Calculating mean and std
2024-04-14 19:29:08,847:INFO:Creating metrics dataframe
2024-04-14 19:29:08,853:INFO:Uploading results into container
2024-04-14 19:29:08,854:INFO:Uploading model into container now
2024-04-14 19:29:08,855:INFO:_master_model_container: 1
2024-04-14 19:29:08,855:INFO:_display_container: 2
2024-04-14 19:29:08,856:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=957, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:29:08,856:INFO:create_model() successfully completed......................................
2024-04-14 19:29:09,375:INFO:SubProcess create_model() end ==================================
2024-04-14 19:29:09,375:INFO:Creating metrics dataframe
2024-04-14 19:29:09,384:INFO:Initializing Decision Tree Classifier
2024-04-14 19:29:09,384:INFO:Total runtime is 0.09203382730484008 minutes
2024-04-14 19:29:09,389:INFO:SubProcess create_model() called ==================================
2024-04-14 19:29:09,389:INFO:Initializing create_model()
2024-04-14 19:29:09,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B39C88430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:29:09,389:INFO:Checking exceptions
2024-04-14 19:29:09,389:INFO:Importing libraries
2024-04-14 19:29:09,389:INFO:Copying training dataset
2024-04-14 19:29:09,399:INFO:Defining folds
2024-04-14 19:29:09,399:INFO:Declaring metric variables
2024-04-14 19:29:09,403:INFO:Importing untrained model
2024-04-14 19:29:09,408:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:29:09,417:INFO:Starting cross validation
2024-04-14 19:29:09,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:29:12,724:INFO:Calculating mean and std
2024-04-14 19:29:12,727:INFO:Creating metrics dataframe
2024-04-14 19:29:12,731:INFO:Uploading results into container
2024-04-14 19:29:12,732:INFO:Uploading model into container now
2024-04-14 19:29:12,733:INFO:_master_model_container: 2
2024-04-14 19:29:12,733:INFO:_display_container: 2
2024-04-14 19:29:12,734:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best')
2024-04-14 19:29:12,734:INFO:create_model() successfully completed......................................
2024-04-14 19:29:12,901:INFO:SubProcess create_model() end ==================================
2024-04-14 19:29:12,901:INFO:Creating metrics dataframe
2024-04-14 19:29:12,922:INFO:Initializing create_model()
2024-04-14 19:29:12,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:29:12,922:INFO:Checking exceptions
2024-04-14 19:29:12,924:INFO:Importing libraries
2024-04-14 19:29:12,925:INFO:Copying training dataset
2024-04-14 19:29:12,933:INFO:Defining folds
2024-04-14 19:29:12,933:INFO:Declaring metric variables
2024-04-14 19:29:12,933:INFO:Importing untrained model
2024-04-14 19:29:12,933:INFO:Declaring custom model
2024-04-14 19:29:12,934:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:29:12,935:INFO:Cross validation set to False
2024-04-14 19:29:12,935:INFO:Fitting Model
2024-04-14 19:29:13,012:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best')
2024-04-14 19:29:13,013:INFO:create_model() successfully completed......................................
2024-04-14 19:29:13,169:INFO:Initializing create_model()
2024-04-14 19:29:13,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=957, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:29:13,170:INFO:Checking exceptions
2024-04-14 19:29:13,172:INFO:Importing libraries
2024-04-14 19:29:13,172:INFO:Copying training dataset
2024-04-14 19:29:13,180:INFO:Defining folds
2024-04-14 19:29:13,180:INFO:Declaring metric variables
2024-04-14 19:29:13,181:INFO:Importing untrained model
2024-04-14 19:29:13,181:INFO:Declaring custom model
2024-04-14 19:29:13,181:INFO:Logistic Regression Imported successfully
2024-04-14 19:29:13,184:INFO:Cross validation set to False
2024-04-14 19:29:13,184:INFO:Fitting Model
2024-04-14 19:29:13,208:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=957, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:29:13,209:INFO:create_model() successfully completed......................................
2024-04-14 19:29:13,377:INFO:_master_model_container: 2
2024-04-14 19:29:13,377:INFO:_display_container: 2
2024-04-14 19:29:13,378:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=957, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 19:29:13,378:INFO:compare_models() successfully completed......................................
2024-04-14 19:29:13,379:INFO:Initializing predict_model()
2024-04-14 19:29:13,379:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=957, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3998DAB0>)
2024-04-14 19:29:13,379:INFO:Checking exceptions
2024-04-14 19:29:13,380:INFO:Preloading libraries
2024-04-14 19:29:14,707:INFO:Initializing predict_model()
2024-04-14 19:29:14,707:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C1B8C10>)
2024-04-14 19:29:14,707:INFO:Checking exceptions
2024-04-14 19:29:14,708:INFO:Preloading libraries
2024-04-14 19:29:15,713:INFO:Initializing tune_model()
2024-04-14 19:29:15,714:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>)
2024-04-14 19:29:15,714:INFO:Checking exceptions
2024-04-14 19:29:15,733:INFO:Copying training dataset
2024-04-14 19:29:15,740:INFO:Checking base model
2024-04-14 19:29:15,740:INFO:Base model : Decision Tree Classifier
2024-04-14 19:29:15,745:INFO:Declaring metric variables
2024-04-14 19:29:15,749:INFO:Defining Hyperparameters
2024-04-14 19:29:15,910:INFO:Tuning with n_jobs=-1
2024-04-14 19:29:15,910:INFO:Initializing RandomizedSearchCV
2024-04-14 19:29:16,181:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2024-04-14 19:29:16,181:INFO:Hyperparameter search completed
2024-04-14 19:29:16,181:INFO:SubProcess create_model() called ==================================
2024-04-14 19:29:16,182:INFO:Initializing create_model()
2024-04-14 19:29:16,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B369DE920>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'entropy'})
2024-04-14 19:29:16,182:INFO:Checking exceptions
2024-04-14 19:29:16,182:INFO:Importing libraries
2024-04-14 19:29:16,182:INFO:Copying training dataset
2024-04-14 19:29:16,190:INFO:Defining folds
2024-04-14 19:29:16,191:INFO:Declaring metric variables
2024-04-14 19:29:16,195:INFO:Importing untrained model
2024-04-14 19:29:16,195:INFO:Declaring custom model
2024-04-14 19:29:16,201:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:29:16,208:INFO:Starting cross validation
2024-04-14 19:29:16,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:29:16,356:INFO:Calculating mean and std
2024-04-14 19:29:16,357:INFO:Creating metrics dataframe
2024-04-14 19:29:16,363:INFO:Finalizing model
2024-04-14 19:29:16,412:INFO:Uploading results into container
2024-04-14 19:29:16,413:INFO:Uploading model into container now
2024-04-14 19:29:16,414:INFO:_master_model_container: 3
2024-04-14 19:29:16,414:INFO:_display_container: 5
2024-04-14 19:29:16,415:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best')
2024-04-14 19:29:16,415:INFO:create_model() successfully completed......................................
2024-04-14 19:29:16,593:INFO:SubProcess create_model() end ==================================
2024-04-14 19:29:16,593:INFO:choose_better activated
2024-04-14 19:29:16,598:INFO:SubProcess create_model() called ==================================
2024-04-14 19:29:16,598:INFO:Initializing create_model()
2024-04-14 19:29:16,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:29:16,599:INFO:Checking exceptions
2024-04-14 19:29:16,601:INFO:Importing libraries
2024-04-14 19:29:16,601:INFO:Copying training dataset
2024-04-14 19:29:16,608:INFO:Defining folds
2024-04-14 19:29:16,608:INFO:Declaring metric variables
2024-04-14 19:29:16,609:INFO:Importing untrained model
2024-04-14 19:29:16,609:INFO:Declaring custom model
2024-04-14 19:29:16,610:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:29:16,610:INFO:Starting cross validation
2024-04-14 19:29:16,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:29:16,802:INFO:Calculating mean and std
2024-04-14 19:29:16,803:INFO:Creating metrics dataframe
2024-04-14 19:29:16,805:INFO:Finalizing model
2024-04-14 19:29:16,880:INFO:Uploading results into container
2024-04-14 19:29:16,880:INFO:Uploading model into container now
2024-04-14 19:29:16,881:INFO:_master_model_container: 4
2024-04-14 19:29:16,881:INFO:_display_container: 6
2024-04-14 19:29:16,881:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best')
2024-04-14 19:29:16,882:INFO:create_model() successfully completed......................................
2024-04-14 19:29:17,031:INFO:SubProcess create_model() end ==================================
2024-04-14 19:29:17,032:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best') result for F1 is 0.5435
2024-04-14 19:29:17,032:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best') result for F1 is 0.4982
2024-04-14 19:29:17,033:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best') is best model
2024-04-14 19:29:17,033:INFO:choose_better completed
2024-04-14 19:29:17,033:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 19:29:17,046:INFO:_master_model_container: 4
2024-04-14 19:29:17,046:INFO:_display_container: 5
2024-04-14 19:29:17,046:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best')
2024-04-14 19:29:17,046:INFO:tune_model() successfully completed......................................
2024-04-14 19:29:17,198:INFO:Initializing predict_model()
2024-04-14 19:29:17,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3BE6A140>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=957, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B34D72320>)
2024-04-14 19:29:17,198:INFO:Checking exceptions
2024-04-14 19:29:17,198:INFO:Preloading libraries
2024-04-14 19:31:20,890:INFO:PyCaret ClassificationExperiment
2024-04-14 19:31:20,890:INFO:Logging name: clf-default-name
2024-04-14 19:31:20,890:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 19:31:20,890:INFO:version 3.3.0
2024-04-14 19:31:20,890:INFO:Initializing setup()
2024-04-14 19:31:20,890:INFO:self.USI: bf81
2024-04-14 19:31:20,890:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 19:31:20,890:INFO:Checking environment
2024-04-14 19:31:20,890:INFO:python_version: 3.10.14
2024-04-14 19:31:20,890:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 19:31:20,891:INFO:machine: AMD64
2024-04-14 19:31:20,891:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 19:31:20,896:INFO:Memory: svmem(total=17131573248, available=2703843328, percent=84.2, used=14427729920, free=2703843328)
2024-04-14 19:31:20,896:INFO:Physical Core: 8
2024-04-14 19:31:20,896:INFO:Logical Core: 16
2024-04-14 19:31:20,896:INFO:Checking libraries
2024-04-14 19:31:20,896:INFO:System:
2024-04-14 19:31:20,896:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 19:31:20,896:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 19:31:20,896:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 19:31:20,896:INFO:PyCaret required dependencies:
2024-04-14 19:31:20,896:INFO:                 pip: 23.3.1
2024-04-14 19:31:20,897:INFO:          setuptools: 68.2.2
2024-04-14 19:31:20,897:INFO:             pycaret: 3.3.0
2024-04-14 19:31:20,897:INFO:             IPython: 8.23.0
2024-04-14 19:31:20,897:INFO:          ipywidgets: 8.1.2
2024-04-14 19:31:20,897:INFO:                tqdm: 4.66.2
2024-04-14 19:31:20,897:INFO:               numpy: 1.26.4
2024-04-14 19:31:20,897:INFO:              pandas: 2.1.4
2024-04-14 19:31:20,897:INFO:              jinja2: 3.1.3
2024-04-14 19:31:20,897:INFO:               scipy: 1.11.4
2024-04-14 19:31:20,897:INFO:              joblib: 1.3.2
2024-04-14 19:31:20,897:INFO:             sklearn: 1.4.1.post1
2024-04-14 19:31:20,897:INFO:                pyod: 1.1.3
2024-04-14 19:31:20,897:INFO:            imblearn: 0.12.2
2024-04-14 19:31:20,897:INFO:   category_encoders: 2.6.3
2024-04-14 19:31:20,897:INFO:            lightgbm: 4.3.0
2024-04-14 19:31:20,897:INFO:               numba: 0.59.1
2024-04-14 19:31:20,898:INFO:            requests: 2.31.0
2024-04-14 19:31:20,898:INFO:          matplotlib: 3.7.5
2024-04-14 19:31:20,898:INFO:          scikitplot: 0.3.7
2024-04-14 19:31:20,898:INFO:         yellowbrick: 1.5
2024-04-14 19:31:20,898:INFO:              plotly: 5.20.0
2024-04-14 19:31:20,898:INFO:    plotly-resampler: Not installed
2024-04-14 19:31:20,898:INFO:             kaleido: 0.2.1
2024-04-14 19:31:20,898:INFO:           schemdraw: 0.15
2024-04-14 19:31:20,898:INFO:         statsmodels: 0.14.1
2024-04-14 19:31:20,898:INFO:              sktime: 0.28.0
2024-04-14 19:31:20,898:INFO:               tbats: 1.1.3
2024-04-14 19:31:20,898:INFO:            pmdarima: 2.0.4
2024-04-14 19:31:20,898:INFO:              psutil: 5.9.8
2024-04-14 19:31:20,898:INFO:          markupsafe: 2.1.5
2024-04-14 19:31:20,898:INFO:             pickle5: Not installed
2024-04-14 19:31:20,899:INFO:         cloudpickle: 3.0.0
2024-04-14 19:31:20,899:INFO:         deprecation: 2.1.0
2024-04-14 19:31:20,899:INFO:              xxhash: 3.4.1
2024-04-14 19:31:20,899:INFO:           wurlitzer: 3.0.3
2024-04-14 19:31:20,899:INFO:PyCaret optional dependencies:
2024-04-14 19:31:20,899:INFO:                shap: Not installed
2024-04-14 19:31:20,899:INFO:           interpret: Not installed
2024-04-14 19:31:20,899:INFO:                umap: Not installed
2024-04-14 19:31:20,899:INFO:     ydata_profiling: Not installed
2024-04-14 19:31:20,899:INFO:  explainerdashboard: Not installed
2024-04-14 19:31:20,899:INFO:             autoviz: Not installed
2024-04-14 19:31:20,899:INFO:           fairlearn: Not installed
2024-04-14 19:31:20,899:INFO:          deepchecks: Not installed
2024-04-14 19:31:20,899:INFO:             xgboost: Not installed
2024-04-14 19:31:20,899:INFO:            catboost: Not installed
2024-04-14 19:31:20,900:INFO:              kmodes: Not installed
2024-04-14 19:31:20,900:INFO:             mlxtend: Not installed
2024-04-14 19:31:20,900:INFO:       statsforecast: Not installed
2024-04-14 19:31:20,900:INFO:        tune_sklearn: Not installed
2024-04-14 19:31:20,900:INFO:                 ray: Not installed
2024-04-14 19:31:20,900:INFO:            hyperopt: Not installed
2024-04-14 19:31:20,900:INFO:              optuna: Not installed
2024-04-14 19:31:20,900:INFO:               skopt: Not installed
2024-04-14 19:31:20,900:INFO:              mlflow: 2.11.3
2024-04-14 19:31:20,900:INFO:              gradio: Not installed
2024-04-14 19:31:20,900:INFO:             fastapi: Not installed
2024-04-14 19:31:20,900:INFO:             uvicorn: Not installed
2024-04-14 19:31:20,900:INFO:              m2cgen: Not installed
2024-04-14 19:31:20,900:INFO:           evidently: Not installed
2024-04-14 19:31:20,900:INFO:               fugue: Not installed
2024-04-14 19:31:20,901:INFO:           streamlit: 1.33.0
2024-04-14 19:31:20,901:INFO:             prophet: Not installed
2024-04-14 19:31:20,901:INFO:None
2024-04-14 19:31:20,901:INFO:Set up data.
2024-04-14 19:31:20,906:INFO:Set up folding strategy.
2024-04-14 19:31:20,906:INFO:Set up train/test split.
2024-04-14 19:31:20,906:INFO:Set up data.
2024-04-14 19:31:20,912:INFO:Set up index.
2024-04-14 19:31:20,912:INFO:Assigning column types.
2024-04-14 19:31:20,917:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 19:31:20,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:31:20,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:21,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:31:21,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:21,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,149:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 19:31:21,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:21,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:21,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,380:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 19:31:21,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,605:INFO:Preparing preprocessing pipeline...
2024-04-14 19:31:21,607:INFO:Set up simple imputation.
2024-04-14 19:31:21,607:INFO:Set up feature normalization.
2024-04-14 19:31:21,647:INFO:Finished creating preprocessing pipeline.
2024-04-14 19:31:21,654:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 19:31:21,654:INFO:Creating final display dataframe.
2024-04-14 19:31:21,788:INFO:Setup _display_container:                     Description             Value
0                    Session id              8403
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              bf81
2024-04-14 19:31:21,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:21,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:22,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:22,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:22,022:INFO:setup() successfully completed in 1.13s...............
2024-04-14 19:31:22,023:INFO:Initializing compare_models()
2024-04-14 19:31:22,023:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 19:31:22,023:INFO:Checking exceptions
2024-04-14 19:31:22,029:INFO:Preparing display monitor
2024-04-14 19:31:22,056:INFO:Initializing Logistic Regression
2024-04-14 19:31:22,056:INFO:Total runtime is 0.0 minutes
2024-04-14 19:31:22,060:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:22,061:INFO:Initializing create_model()
2024-04-14 19:31:22,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3570D5A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:22,061:INFO:Checking exceptions
2024-04-14 19:31:22,061:INFO:Importing libraries
2024-04-14 19:31:22,062:INFO:Copying training dataset
2024-04-14 19:31:22,073:INFO:Defining folds
2024-04-14 19:31:22,073:INFO:Declaring metric variables
2024-04-14 19:31:22,077:INFO:Importing untrained model
2024-04-14 19:31:22,082:INFO:Logistic Regression Imported successfully
2024-04-14 19:31:22,091:INFO:Starting cross validation
2024-04-14 19:31:22,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:22,231:INFO:Calculating mean and std
2024-04-14 19:31:22,232:INFO:Creating metrics dataframe
2024-04-14 19:31:22,234:INFO:Uploading results into container
2024-04-14 19:31:22,234:INFO:Uploading model into container now
2024-04-14 19:31:22,235:INFO:_master_model_container: 1
2024-04-14 19:31:22,235:INFO:_display_container: 2
2024-04-14 19:31:22,235:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8403, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:31:22,235:INFO:create_model() successfully completed......................................
2024-04-14 19:31:22,402:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:22,402:INFO:Creating metrics dataframe
2024-04-14 19:31:22,411:INFO:Initializing Decision Tree Classifier
2024-04-14 19:31:22,411:INFO:Total runtime is 0.00592204729715983 minutes
2024-04-14 19:31:22,416:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:22,416:INFO:Initializing create_model()
2024-04-14 19:31:22,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3570D5A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:22,416:INFO:Checking exceptions
2024-04-14 19:31:22,416:INFO:Importing libraries
2024-04-14 19:31:22,416:INFO:Copying training dataset
2024-04-14 19:31:22,425:INFO:Defining folds
2024-04-14 19:31:22,425:INFO:Declaring metric variables
2024-04-14 19:31:22,429:INFO:Importing untrained model
2024-04-14 19:31:22,433:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:22,442:INFO:Starting cross validation
2024-04-14 19:31:22,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:22,629:INFO:Calculating mean and std
2024-04-14 19:31:22,630:INFO:Creating metrics dataframe
2024-04-14 19:31:22,632:INFO:Uploading results into container
2024-04-14 19:31:22,632:INFO:Uploading model into container now
2024-04-14 19:31:22,633:INFO:_master_model_container: 2
2024-04-14 19:31:22,633:INFO:_display_container: 2
2024-04-14 19:31:22,633:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best')
2024-04-14 19:31:22,633:INFO:create_model() successfully completed......................................
2024-04-14 19:31:22,790:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:22,791:INFO:Creating metrics dataframe
2024-04-14 19:31:22,810:INFO:Initializing create_model()
2024-04-14 19:31:22,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:22,810:INFO:Checking exceptions
2024-04-14 19:31:22,812:INFO:Importing libraries
2024-04-14 19:31:22,812:INFO:Copying training dataset
2024-04-14 19:31:22,821:INFO:Defining folds
2024-04-14 19:31:22,821:INFO:Declaring metric variables
2024-04-14 19:31:22,821:INFO:Importing untrained model
2024-04-14 19:31:22,821:INFO:Declaring custom model
2024-04-14 19:31:22,822:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:22,823:INFO:Cross validation set to False
2024-04-14 19:31:22,823:INFO:Fitting Model
2024-04-14 19:31:22,897:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best')
2024-04-14 19:31:22,897:INFO:create_model() successfully completed......................................
2024-04-14 19:31:23,060:INFO:Initializing create_model()
2024-04-14 19:31:23,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8403, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:23,060:INFO:Checking exceptions
2024-04-14 19:31:23,062:INFO:Importing libraries
2024-04-14 19:31:23,062:INFO:Copying training dataset
2024-04-14 19:31:23,071:INFO:Defining folds
2024-04-14 19:31:23,071:INFO:Declaring metric variables
2024-04-14 19:31:23,071:INFO:Importing untrained model
2024-04-14 19:31:23,071:INFO:Declaring custom model
2024-04-14 19:31:23,072:INFO:Logistic Regression Imported successfully
2024-04-14 19:31:23,073:INFO:Cross validation set to False
2024-04-14 19:31:23,073:INFO:Fitting Model
2024-04-14 19:31:23,097:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8403, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:31:23,097:INFO:create_model() successfully completed......................................
2024-04-14 19:31:23,270:INFO:_master_model_container: 2
2024-04-14 19:31:23,270:INFO:_display_container: 2
2024-04-14 19:31:23,271:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8403, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 19:31:23,271:INFO:compare_models() successfully completed......................................
2024-04-14 19:31:23,272:INFO:Initializing predict_model()
2024-04-14 19:31:23,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8403, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B36ADAA70>)
2024-04-14 19:31:23,272:INFO:Checking exceptions
2024-04-14 19:31:23,272:INFO:Preloading libraries
2024-04-14 19:31:24,581:INFO:Initializing predict_model()
2024-04-14 19:31:24,582:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C026C20>)
2024-04-14 19:31:24,582:INFO:Checking exceptions
2024-04-14 19:31:24,582:INFO:Preloading libraries
2024-04-14 19:31:25,520:INFO:Initializing tune_model()
2024-04-14 19:31:25,520:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>)
2024-04-14 19:31:25,520:INFO:Checking exceptions
2024-04-14 19:31:25,540:INFO:Copying training dataset
2024-04-14 19:31:25,548:INFO:Checking base model
2024-04-14 19:31:25,548:INFO:Base model : Decision Tree Classifier
2024-04-14 19:31:25,553:INFO:Declaring metric variables
2024-04-14 19:31:25,557:INFO:Defining Hyperparameters
2024-04-14 19:31:25,750:INFO:Tuning with n_jobs=-1
2024-04-14 19:31:25,750:INFO:Initializing RandomizedSearchCV
2024-04-14 19:31:26,028:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 3, 'actual_estimator__criterion': 'gini'}
2024-04-14 19:31:26,028:INFO:Hyperparameter search completed
2024-04-14 19:31:26,028:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:26,029:INFO:Initializing create_model()
2024-04-14 19:31:26,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3C4EC340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 'sqrt', 'max_depth': 3, 'criterion': 'gini'})
2024-04-14 19:31:26,029:INFO:Checking exceptions
2024-04-14 19:31:26,029:INFO:Importing libraries
2024-04-14 19:31:26,029:INFO:Copying training dataset
2024-04-14 19:31:26,037:INFO:Defining folds
2024-04-14 19:31:26,037:INFO:Declaring metric variables
2024-04-14 19:31:26,042:INFO:Importing untrained model
2024-04-14 19:31:26,042:INFO:Declaring custom model
2024-04-14 19:31:26,047:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:26,055:INFO:Starting cross validation
2024-04-14 19:31:26,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:26,188:INFO:Calculating mean and std
2024-04-14 19:31:26,189:INFO:Creating metrics dataframe
2024-04-14 19:31:26,195:INFO:Finalizing model
2024-04-14 19:31:26,218:INFO:Uploading results into container
2024-04-14 19:31:26,219:INFO:Uploading model into container now
2024-04-14 19:31:26,220:INFO:_master_model_container: 3
2024-04-14 19:31:26,220:INFO:_display_container: 5
2024-04-14 19:31:26,221:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=3, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best')
2024-04-14 19:31:26,221:INFO:create_model() successfully completed......................................
2024-04-14 19:31:26,385:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:26,385:INFO:choose_better activated
2024-04-14 19:31:26,389:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:26,390:INFO:Initializing create_model()
2024-04-14 19:31:26,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:26,390:INFO:Checking exceptions
2024-04-14 19:31:26,392:INFO:Importing libraries
2024-04-14 19:31:26,392:INFO:Copying training dataset
2024-04-14 19:31:26,400:INFO:Defining folds
2024-04-14 19:31:26,400:INFO:Declaring metric variables
2024-04-14 19:31:26,400:INFO:Importing untrained model
2024-04-14 19:31:26,401:INFO:Declaring custom model
2024-04-14 19:31:26,401:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:26,402:INFO:Starting cross validation
2024-04-14 19:31:26,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:26,588:INFO:Calculating mean and std
2024-04-14 19:31:26,589:INFO:Creating metrics dataframe
2024-04-14 19:31:26,591:INFO:Finalizing model
2024-04-14 19:31:26,663:INFO:Uploading results into container
2024-04-14 19:31:26,664:INFO:Uploading model into container now
2024-04-14 19:31:26,664:INFO:_master_model_container: 4
2024-04-14 19:31:26,665:INFO:_display_container: 6
2024-04-14 19:31:26,665:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best')
2024-04-14 19:31:26,665:INFO:create_model() successfully completed......................................
2024-04-14 19:31:26,828:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:26,829:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best') result for F1 is 0.5487
2024-04-14 19:31:26,829:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=3, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best') result for F1 is 0.4583
2024-04-14 19:31:26,830:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best') is best model
2024-04-14 19:31:26,830:INFO:choose_better completed
2024-04-14 19:31:26,830:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 19:31:26,844:INFO:_master_model_container: 4
2024-04-14 19:31:26,844:INFO:_display_container: 5
2024-04-14 19:31:26,845:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best')
2024-04-14 19:31:26,845:INFO:tune_model() successfully completed......................................
2024-04-14 19:31:27,007:INFO:Initializing predict_model()
2024-04-14 19:31:27,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B3C5A88E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8403, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C1B8430>)
2024-04-14 19:31:27,007:INFO:Checking exceptions
2024-04-14 19:31:27,008:INFO:Preloading libraries
2024-04-14 19:31:33,800:INFO:PyCaret ClassificationExperiment
2024-04-14 19:31:33,800:INFO:Logging name: clf-default-name
2024-04-14 19:31:33,800:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 19:31:33,800:INFO:version 3.3.0
2024-04-14 19:31:33,800:INFO:Initializing setup()
2024-04-14 19:31:33,800:INFO:self.USI: cb66
2024-04-14 19:31:33,801:INFO:self._variable_keys: {'n_jobs_param', 'target_param', 'fix_imbalance', 'gpu_param', 'seed', 'data', 'X', 'y', 'idx', 'fold_generator', 'log_plots_param', 'y_test', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'X_train', '_available_plots', 'is_multiclass', 'exp_name_log', 'USI', 'fold_shuffle_param', 'exp_id', 'html_param', 'X_test', 'pipeline', 'logging_param', 'memory'}
2024-04-14 19:31:33,801:INFO:Checking environment
2024-04-14 19:31:33,801:INFO:python_version: 3.10.14
2024-04-14 19:31:33,801:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 19:31:33,801:INFO:machine: AMD64
2024-04-14 19:31:33,801:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 19:31:33,806:INFO:Memory: svmem(total=17131573248, available=2635923456, percent=84.6, used=14495649792, free=2635923456)
2024-04-14 19:31:33,806:INFO:Physical Core: 8
2024-04-14 19:31:33,806:INFO:Logical Core: 16
2024-04-14 19:31:33,807:INFO:Checking libraries
2024-04-14 19:31:33,807:INFO:System:
2024-04-14 19:31:33,807:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 19:31:33,807:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 19:31:33,807:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 19:31:33,807:INFO:PyCaret required dependencies:
2024-04-14 19:31:33,807:INFO:                 pip: 23.3.1
2024-04-14 19:31:33,807:INFO:          setuptools: 68.2.2
2024-04-14 19:31:33,807:INFO:             pycaret: 3.3.0
2024-04-14 19:31:33,807:INFO:             IPython: 8.23.0
2024-04-14 19:31:33,807:INFO:          ipywidgets: 8.1.2
2024-04-14 19:31:33,807:INFO:                tqdm: 4.66.2
2024-04-14 19:31:33,807:INFO:               numpy: 1.26.4
2024-04-14 19:31:33,808:INFO:              pandas: 2.1.4
2024-04-14 19:31:33,808:INFO:              jinja2: 3.1.3
2024-04-14 19:31:33,808:INFO:               scipy: 1.11.4
2024-04-14 19:31:33,808:INFO:              joblib: 1.3.2
2024-04-14 19:31:33,808:INFO:             sklearn: 1.4.1.post1
2024-04-14 19:31:33,808:INFO:                pyod: 1.1.3
2024-04-14 19:31:33,808:INFO:            imblearn: 0.12.2
2024-04-14 19:31:33,808:INFO:   category_encoders: 2.6.3
2024-04-14 19:31:33,808:INFO:            lightgbm: 4.3.0
2024-04-14 19:31:33,808:INFO:               numba: 0.59.1
2024-04-14 19:31:33,808:INFO:            requests: 2.31.0
2024-04-14 19:31:33,808:INFO:          matplotlib: 3.7.5
2024-04-14 19:31:33,808:INFO:          scikitplot: 0.3.7
2024-04-14 19:31:33,808:INFO:         yellowbrick: 1.5
2024-04-14 19:31:33,808:INFO:              plotly: 5.20.0
2024-04-14 19:31:33,809:INFO:    plotly-resampler: Not installed
2024-04-14 19:31:33,809:INFO:             kaleido: 0.2.1
2024-04-14 19:31:33,809:INFO:           schemdraw: 0.15
2024-04-14 19:31:33,809:INFO:         statsmodels: 0.14.1
2024-04-14 19:31:33,809:INFO:              sktime: 0.28.0
2024-04-14 19:31:33,809:INFO:               tbats: 1.1.3
2024-04-14 19:31:33,809:INFO:            pmdarima: 2.0.4
2024-04-14 19:31:33,809:INFO:              psutil: 5.9.8
2024-04-14 19:31:33,809:INFO:          markupsafe: 2.1.5
2024-04-14 19:31:33,809:INFO:             pickle5: Not installed
2024-04-14 19:31:33,809:INFO:         cloudpickle: 3.0.0
2024-04-14 19:31:33,809:INFO:         deprecation: 2.1.0
2024-04-14 19:31:33,809:INFO:              xxhash: 3.4.1
2024-04-14 19:31:33,809:INFO:           wurlitzer: 3.0.3
2024-04-14 19:31:33,809:INFO:PyCaret optional dependencies:
2024-04-14 19:31:33,810:INFO:                shap: Not installed
2024-04-14 19:31:33,810:INFO:           interpret: Not installed
2024-04-14 19:31:33,810:INFO:                umap: Not installed
2024-04-14 19:31:33,810:INFO:     ydata_profiling: Not installed
2024-04-14 19:31:33,810:INFO:  explainerdashboard: Not installed
2024-04-14 19:31:33,810:INFO:             autoviz: Not installed
2024-04-14 19:31:33,810:INFO:           fairlearn: Not installed
2024-04-14 19:31:33,810:INFO:          deepchecks: Not installed
2024-04-14 19:31:33,810:INFO:             xgboost: Not installed
2024-04-14 19:31:33,810:INFO:            catboost: Not installed
2024-04-14 19:31:33,810:INFO:              kmodes: Not installed
2024-04-14 19:31:33,810:INFO:             mlxtend: Not installed
2024-04-14 19:31:33,810:INFO:       statsforecast: Not installed
2024-04-14 19:31:33,810:INFO:        tune_sklearn: Not installed
2024-04-14 19:31:33,811:INFO:                 ray: Not installed
2024-04-14 19:31:33,811:INFO:            hyperopt: Not installed
2024-04-14 19:31:33,811:INFO:              optuna: Not installed
2024-04-14 19:31:33,811:INFO:               skopt: Not installed
2024-04-14 19:31:33,811:INFO:              mlflow: 2.11.3
2024-04-14 19:31:33,811:INFO:              gradio: Not installed
2024-04-14 19:31:33,811:INFO:             fastapi: Not installed
2024-04-14 19:31:33,811:INFO:             uvicorn: Not installed
2024-04-14 19:31:33,811:INFO:              m2cgen: Not installed
2024-04-14 19:31:33,811:INFO:           evidently: Not installed
2024-04-14 19:31:33,811:INFO:               fugue: Not installed
2024-04-14 19:31:33,811:INFO:           streamlit: 1.33.0
2024-04-14 19:31:33,811:INFO:             prophet: Not installed
2024-04-14 19:31:33,811:INFO:None
2024-04-14 19:31:33,811:INFO:Set up data.
2024-04-14 19:31:33,817:INFO:Set up folding strategy.
2024-04-14 19:31:33,817:INFO:Set up train/test split.
2024-04-14 19:31:33,817:INFO:Set up data.
2024-04-14 19:31:33,822:INFO:Set up index.
2024-04-14 19:31:33,823:INFO:Assigning column types.
2024-04-14 19:31:33,829:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 19:31:33,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:31:33,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:33,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:33,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:31:34,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:34,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,058:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 19:31:34,128:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:34,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,242:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:31:34,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,285:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 19:31:34,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,515:INFO:Preparing preprocessing pipeline...
2024-04-14 19:31:34,517:INFO:Set up simple imputation.
2024-04-14 19:31:34,517:INFO:Set up feature normalization.
2024-04-14 19:31:34,556:INFO:Finished creating preprocessing pipeline.
2024-04-14 19:31:34,563:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 19:31:34,563:INFO:Creating final display dataframe.
2024-04-14 19:31:34,694:INFO:Setup _display_container:                     Description             Value
0                    Session id               682
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              cb66
2024-04-14 19:31:34,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:31:34,929:INFO:setup() successfully completed in 1.13s...............
2024-04-14 19:31:34,931:INFO:Initializing compare_models()
2024-04-14 19:31:34,931:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 19:31:34,931:INFO:Checking exceptions
2024-04-14 19:31:34,936:INFO:Preparing display monitor
2024-04-14 19:31:34,964:INFO:Initializing Logistic Regression
2024-04-14 19:31:34,964:INFO:Total runtime is 0.0 minutes
2024-04-14 19:31:34,968:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:34,969:INFO:Initializing create_model()
2024-04-14 19:31:34,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B34CFA7D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:34,969:INFO:Checking exceptions
2024-04-14 19:31:34,969:INFO:Importing libraries
2024-04-14 19:31:34,969:INFO:Copying training dataset
2024-04-14 19:31:34,979:INFO:Defining folds
2024-04-14 19:31:34,979:INFO:Declaring metric variables
2024-04-14 19:31:34,984:INFO:Importing untrained model
2024-04-14 19:31:34,989:INFO:Logistic Regression Imported successfully
2024-04-14 19:31:34,997:INFO:Starting cross validation
2024-04-14 19:31:34,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:35,156:INFO:Calculating mean and std
2024-04-14 19:31:35,157:INFO:Creating metrics dataframe
2024-04-14 19:31:35,159:INFO:Uploading results into container
2024-04-14 19:31:35,159:INFO:Uploading model into container now
2024-04-14 19:31:35,160:INFO:_master_model_container: 1
2024-04-14 19:31:35,160:INFO:_display_container: 2
2024-04-14 19:31:35,160:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=682, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:31:35,160:INFO:create_model() successfully completed......................................
2024-04-14 19:31:35,323:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:35,323:INFO:Creating metrics dataframe
2024-04-14 19:31:35,332:INFO:Initializing Decision Tree Classifier
2024-04-14 19:31:35,332:INFO:Total runtime is 0.006138920783996582 minutes
2024-04-14 19:31:35,337:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:35,337:INFO:Initializing create_model()
2024-04-14 19:31:35,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B34CFA7D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:35,337:INFO:Checking exceptions
2024-04-14 19:31:35,337:INFO:Importing libraries
2024-04-14 19:31:35,337:INFO:Copying training dataset
2024-04-14 19:31:35,346:INFO:Defining folds
2024-04-14 19:31:35,346:INFO:Declaring metric variables
2024-04-14 19:31:35,350:INFO:Importing untrained model
2024-04-14 19:31:35,355:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:35,363:INFO:Starting cross validation
2024-04-14 19:31:35,365:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:35,532:INFO:Calculating mean and std
2024-04-14 19:31:35,533:INFO:Creating metrics dataframe
2024-04-14 19:31:35,535:INFO:Uploading results into container
2024-04-14 19:31:35,535:INFO:Uploading model into container now
2024-04-14 19:31:35,536:INFO:_master_model_container: 2
2024-04-14 19:31:35,536:INFO:_display_container: 2
2024-04-14 19:31:35,536:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best')
2024-04-14 19:31:35,536:INFO:create_model() successfully completed......................................
2024-04-14 19:31:35,694:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:35,695:INFO:Creating metrics dataframe
2024-04-14 19:31:35,714:INFO:Initializing create_model()
2024-04-14 19:31:35,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:35,714:INFO:Checking exceptions
2024-04-14 19:31:35,716:INFO:Importing libraries
2024-04-14 19:31:35,717:INFO:Copying training dataset
2024-04-14 19:31:35,725:INFO:Defining folds
2024-04-14 19:31:35,725:INFO:Declaring metric variables
2024-04-14 19:31:35,725:INFO:Importing untrained model
2024-04-14 19:31:35,725:INFO:Declaring custom model
2024-04-14 19:31:35,726:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:35,727:INFO:Cross validation set to False
2024-04-14 19:31:35,727:INFO:Fitting Model
2024-04-14 19:31:35,799:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best')
2024-04-14 19:31:35,799:INFO:create_model() successfully completed......................................
2024-04-14 19:31:35,968:INFO:Initializing create_model()
2024-04-14 19:31:35,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=682, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:35,968:INFO:Checking exceptions
2024-04-14 19:31:35,970:INFO:Importing libraries
2024-04-14 19:31:35,971:INFO:Copying training dataset
2024-04-14 19:31:35,979:INFO:Defining folds
2024-04-14 19:31:35,979:INFO:Declaring metric variables
2024-04-14 19:31:35,979:INFO:Importing untrained model
2024-04-14 19:31:35,979:INFO:Declaring custom model
2024-04-14 19:31:35,980:INFO:Logistic Regression Imported successfully
2024-04-14 19:31:35,981:INFO:Cross validation set to False
2024-04-14 19:31:35,981:INFO:Fitting Model
2024-04-14 19:31:36,004:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=682, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:31:36,004:INFO:create_model() successfully completed......................................
2024-04-14 19:31:36,182:INFO:_master_model_container: 2
2024-04-14 19:31:36,182:INFO:_display_container: 2
2024-04-14 19:31:36,183:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=682, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 19:31:36,183:INFO:compare_models() successfully completed......................................
2024-04-14 19:31:36,184:INFO:Initializing predict_model()
2024-04-14 19:31:36,185:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=682, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3BBC0DC0>)
2024-04-14 19:31:36,185:INFO:Checking exceptions
2024-04-14 19:31:36,185:INFO:Preloading libraries
2024-04-14 19:31:37,504:INFO:Initializing predict_model()
2024-04-14 19:31:37,504:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C706830>)
2024-04-14 19:31:37,504:INFO:Checking exceptions
2024-04-14 19:31:37,504:INFO:Preloading libraries
2024-04-14 19:31:38,435:INFO:Initializing tune_model()
2024-04-14 19:31:38,435:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>)
2024-04-14 19:31:38,435:INFO:Checking exceptions
2024-04-14 19:31:38,454:INFO:Copying training dataset
2024-04-14 19:31:38,461:INFO:Checking base model
2024-04-14 19:31:38,462:INFO:Base model : Decision Tree Classifier
2024-04-14 19:31:38,466:INFO:Declaring metric variables
2024-04-14 19:31:38,471:INFO:Defining Hyperparameters
2024-04-14 19:31:38,636:INFO:Tuning with n_jobs=-1
2024-04-14 19:31:38,637:INFO:Initializing RandomizedSearchCV
2024-04-14 19:31:38,906:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 2, 'actual_estimator__criterion': 'gini'}
2024-04-14 19:31:38,906:INFO:Hyperparameter search completed
2024-04-14 19:31:38,906:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:38,907:INFO:Initializing create_model()
2024-04-14 19:31:38,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018B3ED45840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 2, 'criterion': 'gini'})
2024-04-14 19:31:38,907:INFO:Checking exceptions
2024-04-14 19:31:38,907:INFO:Importing libraries
2024-04-14 19:31:38,907:INFO:Copying training dataset
2024-04-14 19:31:38,915:INFO:Defining folds
2024-04-14 19:31:38,915:INFO:Declaring metric variables
2024-04-14 19:31:38,919:INFO:Importing untrained model
2024-04-14 19:31:38,919:INFO:Declaring custom model
2024-04-14 19:31:38,924:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:38,932:INFO:Starting cross validation
2024-04-14 19:31:38,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:39,061:INFO:Calculating mean and std
2024-04-14 19:31:39,062:INFO:Creating metrics dataframe
2024-04-14 19:31:39,068:INFO:Finalizing model
2024-04-14 19:31:39,090:INFO:Uploading results into container
2024-04-14 19:31:39,091:INFO:Uploading model into container now
2024-04-14 19:31:39,092:INFO:_master_model_container: 3
2024-04-14 19:31:39,092:INFO:_display_container: 5
2024-04-14 19:31:39,092:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=2, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best')
2024-04-14 19:31:39,093:INFO:create_model() successfully completed......................................
2024-04-14 19:31:39,250:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:39,250:INFO:choose_better activated
2024-04-14 19:31:39,254:INFO:SubProcess create_model() called ==================================
2024-04-14 19:31:39,255:INFO:Initializing create_model()
2024-04-14 19:31:39,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:39,255:INFO:Checking exceptions
2024-04-14 19:31:39,257:INFO:Importing libraries
2024-04-14 19:31:39,257:INFO:Copying training dataset
2024-04-14 19:31:39,265:INFO:Defining folds
2024-04-14 19:31:39,265:INFO:Declaring metric variables
2024-04-14 19:31:39,266:INFO:Importing untrained model
2024-04-14 19:31:39,266:INFO:Declaring custom model
2024-04-14 19:31:39,266:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:39,267:INFO:Starting cross validation
2024-04-14 19:31:39,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:31:39,444:INFO:Calculating mean and std
2024-04-14 19:31:39,445:INFO:Creating metrics dataframe
2024-04-14 19:31:39,447:INFO:Finalizing model
2024-04-14 19:31:39,517:INFO:Uploading results into container
2024-04-14 19:31:39,518:INFO:Uploading model into container now
2024-04-14 19:31:39,518:INFO:_master_model_container: 4
2024-04-14 19:31:39,518:INFO:_display_container: 6
2024-04-14 19:31:39,519:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best')
2024-04-14 19:31:39,519:INFO:create_model() successfully completed......................................
2024-04-14 19:31:39,674:INFO:SubProcess create_model() end ==================================
2024-04-14 19:31:39,675:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best') result for F1 is 0.5432
2024-04-14 19:31:39,675:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=2, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best') result for F1 is 0.4609
2024-04-14 19:31:39,676:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best') is best model
2024-04-14 19:31:39,676:INFO:choose_better completed
2024-04-14 19:31:39,676:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 19:31:39,689:INFO:_master_model_container: 4
2024-04-14 19:31:39,689:INFO:_display_container: 5
2024-04-14 19:31:39,690:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best')
2024-04-14 19:31:39,690:INFO:tune_model() successfully completed......................................
2024-04-14 19:31:39,854:INFO:Initializing predict_model()
2024-04-14 19:31:39,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B6E2648B0>)
2024-04-14 19:31:39,854:INFO:Checking exceptions
2024-04-14 19:31:39,855:INFO:Preloading libraries
2024-04-14 19:31:40,173:INFO:Initializing finalize_model()
2024-04-14 19:31:40,173:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 19:31:40,173:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best')
2024-04-14 19:31:40,178:INFO:Initializing create_model()
2024-04-14 19:31:40,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:31:40,178:INFO:Checking exceptions
2024-04-14 19:31:40,180:INFO:Importing libraries
2024-04-14 19:31:40,180:INFO:Copying training dataset
2024-04-14 19:31:40,180:INFO:Defining folds
2024-04-14 19:31:40,180:INFO:Declaring metric variables
2024-04-14 19:31:40,181:INFO:Importing untrained model
2024-04-14 19:31:40,181:INFO:Declaring custom model
2024-04-14 19:31:40,181:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:31:40,182:INFO:Cross validation set to False
2024-04-14 19:31:40,182:INFO:Fitting Model
2024-04-14 19:31:40,280:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=682,
                                        splitter='best'))],
         verbose=False)
2024-04-14 19:31:40,280:INFO:create_model() successfully completed......................................
2024-04-14 19:31:40,437:INFO:_master_model_container: 4
2024-04-14 19:31:40,437:INFO:_display_container: 6
2024-04-14 19:31:40,446:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=682,
                                        splitter='best'))],
         verbose=False)
2024-04-14 19:31:40,446:INFO:finalize_model() successfully completed......................................
2024-04-14 19:31:40,617:INFO:Initializing save_model()
2024-04-14 19:31:40,617:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=682,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 19:31:40,617:INFO:Adding model into prep_pipe
2024-04-14 19:31:40,617:WARNING:Only Model saved as it was a pipeline.
2024-04-14 19:31:40,624:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 19:31:40,632:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=682,
                                        splitter='best'))],
         verbose=False)
2024-04-14 19:31:40,633:INFO:save_model() successfully completed......................................
2024-04-14 19:31:40,790:INFO:Initializing load_model()
2024-04-14 19:31:40,790:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 19:31:45,507:INFO:Initializing predict_model()
2024-04-14 19:31:45,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=682, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B3C024CA0>)
2024-04-14 19:31:45,507:INFO:Checking exceptions
2024-04-14 19:31:45,507:INFO:Preloading libraries
2024-04-14 19:31:45,795:INFO:Initializing predict_model()
2024-04-14 19:31:45,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B368E8D60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=682, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B39E2A0E0>)
2024-04-14 19:31:45,795:INFO:Checking exceptions
2024-04-14 19:31:45,795:INFO:Preloading libraries
2024-04-14 19:58:29,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 19:58:29,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 19:58:29,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 19:58:29,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 19:58:31,868:INFO:PyCaret ClassificationExperiment
2024-04-14 19:58:31,868:INFO:Logging name: clf-default-name
2024-04-14 19:58:31,868:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 19:58:31,868:INFO:version 3.3.0
2024-04-14 19:58:31,868:INFO:Initializing setup()
2024-04-14 19:58:31,868:INFO:self.USI: 6edb
2024-04-14 19:58:31,868:INFO:self._variable_keys: {'html_param', 'gpu_n_jobs_param', 'fold_groups_param', 'gpu_param', 'data', 'is_multiclass', 'fold_generator', 'exp_id', 'idx', 'fold_shuffle_param', '_available_plots', 'n_jobs_param', 'pipeline', 'USI', 'X', 'X_train', 'y_train', 'exp_name_log', 'logging_param', 'y_test', 'target_param', 'y', 'fix_imbalance', 'log_plots_param', 'X_test', 'memory', 'seed', '_ml_usecase'}
2024-04-14 19:58:31,868:INFO:Checking environment
2024-04-14 19:58:31,868:INFO:python_version: 3.10.14
2024-04-14 19:58:31,868:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 19:58:31,868:INFO:machine: AMD64
2024-04-14 19:58:31,868:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 19:58:31,873:INFO:Memory: svmem(total=17131573248, available=5306904576, percent=69.0, used=11824668672, free=5306904576)
2024-04-14 19:58:31,874:INFO:Physical Core: 8
2024-04-14 19:58:31,874:INFO:Logical Core: 16
2024-04-14 19:58:31,874:INFO:Checking libraries
2024-04-14 19:58:31,874:INFO:System:
2024-04-14 19:58:31,874:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 19:58:31,874:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 19:58:31,874:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 19:58:31,874:INFO:PyCaret required dependencies:
2024-04-14 19:58:31,909:INFO:                 pip: 23.3.1
2024-04-14 19:58:31,909:INFO:          setuptools: 68.2.2
2024-04-14 19:58:31,909:INFO:             pycaret: 3.3.0
2024-04-14 19:58:31,909:INFO:             IPython: 8.23.0
2024-04-14 19:58:31,909:INFO:          ipywidgets: 8.1.2
2024-04-14 19:58:31,910:INFO:                tqdm: 4.66.2
2024-04-14 19:58:31,910:INFO:               numpy: 1.26.4
2024-04-14 19:58:31,910:INFO:              pandas: 2.1.4
2024-04-14 19:58:31,910:INFO:              jinja2: 3.1.3
2024-04-14 19:58:31,910:INFO:               scipy: 1.11.4
2024-04-14 19:58:31,910:INFO:              joblib: 1.3.2
2024-04-14 19:58:31,910:INFO:             sklearn: 1.4.1.post1
2024-04-14 19:58:31,910:INFO:                pyod: 1.1.3
2024-04-14 19:58:31,910:INFO:            imblearn: 0.12.2
2024-04-14 19:58:31,910:INFO:   category_encoders: 2.6.3
2024-04-14 19:58:31,910:INFO:            lightgbm: 4.3.0
2024-04-14 19:58:31,910:INFO:               numba: 0.59.1
2024-04-14 19:58:31,910:INFO:            requests: 2.31.0
2024-04-14 19:58:31,910:INFO:          matplotlib: 3.7.5
2024-04-14 19:58:31,911:INFO:          scikitplot: 0.3.7
2024-04-14 19:58:31,911:INFO:         yellowbrick: 1.5
2024-04-14 19:58:31,911:INFO:              plotly: 5.20.0
2024-04-14 19:58:31,911:INFO:    plotly-resampler: Not installed
2024-04-14 19:58:31,911:INFO:             kaleido: 0.2.1
2024-04-14 19:58:31,911:INFO:           schemdraw: 0.15
2024-04-14 19:58:31,911:INFO:         statsmodels: 0.14.1
2024-04-14 19:58:31,911:INFO:              sktime: 0.28.0
2024-04-14 19:58:31,911:INFO:               tbats: 1.1.3
2024-04-14 19:58:31,911:INFO:            pmdarima: 2.0.4
2024-04-14 19:58:31,911:INFO:              psutil: 5.9.8
2024-04-14 19:58:31,911:INFO:          markupsafe: 2.1.5
2024-04-14 19:58:31,911:INFO:             pickle5: Not installed
2024-04-14 19:58:31,911:INFO:         cloudpickle: 3.0.0
2024-04-14 19:58:31,911:INFO:         deprecation: 2.1.0
2024-04-14 19:58:31,912:INFO:              xxhash: 3.4.1
2024-04-14 19:58:31,912:INFO:           wurlitzer: 3.0.3
2024-04-14 19:58:31,912:INFO:PyCaret optional dependencies:
2024-04-14 19:58:31,939:INFO:                shap: Not installed
2024-04-14 19:58:31,939:INFO:           interpret: Not installed
2024-04-14 19:58:31,939:INFO:                umap: Not installed
2024-04-14 19:58:31,939:INFO:     ydata_profiling: Not installed
2024-04-14 19:58:31,939:INFO:  explainerdashboard: Not installed
2024-04-14 19:58:31,939:INFO:             autoviz: Not installed
2024-04-14 19:58:31,939:INFO:           fairlearn: Not installed
2024-04-14 19:58:31,939:INFO:          deepchecks: Not installed
2024-04-14 19:58:31,939:INFO:             xgboost: Not installed
2024-04-14 19:58:31,939:INFO:            catboost: Not installed
2024-04-14 19:58:31,940:INFO:              kmodes: Not installed
2024-04-14 19:58:31,940:INFO:             mlxtend: Not installed
2024-04-14 19:58:31,940:INFO:       statsforecast: Not installed
2024-04-14 19:58:31,940:INFO:        tune_sklearn: Not installed
2024-04-14 19:58:31,940:INFO:                 ray: Not installed
2024-04-14 19:58:31,940:INFO:            hyperopt: Not installed
2024-04-14 19:58:31,940:INFO:              optuna: Not installed
2024-04-14 19:58:31,940:INFO:               skopt: Not installed
2024-04-14 19:58:31,940:INFO:              mlflow: 2.11.3
2024-04-14 19:58:31,940:INFO:              gradio: Not installed
2024-04-14 19:58:31,940:INFO:             fastapi: Not installed
2024-04-14 19:58:31,940:INFO:             uvicorn: Not installed
2024-04-14 19:58:31,940:INFO:              m2cgen: Not installed
2024-04-14 19:58:31,940:INFO:           evidently: Not installed
2024-04-14 19:58:31,941:INFO:               fugue: Not installed
2024-04-14 19:58:31,941:INFO:           streamlit: 1.33.0
2024-04-14 19:58:31,941:INFO:             prophet: Not installed
2024-04-14 19:58:31,941:INFO:None
2024-04-14 19:58:31,941:INFO:Set up data.
2024-04-14 19:58:31,947:INFO:Set up folding strategy.
2024-04-14 19:58:31,948:INFO:Set up train/test split.
2024-04-14 19:58:31,948:INFO:Set up data.
2024-04-14 19:58:31,953:INFO:Set up index.
2024-04-14 19:58:31,953:INFO:Assigning column types.
2024-04-14 19:58:31,959:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 19:58:32,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:58:32,036:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:58:32,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 19:58:32,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:58:32,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,208:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 19:58:32,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:58:32,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,399:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 19:58:32,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,444:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 19:58:32,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:32,681:INFO:Preparing preprocessing pipeline...
2024-04-14 19:58:32,683:INFO:Set up simple imputation.
2024-04-14 19:58:32,683:INFO:Set up feature normalization.
2024-04-14 19:58:32,725:INFO:Finished creating preprocessing pipeline.
2024-04-14 19:58:32,734:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 19:58:32,735:INFO:Creating final display dataframe.
2024-04-14 19:58:32,875:INFO:Setup _display_container:                     Description             Value
0                    Session id              4249
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6edb
2024-04-14 19:58:33,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:33,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:33,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:33,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 19:58:33,130:INFO:setup() successfully completed in 1.27s...............
2024-04-14 19:58:33,130:INFO:Initializing compare_models()
2024-04-14 19:58:33,130:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 19:58:33,130:INFO:Checking exceptions
2024-04-14 19:58:33,136:INFO:Preparing display monitor
2024-04-14 19:58:33,166:INFO:Initializing Logistic Regression
2024-04-14 19:58:33,167:INFO:Total runtime is 1.668532689412435e-05 minutes
2024-04-14 19:58:33,171:INFO:SubProcess create_model() called ==================================
2024-04-14 19:58:33,172:INFO:Initializing create_model()
2024-04-14 19:58:33,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9FF316E60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:58:33,172:INFO:Checking exceptions
2024-04-14 19:58:33,172:INFO:Importing libraries
2024-04-14 19:58:33,172:INFO:Copying training dataset
2024-04-14 19:58:33,181:INFO:Defining folds
2024-04-14 19:58:33,182:INFO:Declaring metric variables
2024-04-14 19:58:33,186:INFO:Importing untrained model
2024-04-14 19:58:33,191:INFO:Logistic Regression Imported successfully
2024-04-14 19:58:33,198:INFO:Starting cross validation
2024-04-14 19:58:33,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:58:38,005:INFO:Calculating mean and std
2024-04-14 19:58:38,007:INFO:Creating metrics dataframe
2024-04-14 19:58:38,010:INFO:Uploading results into container
2024-04-14 19:58:38,012:INFO:Uploading model into container now
2024-04-14 19:58:38,012:INFO:_master_model_container: 1
2024-04-14 19:58:38,013:INFO:_display_container: 2
2024-04-14 19:58:38,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4249, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:58:38,014:INFO:create_model() successfully completed......................................
2024-04-14 19:58:38,160:INFO:SubProcess create_model() end ==================================
2024-04-14 19:58:38,160:INFO:Creating metrics dataframe
2024-04-14 19:58:38,169:INFO:Initializing Decision Tree Classifier
2024-04-14 19:58:38,169:INFO:Total runtime is 0.08337574005126953 minutes
2024-04-14 19:58:38,174:INFO:SubProcess create_model() called ==================================
2024-04-14 19:58:38,174:INFO:Initializing create_model()
2024-04-14 19:58:38,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9FF316E60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:58:38,174:INFO:Checking exceptions
2024-04-14 19:58:38,174:INFO:Importing libraries
2024-04-14 19:58:38,174:INFO:Copying training dataset
2024-04-14 19:58:38,184:INFO:Defining folds
2024-04-14 19:58:38,184:INFO:Declaring metric variables
2024-04-14 19:58:38,188:INFO:Importing untrained model
2024-04-14 19:58:38,193:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:58:38,201:INFO:Starting cross validation
2024-04-14 19:58:38,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:58:41,485:INFO:Calculating mean and std
2024-04-14 19:58:41,489:INFO:Creating metrics dataframe
2024-04-14 19:58:41,492:INFO:Uploading results into container
2024-04-14 19:58:41,493:INFO:Uploading model into container now
2024-04-14 19:58:41,493:INFO:_master_model_container: 2
2024-04-14 19:58:41,494:INFO:_display_container: 2
2024-04-14 19:58:41,494:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best')
2024-04-14 19:58:41,494:INFO:create_model() successfully completed......................................
2024-04-14 19:58:41,618:INFO:SubProcess create_model() end ==================================
2024-04-14 19:58:41,618:INFO:Creating metrics dataframe
2024-04-14 19:58:41,639:INFO:Initializing create_model()
2024-04-14 19:58:41,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:58:41,639:INFO:Checking exceptions
2024-04-14 19:58:41,641:INFO:Importing libraries
2024-04-14 19:58:41,641:INFO:Copying training dataset
2024-04-14 19:58:41,649:INFO:Defining folds
2024-04-14 19:58:41,649:INFO:Declaring metric variables
2024-04-14 19:58:41,650:INFO:Importing untrained model
2024-04-14 19:58:41,650:INFO:Declaring custom model
2024-04-14 19:58:41,650:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:58:41,652:INFO:Cross validation set to False
2024-04-14 19:58:41,652:INFO:Fitting Model
2024-04-14 19:58:41,728:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best')
2024-04-14 19:58:41,728:INFO:create_model() successfully completed......................................
2024-04-14 19:58:41,838:INFO:Initializing create_model()
2024-04-14 19:58:41,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4249, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:58:41,838:INFO:Checking exceptions
2024-04-14 19:58:41,840:INFO:Importing libraries
2024-04-14 19:58:41,840:INFO:Copying training dataset
2024-04-14 19:58:41,848:INFO:Defining folds
2024-04-14 19:58:41,848:INFO:Declaring metric variables
2024-04-14 19:58:41,849:INFO:Importing untrained model
2024-04-14 19:58:41,849:INFO:Declaring custom model
2024-04-14 19:58:41,849:INFO:Logistic Regression Imported successfully
2024-04-14 19:58:41,850:INFO:Cross validation set to False
2024-04-14 19:58:41,851:INFO:Fitting Model
2024-04-14 19:58:41,875:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4249, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 19:58:41,875:INFO:create_model() successfully completed......................................
2024-04-14 19:58:41,997:INFO:_master_model_container: 2
2024-04-14 19:58:41,997:INFO:_display_container: 2
2024-04-14 19:58:41,998:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4249, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 19:58:41,998:INFO:compare_models() successfully completed......................................
2024-04-14 19:58:41,999:INFO:Initializing predict_model()
2024-04-14 19:58:41,999:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4249, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FEA33400>)
2024-04-14 19:58:41,999:INFO:Checking exceptions
2024-04-14 19:58:41,999:INFO:Preloading libraries
2024-04-14 19:58:43,413:INFO:Initializing predict_model()
2024-04-14 19:58:43,413:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FF872B00>)
2024-04-14 19:58:43,413:INFO:Checking exceptions
2024-04-14 19:58:43,414:INFO:Preloading libraries
2024-04-14 19:58:44,289:INFO:Initializing tune_model()
2024-04-14 19:58:44,289:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>)
2024-04-14 19:58:44,289:INFO:Checking exceptions
2024-04-14 19:58:44,308:INFO:Copying training dataset
2024-04-14 19:58:44,315:INFO:Checking base model
2024-04-14 19:58:44,315:INFO:Base model : Decision Tree Classifier
2024-04-14 19:58:44,320:INFO:Declaring metric variables
2024-04-14 19:58:44,324:INFO:Defining Hyperparameters
2024-04-14 19:58:44,444:INFO:Tuning with n_jobs=-1
2024-04-14 19:58:44,444:INFO:Initializing RandomizedSearchCV
2024-04-14 19:58:44,693:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'entropy'}
2024-04-14 19:58:44,693:INFO:Hyperparameter search completed
2024-04-14 19:58:44,693:INFO:SubProcess create_model() called ==================================
2024-04-14 19:58:44,694:INFO:Initializing create_model()
2024-04-14 19:58:44,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9FF3D2E30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'entropy'})
2024-04-14 19:58:44,694:INFO:Checking exceptions
2024-04-14 19:58:44,694:INFO:Importing libraries
2024-04-14 19:58:44,694:INFO:Copying training dataset
2024-04-14 19:58:44,702:INFO:Defining folds
2024-04-14 19:58:44,703:INFO:Declaring metric variables
2024-04-14 19:58:44,707:INFO:Importing untrained model
2024-04-14 19:58:44,707:INFO:Declaring custom model
2024-04-14 19:58:44,712:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:58:44,720:INFO:Starting cross validation
2024-04-14 19:58:44,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:58:44,851:INFO:Calculating mean and std
2024-04-14 19:58:44,852:INFO:Creating metrics dataframe
2024-04-14 19:58:44,858:INFO:Finalizing model
2024-04-14 19:58:44,885:INFO:Uploading results into container
2024-04-14 19:58:44,886:INFO:Uploading model into container now
2024-04-14 19:58:44,886:INFO:_master_model_container: 3
2024-04-14 19:58:44,887:INFO:_display_container: 5
2024-04-14 19:58:44,887:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=8, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=6,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best')
2024-04-14 19:58:44,887:INFO:create_model() successfully completed......................................
2024-04-14 19:58:44,994:INFO:SubProcess create_model() end ==================================
2024-04-14 19:58:44,994:INFO:choose_better activated
2024-04-14 19:58:44,998:INFO:SubProcess create_model() called ==================================
2024-04-14 19:58:44,999:INFO:Initializing create_model()
2024-04-14 19:58:44,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:58:44,999:INFO:Checking exceptions
2024-04-14 19:58:45,001:INFO:Importing libraries
2024-04-14 19:58:45,001:INFO:Copying training dataset
2024-04-14 19:58:45,009:INFO:Defining folds
2024-04-14 19:58:45,009:INFO:Declaring metric variables
2024-04-14 19:58:45,010:INFO:Importing untrained model
2024-04-14 19:58:45,010:INFO:Declaring custom model
2024-04-14 19:58:45,010:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:58:45,011:INFO:Starting cross validation
2024-04-14 19:58:45,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 19:58:45,184:INFO:Calculating mean and std
2024-04-14 19:58:45,185:INFO:Creating metrics dataframe
2024-04-14 19:58:45,187:INFO:Finalizing model
2024-04-14 19:58:45,262:INFO:Uploading results into container
2024-04-14 19:58:45,263:INFO:Uploading model into container now
2024-04-14 19:58:45,263:INFO:_master_model_container: 4
2024-04-14 19:58:45,264:INFO:_display_container: 6
2024-04-14 19:58:45,264:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best')
2024-04-14 19:58:45,264:INFO:create_model() successfully completed......................................
2024-04-14 19:58:45,369:INFO:SubProcess create_model() end ==================================
2024-04-14 19:58:45,370:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best') result for F1 is 0.536
2024-04-14 19:58:45,370:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=8, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=6,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best') result for F1 is 0.4531
2024-04-14 19:58:45,371:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best') is best model
2024-04-14 19:58:45,371:INFO:choose_better completed
2024-04-14 19:58:45,371:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 19:58:45,384:INFO:_master_model_container: 4
2024-04-14 19:58:45,384:INFO:_display_container: 5
2024-04-14 19:58:45,385:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best')
2024-04-14 19:58:45,385:INFO:tune_model() successfully completed......................................
2024-04-14 19:58:45,493:INFO:Initializing predict_model()
2024-04-14 19:58:45,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FF4F8160>)
2024-04-14 19:58:45,493:INFO:Checking exceptions
2024-04-14 19:58:45,493:INFO:Preloading libraries
2024-04-14 19:58:45,760:INFO:Initializing finalize_model()
2024-04-14 19:58:45,760:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 19:58:45,761:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best')
2024-04-14 19:58:45,766:INFO:Initializing create_model()
2024-04-14 19:58:45,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 19:58:45,766:INFO:Checking exceptions
2024-04-14 19:58:45,767:INFO:Importing libraries
2024-04-14 19:58:45,768:INFO:Copying training dataset
2024-04-14 19:58:45,768:INFO:Defining folds
2024-04-14 19:58:45,768:INFO:Declaring metric variables
2024-04-14 19:58:45,768:INFO:Importing untrained model
2024-04-14 19:58:45,768:INFO:Declaring custom model
2024-04-14 19:58:45,769:INFO:Decision Tree Classifier Imported successfully
2024-04-14 19:58:45,770:INFO:Cross validation set to False
2024-04-14 19:58:45,770:INFO:Fitting Model
2024-04-14 19:58:45,868:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4249,
                                        splitter='best'))],
         verbose=False)
2024-04-14 19:58:45,868:INFO:create_model() successfully completed......................................
2024-04-14 19:58:45,973:INFO:_master_model_container: 4
2024-04-14 19:58:45,973:INFO:_display_container: 6
2024-04-14 19:58:45,981:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4249,
                                        splitter='best'))],
         verbose=False)
2024-04-14 19:58:45,981:INFO:finalize_model() successfully completed......................................
2024-04-14 19:58:46,100:INFO:Initializing save_model()
2024-04-14 19:58:46,100:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4249,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 19:58:46,100:INFO:Adding model into prep_pipe
2024-04-14 19:58:46,100:WARNING:Only Model saved as it was a pipeline.
2024-04-14 19:58:46,107:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 19:58:46,115:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4249,
                                        splitter='best'))],
         verbose=False)
2024-04-14 19:58:46,115:INFO:save_model() successfully completed......................................
2024-04-14 19:58:46,220:INFO:Initializing load_model()
2024-04-14 19:58:46,220:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 19:58:53,419:INFO:Initializing predict_model()
2024-04-14 19:58:53,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4249, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FE673EB0>)
2024-04-14 19:58:53,420:INFO:Checking exceptions
2024-04-14 19:58:53,420:INFO:Preloading libraries
2024-04-14 19:58:53,687:INFO:Initializing predict_model()
2024-04-14 19:58:53,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FC612DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4249, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E983B5D2D0>)
2024-04-14 19:58:53,688:INFO:Checking exceptions
2024-04-14 19:58:53,688:INFO:Preloading libraries
2024-04-14 21:26:24,508:INFO:PyCaret ClassificationExperiment
2024-04-14 21:26:24,508:INFO:Logging name: clf-default-name
2024-04-14 21:26:24,508:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 21:26:24,508:INFO:version 3.3.0
2024-04-14 21:26:24,508:INFO:Initializing setup()
2024-04-14 21:26:24,508:INFO:self.USI: 5e0b
2024-04-14 21:26:24,508:INFO:self._variable_keys: {'html_param', 'gpu_n_jobs_param', 'fold_groups_param', 'gpu_param', 'data', 'is_multiclass', 'fold_generator', 'exp_id', 'idx', 'fold_shuffle_param', '_available_plots', 'n_jobs_param', 'pipeline', 'USI', 'X', 'X_train', 'y_train', 'exp_name_log', 'logging_param', 'y_test', 'target_param', 'y', 'fix_imbalance', 'log_plots_param', 'X_test', 'memory', 'seed', '_ml_usecase'}
2024-04-14 21:26:24,508:INFO:Checking environment
2024-04-14 21:26:24,509:INFO:python_version: 3.10.14
2024-04-14 21:26:24,509:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-14 21:26:24,509:INFO:machine: AMD64
2024-04-14 21:26:24,509:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-14 21:26:24,514:INFO:Memory: svmem(total=17131573248, available=4175802368, percent=75.6, used=12955770880, free=4175802368)
2024-04-14 21:26:24,514:INFO:Physical Core: 8
2024-04-14 21:26:24,514:INFO:Logical Core: 16
2024-04-14 21:26:24,515:INFO:Checking libraries
2024-04-14 21:26:24,515:INFO:System:
2024-04-14 21:26:24,515:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-14 21:26:24,515:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-14 21:26:24,515:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-14 21:26:24,515:INFO:PyCaret required dependencies:
2024-04-14 21:26:24,516:INFO:                 pip: 23.3.1
2024-04-14 21:26:24,516:INFO:          setuptools: 68.2.2
2024-04-14 21:26:24,516:INFO:             pycaret: 3.3.0
2024-04-14 21:26:24,517:INFO:             IPython: 8.23.0
2024-04-14 21:26:24,517:INFO:          ipywidgets: 8.1.2
2024-04-14 21:26:24,517:INFO:                tqdm: 4.66.2
2024-04-14 21:26:24,517:INFO:               numpy: 1.26.4
2024-04-14 21:26:24,517:INFO:              pandas: 2.1.4
2024-04-14 21:26:24,517:INFO:              jinja2: 3.1.3
2024-04-14 21:26:24,517:INFO:               scipy: 1.11.4
2024-04-14 21:26:24,517:INFO:              joblib: 1.3.2
2024-04-14 21:26:24,517:INFO:             sklearn: 1.4.1.post1
2024-04-14 21:26:24,517:INFO:                pyod: 1.1.3
2024-04-14 21:26:24,517:INFO:            imblearn: 0.12.2
2024-04-14 21:26:24,517:INFO:   category_encoders: 2.6.3
2024-04-14 21:26:24,517:INFO:            lightgbm: 4.3.0
2024-04-14 21:26:24,517:INFO:               numba: 0.59.1
2024-04-14 21:26:24,517:INFO:            requests: 2.31.0
2024-04-14 21:26:24,518:INFO:          matplotlib: 3.7.5
2024-04-14 21:26:24,518:INFO:          scikitplot: 0.3.7
2024-04-14 21:26:24,518:INFO:         yellowbrick: 1.5
2024-04-14 21:26:24,518:INFO:              plotly: 5.20.0
2024-04-14 21:26:24,518:INFO:    plotly-resampler: Not installed
2024-04-14 21:26:24,518:INFO:             kaleido: 0.2.1
2024-04-14 21:26:24,518:INFO:           schemdraw: 0.15
2024-04-14 21:26:24,518:INFO:         statsmodels: 0.14.1
2024-04-14 21:26:24,518:INFO:              sktime: 0.28.0
2024-04-14 21:26:24,518:INFO:               tbats: 1.1.3
2024-04-14 21:26:24,518:INFO:            pmdarima: 2.0.4
2024-04-14 21:26:24,518:INFO:              psutil: 5.9.8
2024-04-14 21:26:24,518:INFO:          markupsafe: 2.1.5
2024-04-14 21:26:24,518:INFO:             pickle5: Not installed
2024-04-14 21:26:24,519:INFO:         cloudpickle: 3.0.0
2024-04-14 21:26:24,519:INFO:         deprecation: 2.1.0
2024-04-14 21:26:24,519:INFO:              xxhash: 3.4.1
2024-04-14 21:26:24,519:INFO:           wurlitzer: 3.0.3
2024-04-14 21:26:24,519:INFO:PyCaret optional dependencies:
2024-04-14 21:26:24,519:INFO:                shap: Not installed
2024-04-14 21:26:24,519:INFO:           interpret: Not installed
2024-04-14 21:26:24,519:INFO:                umap: Not installed
2024-04-14 21:26:24,519:INFO:     ydata_profiling: Not installed
2024-04-14 21:26:24,519:INFO:  explainerdashboard: Not installed
2024-04-14 21:26:24,519:INFO:             autoviz: Not installed
2024-04-14 21:26:24,519:INFO:           fairlearn: Not installed
2024-04-14 21:26:24,520:INFO:          deepchecks: Not installed
2024-04-14 21:26:24,520:INFO:             xgboost: Not installed
2024-04-14 21:26:24,520:INFO:            catboost: Not installed
2024-04-14 21:26:24,520:INFO:              kmodes: Not installed
2024-04-14 21:26:24,520:INFO:             mlxtend: Not installed
2024-04-14 21:26:24,520:INFO:       statsforecast: Not installed
2024-04-14 21:26:24,520:INFO:        tune_sklearn: Not installed
2024-04-14 21:26:24,520:INFO:                 ray: Not installed
2024-04-14 21:26:24,520:INFO:            hyperopt: Not installed
2024-04-14 21:26:24,520:INFO:              optuna: Not installed
2024-04-14 21:26:24,520:INFO:               skopt: Not installed
2024-04-14 21:26:24,520:INFO:              mlflow: 2.11.3
2024-04-14 21:26:24,520:INFO:              gradio: Not installed
2024-04-14 21:26:24,520:INFO:             fastapi: Not installed
2024-04-14 21:26:24,521:INFO:             uvicorn: Not installed
2024-04-14 21:26:24,521:INFO:              m2cgen: Not installed
2024-04-14 21:26:24,521:INFO:           evidently: Not installed
2024-04-14 21:26:24,521:INFO:               fugue: Not installed
2024-04-14 21:26:24,521:INFO:           streamlit: 1.33.0
2024-04-14 21:26:24,521:INFO:             prophet: Not installed
2024-04-14 21:26:24,521:INFO:None
2024-04-14 21:26:24,521:INFO:Set up data.
2024-04-14 21:26:24,532:INFO:Set up folding strategy.
2024-04-14 21:26:24,533:INFO:Set up train/test split.
2024-04-14 21:26:24,533:INFO:Set up data.
2024-04-14 21:26:24,538:INFO:Set up index.
2024-04-14 21:26:24,539:INFO:Assigning column types.
2024-04-14 21:26:24,545:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 21:26:24,617:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 21:26:24,620:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 21:26:24,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:24,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:24,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 21:26:24,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 21:26:24,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:24,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:24,787:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 21:26:24,859:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 21:26:24,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:24,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:24,980:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 21:26:25,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,025:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 21:26:25,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,263:INFO:Preparing preprocessing pipeline...
2024-04-14 21:26:25,265:INFO:Set up simple imputation.
2024-04-14 21:26:25,265:INFO:Set up feature normalization.
2024-04-14 21:26:25,313:INFO:Finished creating preprocessing pipeline.
2024-04-14 21:26:25,320:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 21:26:25,321:INFO:Creating final display dataframe.
2024-04-14 21:26:25,458:INFO:Setup _display_container:                     Description             Value
0                    Session id              3744
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5e0b
2024-04-14 21:26:25,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 21:26:25,708:INFO:setup() successfully completed in 1.21s...............
2024-04-14 21:26:25,711:INFO:Initializing compare_models()
2024-04-14 21:26:25,711:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 21:26:25,711:INFO:Checking exceptions
2024-04-14 21:26:25,717:INFO:Preparing display monitor
2024-04-14 21:26:25,746:INFO:Initializing Logistic Regression
2024-04-14 21:26:25,746:INFO:Total runtime is 0.0 minutes
2024-04-14 21:26:25,750:INFO:SubProcess create_model() called ==================================
2024-04-14 21:26:25,751:INFO:Initializing create_model()
2024-04-14 21:26:25,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9FE9D3190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 21:26:25,751:INFO:Checking exceptions
2024-04-14 21:26:25,751:INFO:Importing libraries
2024-04-14 21:26:25,751:INFO:Copying training dataset
2024-04-14 21:26:25,762:INFO:Defining folds
2024-04-14 21:26:25,762:INFO:Declaring metric variables
2024-04-14 21:26:25,766:INFO:Importing untrained model
2024-04-14 21:26:25,770:INFO:Logistic Regression Imported successfully
2024-04-14 21:26:25,779:INFO:Starting cross validation
2024-04-14 21:26:25,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 21:26:31,252:INFO:Calculating mean and std
2024-04-14 21:26:31,256:INFO:Creating metrics dataframe
2024-04-14 21:26:31,262:INFO:Uploading results into container
2024-04-14 21:26:31,263:INFO:Uploading model into container now
2024-04-14 21:26:31,264:INFO:_master_model_container: 1
2024-04-14 21:26:31,264:INFO:_display_container: 2
2024-04-14 21:26:31,265:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 21:26:31,265:INFO:create_model() successfully completed......................................
2024-04-14 21:26:31,760:INFO:SubProcess create_model() end ==================================
2024-04-14 21:26:31,761:INFO:Creating metrics dataframe
2024-04-14 21:26:31,770:INFO:Initializing Decision Tree Classifier
2024-04-14 21:26:31,770:INFO:Total runtime is 0.100407874584198 minutes
2024-04-14 21:26:31,774:INFO:SubProcess create_model() called ==================================
2024-04-14 21:26:31,774:INFO:Initializing create_model()
2024-04-14 21:26:31,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9FE9D3190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 21:26:31,775:INFO:Checking exceptions
2024-04-14 21:26:31,775:INFO:Importing libraries
2024-04-14 21:26:31,775:INFO:Copying training dataset
2024-04-14 21:26:31,784:INFO:Defining folds
2024-04-14 21:26:31,784:INFO:Declaring metric variables
2024-04-14 21:26:31,788:INFO:Importing untrained model
2024-04-14 21:26:31,793:INFO:Decision Tree Classifier Imported successfully
2024-04-14 21:26:31,801:INFO:Starting cross validation
2024-04-14 21:26:31,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 21:26:35,068:INFO:Calculating mean and std
2024-04-14 21:26:35,071:INFO:Creating metrics dataframe
2024-04-14 21:26:35,074:INFO:Uploading results into container
2024-04-14 21:26:35,075:INFO:Uploading model into container now
2024-04-14 21:26:35,076:INFO:_master_model_container: 2
2024-04-14 21:26:35,077:INFO:_display_container: 2
2024-04-14 21:26:35,077:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best')
2024-04-14 21:26:35,077:INFO:create_model() successfully completed......................................
2024-04-14 21:26:35,240:INFO:SubProcess create_model() end ==================================
2024-04-14 21:26:35,240:INFO:Creating metrics dataframe
2024-04-14 21:26:35,260:INFO:Initializing create_model()
2024-04-14 21:26:35,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 21:26:35,261:INFO:Checking exceptions
2024-04-14 21:26:35,262:INFO:Importing libraries
2024-04-14 21:26:35,263:INFO:Copying training dataset
2024-04-14 21:26:35,271:INFO:Defining folds
2024-04-14 21:26:35,271:INFO:Declaring metric variables
2024-04-14 21:26:35,271:INFO:Importing untrained model
2024-04-14 21:26:35,271:INFO:Declaring custom model
2024-04-14 21:26:35,272:INFO:Decision Tree Classifier Imported successfully
2024-04-14 21:26:35,273:INFO:Cross validation set to False
2024-04-14 21:26:35,273:INFO:Fitting Model
2024-04-14 21:26:35,349:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best')
2024-04-14 21:26:35,349:INFO:create_model() successfully completed......................................
2024-04-14 21:26:35,493:INFO:Initializing create_model()
2024-04-14 21:26:35,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 21:26:35,494:INFO:Checking exceptions
2024-04-14 21:26:35,496:INFO:Importing libraries
2024-04-14 21:26:35,496:INFO:Copying training dataset
2024-04-14 21:26:35,504:INFO:Defining folds
2024-04-14 21:26:35,504:INFO:Declaring metric variables
2024-04-14 21:26:35,504:INFO:Importing untrained model
2024-04-14 21:26:35,504:INFO:Declaring custom model
2024-04-14 21:26:35,505:INFO:Logistic Regression Imported successfully
2024-04-14 21:26:35,506:INFO:Cross validation set to False
2024-04-14 21:26:35,506:INFO:Fitting Model
2024-04-14 21:26:35,530:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 21:26:35,530:INFO:create_model() successfully completed......................................
2024-04-14 21:26:35,686:INFO:_master_model_container: 2
2024-04-14 21:26:35,686:INFO:_display_container: 2
2024-04-14 21:26:35,687:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 21:26:35,687:INFO:compare_models() successfully completed......................................
2024-04-14 21:26:35,688:INFO:Initializing predict_model()
2024-04-14 21:26:35,688:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FE751F30>)
2024-04-14 21:26:35,688:INFO:Checking exceptions
2024-04-14 21:26:35,689:INFO:Preloading libraries
2024-04-14 21:26:36,794:INFO:Initializing predict_model()
2024-04-14 21:26:36,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FF319360>)
2024-04-14 21:26:36,794:INFO:Checking exceptions
2024-04-14 21:26:36,794:INFO:Preloading libraries
2024-04-14 21:26:37,612:INFO:Initializing tune_model()
2024-04-14 21:26:37,613:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>)
2024-04-14 21:26:37,613:INFO:Checking exceptions
2024-04-14 21:26:37,632:INFO:Copying training dataset
2024-04-14 21:26:37,642:INFO:Checking base model
2024-04-14 21:26:37,642:INFO:Base model : Decision Tree Classifier
2024-04-14 21:26:37,647:INFO:Declaring metric variables
2024-04-14 21:26:37,652:INFO:Defining Hyperparameters
2024-04-14 21:26:37,796:INFO:Tuning with n_jobs=-1
2024-04-14 21:26:37,796:INFO:Initializing RandomizedSearchCV
2024-04-14 21:26:38,052:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini'}
2024-04-14 21:26:38,052:INFO:Hyperparameter search completed
2024-04-14 21:26:38,052:INFO:SubProcess create_model() called ==================================
2024-04-14 21:26:38,053:INFO:Initializing create_model()
2024-04-14 21:26:38,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E983B31E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.002, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini'})
2024-04-14 21:26:38,053:INFO:Checking exceptions
2024-04-14 21:26:38,053:INFO:Importing libraries
2024-04-14 21:26:38,053:INFO:Copying training dataset
2024-04-14 21:26:38,061:INFO:Defining folds
2024-04-14 21:26:38,061:INFO:Declaring metric variables
2024-04-14 21:26:38,066:INFO:Importing untrained model
2024-04-14 21:26:38,066:INFO:Declaring custom model
2024-04-14 21:26:38,071:INFO:Decision Tree Classifier Imported successfully
2024-04-14 21:26:38,078:INFO:Starting cross validation
2024-04-14 21:26:38,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 21:26:38,211:INFO:Calculating mean and std
2024-04-14 21:26:38,212:INFO:Creating metrics dataframe
2024-04-14 21:26:38,218:INFO:Finalizing model
2024-04-14 21:26:38,240:INFO:Uploading results into container
2024-04-14 21:26:38,241:INFO:Uploading model into container now
2024-04-14 21:26:38,242:INFO:_master_model_container: 3
2024-04-14 21:26:38,242:INFO:_display_container: 5
2024-04-14 21:26:38,242:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best')
2024-04-14 21:26:38,243:INFO:create_model() successfully completed......................................
2024-04-14 21:26:38,384:INFO:SubProcess create_model() end ==================================
2024-04-14 21:26:38,384:INFO:choose_better activated
2024-04-14 21:26:38,388:INFO:SubProcess create_model() called ==================================
2024-04-14 21:26:38,389:INFO:Initializing create_model()
2024-04-14 21:26:38,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 21:26:38,389:INFO:Checking exceptions
2024-04-14 21:26:38,391:INFO:Importing libraries
2024-04-14 21:26:38,391:INFO:Copying training dataset
2024-04-14 21:26:38,399:INFO:Defining folds
2024-04-14 21:26:38,399:INFO:Declaring metric variables
2024-04-14 21:26:38,400:INFO:Importing untrained model
2024-04-14 21:26:38,400:INFO:Declaring custom model
2024-04-14 21:26:38,400:INFO:Decision Tree Classifier Imported successfully
2024-04-14 21:26:38,401:INFO:Starting cross validation
2024-04-14 21:26:38,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 21:26:38,595:INFO:Calculating mean and std
2024-04-14 21:26:38,596:INFO:Creating metrics dataframe
2024-04-14 21:26:38,598:INFO:Finalizing model
2024-04-14 21:26:38,673:INFO:Uploading results into container
2024-04-14 21:26:38,674:INFO:Uploading model into container now
2024-04-14 21:26:38,675:INFO:_master_model_container: 4
2024-04-14 21:26:38,675:INFO:_display_container: 6
2024-04-14 21:26:38,675:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best')
2024-04-14 21:26:38,675:INFO:create_model() successfully completed......................................
2024-04-14 21:26:38,820:INFO:SubProcess create_model() end ==================================
2024-04-14 21:26:38,821:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best') result for F1 is 0.5465
2024-04-14 21:26:38,821:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best') result for F1 is 0.5102
2024-04-14 21:26:38,822:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best') is best model
2024-04-14 21:26:38,822:INFO:choose_better completed
2024-04-14 21:26:38,822:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-14 21:26:38,836:INFO:_master_model_container: 4
2024-04-14 21:26:38,836:INFO:_display_container: 5
2024-04-14 21:26:38,836:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best')
2024-04-14 21:26:38,836:INFO:tune_model() successfully completed......................................
2024-04-14 21:26:38,981:INFO:Initializing predict_model()
2024-04-14 21:26:38,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E98389BEB0>)
2024-04-14 21:26:38,981:INFO:Checking exceptions
2024-04-14 21:26:38,981:INFO:Preloading libraries
2024-04-14 21:26:39,284:INFO:Initializing finalize_model()
2024-04-14 21:26:39,284:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-14 21:26:39,285:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best')
2024-04-14 21:26:39,289:INFO:Initializing create_model()
2024-04-14 21:26:39,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 21:26:39,290:INFO:Checking exceptions
2024-04-14 21:26:39,291:INFO:Importing libraries
2024-04-14 21:26:39,292:INFO:Copying training dataset
2024-04-14 21:26:39,292:INFO:Defining folds
2024-04-14 21:26:39,292:INFO:Declaring metric variables
2024-04-14 21:26:39,292:INFO:Importing untrained model
2024-04-14 21:26:39,292:INFO:Declaring custom model
2024-04-14 21:26:39,293:INFO:Decision Tree Classifier Imported successfully
2024-04-14 21:26:39,294:INFO:Cross validation set to False
2024-04-14 21:26:39,294:INFO:Fitting Model
2024-04-14 21:26:39,390:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3744,
                                        splitter='best'))],
         verbose=False)
2024-04-14 21:26:39,390:INFO:create_model() successfully completed......................................
2024-04-14 21:26:39,534:INFO:_master_model_container: 4
2024-04-14 21:26:39,534:INFO:_display_container: 6
2024-04-14 21:26:39,542:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3744,
                                        splitter='best'))],
         verbose=False)
2024-04-14 21:26:39,543:INFO:finalize_model() successfully completed......................................
2024-04-14 21:26:39,701:INFO:Initializing save_model()
2024-04-14 21:26:39,701:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3744,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 21:26:39,701:INFO:Adding model into prep_pipe
2024-04-14 21:26:39,701:WARNING:Only Model saved as it was a pipeline.
2024-04-14 21:26:39,708:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-14 21:26:39,717:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3744,
                                        splitter='best'))],
         verbose=False)
2024-04-14 21:26:39,717:INFO:save_model() successfully completed......................................
2024-04-14 21:26:39,860:INFO:Initializing load_model()
2024-04-14 21:26:39,860:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-14 21:26:45,235:INFO:Initializing predict_model()
2024-04-14 21:26:45,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E98389BD00>)
2024-04-14 21:26:45,235:INFO:Checking exceptions
2024-04-14 21:26:45,235:INFO:Preloading libraries
2024-04-14 21:26:45,515:INFO:Initializing predict_model()
2024-04-14 21:26:45,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9FF69ED40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3744, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9860123B0>)
2024-04-14 21:26:45,516:INFO:Checking exceptions
2024-04-14 21:26:45,516:INFO:Preloading libraries
2024-04-15 14:58:39,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 14:58:39,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 14:58:39,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 14:58:39,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 14:58:41,781:INFO:PyCaret ClassificationExperiment
2024-04-15 14:58:41,781:INFO:Logging name: clf-default-name
2024-04-15 14:58:41,781:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-15 14:58:41,781:INFO:version 3.3.0
2024-04-15 14:58:41,781:INFO:Initializing setup()
2024-04-15 14:58:41,781:INFO:self.USI: 3cb3
2024-04-15 14:58:41,781:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'pipeline', 'html_param', 'memory', 'seed', 'X', 'USI', 'n_jobs_param', '_ml_usecase', '_available_plots', 'logging_param', 'fix_imbalance', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'X_test', 'data', 'y_test', 'y', 'fold_generator', 'idx', 'is_multiclass', 'gpu_n_jobs_param', 'gpu_param'}
2024-04-15 14:58:41,781:INFO:Checking environment
2024-04-15 14:58:41,781:INFO:python_version: 3.10.14
2024-04-15 14:58:41,781:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-15 14:58:41,781:INFO:machine: AMD64
2024-04-15 14:58:41,782:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-15 14:58:41,786:INFO:Memory: svmem(total=17131573248, available=8346394624, percent=51.3, used=8785178624, free=8346394624)
2024-04-15 14:58:41,786:INFO:Physical Core: 8
2024-04-15 14:58:41,786:INFO:Logical Core: 16
2024-04-15 14:58:41,786:INFO:Checking libraries
2024-04-15 14:58:41,786:INFO:System:
2024-04-15 14:58:41,786:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-15 14:58:41,786:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-15 14:58:41,786:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-15 14:58:41,786:INFO:PyCaret required dependencies:
2024-04-15 14:58:41,827:INFO:                 pip: 23.3.1
2024-04-15 14:58:41,827:INFO:          setuptools: 68.2.2
2024-04-15 14:58:41,827:INFO:             pycaret: 3.3.0
2024-04-15 14:58:41,827:INFO:             IPython: 8.23.0
2024-04-15 14:58:41,827:INFO:          ipywidgets: 8.1.2
2024-04-15 14:58:41,827:INFO:                tqdm: 4.66.2
2024-04-15 14:58:41,827:INFO:               numpy: 1.26.4
2024-04-15 14:58:41,828:INFO:              pandas: 2.1.4
2024-04-15 14:58:41,828:INFO:              jinja2: 3.1.3
2024-04-15 14:58:41,828:INFO:               scipy: 1.11.4
2024-04-15 14:58:41,828:INFO:              joblib: 1.3.2
2024-04-15 14:58:41,828:INFO:             sklearn: 1.4.1.post1
2024-04-15 14:58:41,828:INFO:                pyod: 1.1.3
2024-04-15 14:58:41,828:INFO:            imblearn: 0.12.2
2024-04-15 14:58:41,828:INFO:   category_encoders: 2.6.3
2024-04-15 14:58:41,828:INFO:            lightgbm: 4.3.0
2024-04-15 14:58:41,828:INFO:               numba: 0.59.1
2024-04-15 14:58:41,828:INFO:            requests: 2.31.0
2024-04-15 14:58:41,828:INFO:          matplotlib: 3.7.5
2024-04-15 14:58:41,828:INFO:          scikitplot: 0.3.7
2024-04-15 14:58:41,828:INFO:         yellowbrick: 1.5
2024-04-15 14:58:41,829:INFO:              plotly: 5.20.0
2024-04-15 14:58:41,829:INFO:    plotly-resampler: Not installed
2024-04-15 14:58:41,829:INFO:             kaleido: 0.2.1
2024-04-15 14:58:41,829:INFO:           schemdraw: 0.15
2024-04-15 14:58:41,829:INFO:         statsmodels: 0.14.1
2024-04-15 14:58:41,829:INFO:              sktime: 0.28.0
2024-04-15 14:58:41,829:INFO:               tbats: 1.1.3
2024-04-15 14:58:41,829:INFO:            pmdarima: 2.0.4
2024-04-15 14:58:41,829:INFO:              psutil: 5.9.8
2024-04-15 14:58:41,829:INFO:          markupsafe: 2.1.5
2024-04-15 14:58:41,829:INFO:             pickle5: Not installed
2024-04-15 14:58:41,829:INFO:         cloudpickle: 3.0.0
2024-04-15 14:58:41,829:INFO:         deprecation: 2.1.0
2024-04-15 14:58:41,829:INFO:              xxhash: 3.4.1
2024-04-15 14:58:41,829:INFO:           wurlitzer: 3.0.3
2024-04-15 14:58:41,830:INFO:PyCaret optional dependencies:
2024-04-15 14:58:41,856:INFO:                shap: Not installed
2024-04-15 14:58:41,857:INFO:           interpret: Not installed
2024-04-15 14:58:41,857:INFO:                umap: Not installed
2024-04-15 14:58:41,857:INFO:     ydata_profiling: Not installed
2024-04-15 14:58:41,857:INFO:  explainerdashboard: Not installed
2024-04-15 14:58:41,857:INFO:             autoviz: Not installed
2024-04-15 14:58:41,857:INFO:           fairlearn: Not installed
2024-04-15 14:58:41,857:INFO:          deepchecks: Not installed
2024-04-15 14:58:41,857:INFO:             xgboost: Not installed
2024-04-15 14:58:41,857:INFO:            catboost: Not installed
2024-04-15 14:58:41,857:INFO:              kmodes: Not installed
2024-04-15 14:58:41,857:INFO:             mlxtend: Not installed
2024-04-15 14:58:41,857:INFO:       statsforecast: Not installed
2024-04-15 14:58:41,857:INFO:        tune_sklearn: Not installed
2024-04-15 14:58:41,857:INFO:                 ray: Not installed
2024-04-15 14:58:41,858:INFO:            hyperopt: Not installed
2024-04-15 14:58:41,858:INFO:              optuna: Not installed
2024-04-15 14:58:41,858:INFO:               skopt: Not installed
2024-04-15 14:58:41,858:INFO:              mlflow: 2.11.3
2024-04-15 14:58:41,858:INFO:              gradio: Not installed
2024-04-15 14:58:41,858:INFO:             fastapi: Not installed
2024-04-15 14:58:41,858:INFO:             uvicorn: Not installed
2024-04-15 14:58:41,858:INFO:              m2cgen: Not installed
2024-04-15 14:58:41,858:INFO:           evidently: Not installed
2024-04-15 14:58:41,858:INFO:               fugue: Not installed
2024-04-15 14:58:41,858:INFO:           streamlit: 1.33.0
2024-04-15 14:58:41,858:INFO:             prophet: Not installed
2024-04-15 14:58:41,858:INFO:None
2024-04-15 14:58:41,858:INFO:Set up data.
2024-04-15 14:58:41,866:INFO:Set up folding strategy.
2024-04-15 14:58:41,866:INFO:Set up train/test split.
2024-04-15 14:58:41,866:INFO:Set up data.
2024-04-15 14:58:41,872:INFO:Set up index.
2024-04-15 14:58:41,872:INFO:Assigning column types.
2024-04-15 14:58:41,878:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 14:58:41,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 14:58:41,954:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 14:58:42,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 14:58:42,080:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 14:58:42,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,125:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 14:58:42,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 14:58:42,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,315:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 14:58:42,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,360:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-15 14:58:42,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,596:INFO:Preparing preprocessing pipeline...
2024-04-15 14:58:42,598:INFO:Set up simple imputation.
2024-04-15 14:58:42,598:INFO:Set up feature normalization.
2024-04-15 14:58:42,653:INFO:Finished creating preprocessing pipeline.
2024-04-15 14:58:42,662:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-15 14:58:42,662:INFO:Creating final display dataframe.
2024-04-15 14:58:42,803:INFO:Setup _display_container:                     Description             Value
0                    Session id              8847
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3cb3
2024-04-15 14:58:42,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:42,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:43,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:43,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 14:58:43,048:INFO:setup() successfully completed in 1.27s...............
2024-04-15 14:58:43,048:INFO:Initializing compare_models()
2024-04-15 14:58:43,048:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-15 14:58:43,048:INFO:Checking exceptions
2024-04-15 14:58:43,054:INFO:Preparing display monitor
2024-04-15 14:58:43,083:INFO:Initializing Logistic Regression
2024-04-15 14:58:43,083:INFO:Total runtime is 0.0 minutes
2024-04-15 14:58:43,089:INFO:SubProcess create_model() called ==================================
2024-04-15 14:58:43,089:INFO:Initializing create_model()
2024-04-15 14:58:43,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6F4722D70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 14:58:43,090:INFO:Checking exceptions
2024-04-15 14:58:43,090:INFO:Importing libraries
2024-04-15 14:58:43,090:INFO:Copying training dataset
2024-04-15 14:58:43,101:INFO:Defining folds
2024-04-15 14:58:43,101:INFO:Declaring metric variables
2024-04-15 14:58:43,105:INFO:Importing untrained model
2024-04-15 14:58:43,110:INFO:Logistic Regression Imported successfully
2024-04-15 14:58:43,118:INFO:Starting cross validation
2024-04-15 14:58:43,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 14:58:48,111:INFO:Calculating mean and std
2024-04-15 14:58:48,114:INFO:Creating metrics dataframe
2024-04-15 14:58:48,118:INFO:Uploading results into container
2024-04-15 14:58:48,118:INFO:Uploading model into container now
2024-04-15 14:58:48,119:INFO:_master_model_container: 1
2024-04-15 14:58:48,119:INFO:_display_container: 2
2024-04-15 14:58:48,120:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-15 14:58:48,120:INFO:create_model() successfully completed......................................
2024-04-15 14:58:48,237:INFO:SubProcess create_model() end ==================================
2024-04-15 14:58:48,237:INFO:Creating metrics dataframe
2024-04-15 14:58:48,245:INFO:Initializing Decision Tree Classifier
2024-04-15 14:58:48,245:INFO:Total runtime is 0.08602822621663411 minutes
2024-04-15 14:58:48,250:INFO:SubProcess create_model() called ==================================
2024-04-15 14:58:48,250:INFO:Initializing create_model()
2024-04-15 14:58:48,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6F4722D70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 14:58:48,250:INFO:Checking exceptions
2024-04-15 14:58:48,250:INFO:Importing libraries
2024-04-15 14:58:48,251:INFO:Copying training dataset
2024-04-15 14:58:48,260:INFO:Defining folds
2024-04-15 14:58:48,260:INFO:Declaring metric variables
2024-04-15 14:58:48,264:INFO:Importing untrained model
2024-04-15 14:58:48,269:INFO:Decision Tree Classifier Imported successfully
2024-04-15 14:58:48,277:INFO:Starting cross validation
2024-04-15 14:58:48,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 14:58:51,614:INFO:Calculating mean and std
2024-04-15 14:58:51,616:INFO:Creating metrics dataframe
2024-04-15 14:58:51,621:INFO:Uploading results into container
2024-04-15 14:58:51,622:INFO:Uploading model into container now
2024-04-15 14:58:51,623:INFO:_master_model_container: 2
2024-04-15 14:58:51,623:INFO:_display_container: 2
2024-04-15 14:58:51,624:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best')
2024-04-15 14:58:51,624:INFO:create_model() successfully completed......................................
2024-04-15 14:58:51,749:INFO:SubProcess create_model() end ==================================
2024-04-15 14:58:51,749:INFO:Creating metrics dataframe
2024-04-15 14:58:51,770:INFO:Initializing create_model()
2024-04-15 14:58:51,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 14:58:51,770:INFO:Checking exceptions
2024-04-15 14:58:51,772:INFO:Importing libraries
2024-04-15 14:58:51,773:INFO:Copying training dataset
2024-04-15 14:58:51,781:INFO:Defining folds
2024-04-15 14:58:51,781:INFO:Declaring metric variables
2024-04-15 14:58:51,781:INFO:Importing untrained model
2024-04-15 14:58:51,781:INFO:Declaring custom model
2024-04-15 14:58:51,782:INFO:Decision Tree Classifier Imported successfully
2024-04-15 14:58:51,783:INFO:Cross validation set to False
2024-04-15 14:58:51,783:INFO:Fitting Model
2024-04-15 14:58:51,859:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best')
2024-04-15 14:58:51,860:INFO:create_model() successfully completed......................................
2024-04-15 14:58:51,970:INFO:Initializing create_model()
2024-04-15 14:58:51,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 14:58:51,970:INFO:Checking exceptions
2024-04-15 14:58:51,972:INFO:Importing libraries
2024-04-15 14:58:51,973:INFO:Copying training dataset
2024-04-15 14:58:51,981:INFO:Defining folds
2024-04-15 14:58:51,981:INFO:Declaring metric variables
2024-04-15 14:58:51,981:INFO:Importing untrained model
2024-04-15 14:58:51,981:INFO:Declaring custom model
2024-04-15 14:58:51,982:INFO:Logistic Regression Imported successfully
2024-04-15 14:58:51,983:INFO:Cross validation set to False
2024-04-15 14:58:51,983:INFO:Fitting Model
2024-04-15 14:58:52,008:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-15 14:58:52,008:INFO:create_model() successfully completed......................................
2024-04-15 14:58:52,134:INFO:_master_model_container: 2
2024-04-15 14:58:52,134:INFO:_display_container: 2
2024-04-15 14:58:52,135:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-15 14:58:52,136:INFO:compare_models() successfully completed......................................
2024-04-15 14:58:52,136:INFO:Initializing predict_model()
2024-04-15 14:58:52,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6F3A1BF40>)
2024-04-15 14:58:52,137:INFO:Checking exceptions
2024-04-15 14:58:52,137:INFO:Preloading libraries
2024-04-15 14:58:53,390:INFO:Initializing predict_model()
2024-04-15 14:58:53,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6F469FEB0>)
2024-04-15 14:58:53,390:INFO:Checking exceptions
2024-04-15 14:58:53,390:INFO:Preloading libraries
2024-04-15 14:58:54,188:INFO:Initializing tune_model()
2024-04-15 14:58:54,188:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>)
2024-04-15 14:58:54,189:INFO:Checking exceptions
2024-04-15 14:58:54,209:INFO:Copying training dataset
2024-04-15 14:58:54,217:INFO:Checking base model
2024-04-15 14:58:54,217:INFO:Base model : Decision Tree Classifier
2024-04-15 14:58:54,222:INFO:Declaring metric variables
2024-04-15 14:58:54,226:INFO:Defining Hyperparameters
2024-04-15 14:58:54,337:INFO:Tuning with n_jobs=-1
2024-04-15 14:58:54,337:INFO:Initializing RandomizedSearchCV
2024-04-15 14:58:54,604:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'entropy'}
2024-04-15 14:58:54,604:INFO:Hyperparameter search completed
2024-04-15 14:58:54,604:INFO:SubProcess create_model() called ==================================
2024-04-15 14:58:54,605:INFO:Initializing create_model()
2024-04-15 14:58:54,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6F5ACE080>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 16, 'criterion': 'entropy'})
2024-04-15 14:58:54,605:INFO:Checking exceptions
2024-04-15 14:58:54,605:INFO:Importing libraries
2024-04-15 14:58:54,605:INFO:Copying training dataset
2024-04-15 14:58:54,614:INFO:Defining folds
2024-04-15 14:58:54,614:INFO:Declaring metric variables
2024-04-15 14:58:54,618:INFO:Importing untrained model
2024-04-15 14:58:54,619:INFO:Declaring custom model
2024-04-15 14:58:54,624:INFO:Decision Tree Classifier Imported successfully
2024-04-15 14:58:54,632:INFO:Starting cross validation
2024-04-15 14:58:54,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 14:58:54,762:INFO:Calculating mean and std
2024-04-15 14:58:54,763:INFO:Creating metrics dataframe
2024-04-15 14:58:54,769:INFO:Finalizing model
2024-04-15 14:58:54,794:INFO:Uploading results into container
2024-04-15 14:58:54,795:INFO:Uploading model into container now
2024-04-15 14:58:54,796:INFO:_master_model_container: 3
2024-04-15 14:58:54,796:INFO:_display_container: 5
2024-04-15 14:58:54,797:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best')
2024-04-15 14:58:54,797:INFO:create_model() successfully completed......................................
2024-04-15 14:58:54,910:INFO:SubProcess create_model() end ==================================
2024-04-15 14:58:54,910:INFO:choose_better activated
2024-04-15 14:58:54,915:INFO:SubProcess create_model() called ==================================
2024-04-15 14:58:54,915:INFO:Initializing create_model()
2024-04-15 14:58:54,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 14:58:54,916:INFO:Checking exceptions
2024-04-15 14:58:54,918:INFO:Importing libraries
2024-04-15 14:58:54,918:INFO:Copying training dataset
2024-04-15 14:58:54,926:INFO:Defining folds
2024-04-15 14:58:54,926:INFO:Declaring metric variables
2024-04-15 14:58:54,926:INFO:Importing untrained model
2024-04-15 14:58:54,926:INFO:Declaring custom model
2024-04-15 14:58:54,927:INFO:Decision Tree Classifier Imported successfully
2024-04-15 14:58:54,927:INFO:Starting cross validation
2024-04-15 14:58:54,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 14:58:55,130:INFO:Calculating mean and std
2024-04-15 14:58:55,131:INFO:Creating metrics dataframe
2024-04-15 14:58:55,133:INFO:Finalizing model
2024-04-15 14:58:55,209:INFO:Uploading results into container
2024-04-15 14:58:55,210:INFO:Uploading model into container now
2024-04-15 14:58:55,210:INFO:_master_model_container: 4
2024-04-15 14:58:55,210:INFO:_display_container: 6
2024-04-15 14:58:55,211:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best')
2024-04-15 14:58:55,211:INFO:create_model() successfully completed......................................
2024-04-15 14:58:55,320:INFO:SubProcess create_model() end ==================================
2024-04-15 14:58:55,321:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best') result for F1 is 0.5386
2024-04-15 14:58:55,322:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best') result for F1 is 0.4395
2024-04-15 14:58:55,322:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best') is best model
2024-04-15 14:58:55,322:INFO:choose_better completed
2024-04-15 14:58:55,323:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-15 14:58:55,336:INFO:_master_model_container: 4
2024-04-15 14:58:55,336:INFO:_display_container: 5
2024-04-15 14:58:55,337:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best')
2024-04-15 14:58:55,337:INFO:tune_model() successfully completed......................................
2024-04-15 14:58:55,447:INFO:Initializing predict_model()
2024-04-15 14:58:55,447:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6F469F2E0>)
2024-04-15 14:58:55,447:INFO:Checking exceptions
2024-04-15 14:58:55,447:INFO:Preloading libraries
2024-04-15 14:58:55,718:INFO:Initializing finalize_model()
2024-04-15 14:58:55,718:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-15 14:58:55,719:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best')
2024-04-15 14:58:55,724:INFO:Initializing create_model()
2024-04-15 14:58:55,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 14:58:55,724:INFO:Checking exceptions
2024-04-15 14:58:55,725:INFO:Importing libraries
2024-04-15 14:58:55,725:INFO:Copying training dataset
2024-04-15 14:58:55,726:INFO:Defining folds
2024-04-15 14:58:55,726:INFO:Declaring metric variables
2024-04-15 14:58:55,726:INFO:Importing untrained model
2024-04-15 14:58:55,726:INFO:Declaring custom model
2024-04-15 14:58:55,727:INFO:Decision Tree Classifier Imported successfully
2024-04-15 14:58:55,728:INFO:Cross validation set to False
2024-04-15 14:58:55,728:INFO:Fitting Model
2024-04-15 14:58:55,824:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8847,
                                        splitter='best'))],
         verbose=False)
2024-04-15 14:58:55,824:INFO:create_model() successfully completed......................................
2024-04-15 14:58:55,935:INFO:_master_model_container: 4
2024-04-15 14:58:55,935:INFO:_display_container: 6
2024-04-15 14:58:55,943:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8847,
                                        splitter='best'))],
         verbose=False)
2024-04-15 14:58:55,943:INFO:finalize_model() successfully completed......................................
2024-04-15 14:58:56,068:INFO:Initializing save_model()
2024-04-15 14:58:56,068:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8847,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-15 14:58:56,068:INFO:Adding model into prep_pipe
2024-04-15 14:58:56,068:WARNING:Only Model saved as it was a pipeline.
2024-04-15 14:58:56,075:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-15 14:58:56,083:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8847,
                                        splitter='best'))],
         verbose=False)
2024-04-15 14:58:56,083:INFO:save_model() successfully completed......................................
2024-04-15 14:58:56,201:INFO:Initializing load_model()
2024-04-15 14:58:56,201:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-15 14:59:04,119:INFO:Initializing predict_model()
2024-04-15 14:59:04,119:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6F3D17760>)
2024-04-15 14:59:04,119:INFO:Checking exceptions
2024-04-15 14:59:04,119:INFO:Preloading libraries
2024-04-15 14:59:04,398:INFO:Initializing predict_model()
2024-04-15 14:59:04,399:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6F18F2E00>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8847, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6F456B1C0>)
2024-04-15 14:59:04,399:INFO:Checking exceptions
2024-04-15 14:59:04,399:INFO:Preloading libraries
2024-04-16 00:38:47,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-16 00:38:47,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-16 00:38:47,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-16 00:38:47,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-16 00:38:49,714:INFO:PyCaret ClassificationExperiment
2024-04-16 00:38:49,714:INFO:Logging name: clf-default-name
2024-04-16 00:38:49,714:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-16 00:38:49,715:INFO:version 3.3.0
2024-04-16 00:38:49,715:INFO:Initializing setup()
2024-04-16 00:38:49,715:INFO:self.USI: a145
2024-04-16 00:38:49,715:INFO:self._variable_keys: {'exp_id', 'idx', 'y_train', 'logging_param', 'seed', 'pipeline', 'n_jobs_param', 'fold_generator', 'memory', 'fold_shuffle_param', 'data', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'USI', 'gpu_param', 'is_multiclass', 'html_param', 'target_param', 'y', 'y_test', 'fix_imbalance', '_ml_usecase', 'X', 'X_test', 'X_train', 'exp_name_log', '_available_plots'}
2024-04-16 00:38:49,715:INFO:Checking environment
2024-04-16 00:38:49,715:INFO:python_version: 3.10.14
2024-04-16 00:38:49,715:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-16 00:38:49,715:INFO:machine: AMD64
2024-04-16 00:38:49,715:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-16 00:38:49,721:INFO:Memory: svmem(total=17131573248, available=3124428800, percent=81.8, used=14007144448, free=3124428800)
2024-04-16 00:38:49,721:INFO:Physical Core: 8
2024-04-16 00:38:49,721:INFO:Logical Core: 16
2024-04-16 00:38:49,721:INFO:Checking libraries
2024-04-16 00:38:49,721:INFO:System:
2024-04-16 00:38:49,721:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-16 00:38:49,721:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-16 00:38:49,721:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-16 00:38:49,721:INFO:PyCaret required dependencies:
2024-04-16 00:38:49,755:INFO:                 pip: 23.3.1
2024-04-16 00:38:49,755:INFO:          setuptools: 68.2.2
2024-04-16 00:38:49,755:INFO:             pycaret: 3.3.0
2024-04-16 00:38:49,755:INFO:             IPython: 8.23.0
2024-04-16 00:38:49,756:INFO:          ipywidgets: 8.1.2
2024-04-16 00:38:49,756:INFO:                tqdm: 4.66.2
2024-04-16 00:38:49,756:INFO:               numpy: 1.26.4
2024-04-16 00:38:49,756:INFO:              pandas: 2.1.4
2024-04-16 00:38:49,756:INFO:              jinja2: 3.1.3
2024-04-16 00:38:49,756:INFO:               scipy: 1.11.4
2024-04-16 00:38:49,756:INFO:              joblib: 1.3.2
2024-04-16 00:38:49,756:INFO:             sklearn: 1.4.1.post1
2024-04-16 00:38:49,756:INFO:                pyod: 1.1.3
2024-04-16 00:38:49,756:INFO:            imblearn: 0.12.2
2024-04-16 00:38:49,756:INFO:   category_encoders: 2.6.3
2024-04-16 00:38:49,756:INFO:            lightgbm: 4.3.0
2024-04-16 00:38:49,756:INFO:               numba: 0.59.1
2024-04-16 00:38:49,756:INFO:            requests: 2.31.0
2024-04-16 00:38:49,757:INFO:          matplotlib: 3.7.5
2024-04-16 00:38:49,757:INFO:          scikitplot: 0.3.7
2024-04-16 00:38:49,757:INFO:         yellowbrick: 1.5
2024-04-16 00:38:49,757:INFO:              plotly: 5.20.0
2024-04-16 00:38:49,757:INFO:    plotly-resampler: Not installed
2024-04-16 00:38:49,757:INFO:             kaleido: 0.2.1
2024-04-16 00:38:49,757:INFO:           schemdraw: 0.15
2024-04-16 00:38:49,757:INFO:         statsmodels: 0.14.1
2024-04-16 00:38:49,757:INFO:              sktime: 0.28.0
2024-04-16 00:38:49,757:INFO:               tbats: 1.1.3
2024-04-16 00:38:49,757:INFO:            pmdarima: 2.0.4
2024-04-16 00:38:49,757:INFO:              psutil: 5.9.8
2024-04-16 00:38:49,757:INFO:          markupsafe: 2.1.5
2024-04-16 00:38:49,757:INFO:             pickle5: Not installed
2024-04-16 00:38:49,758:INFO:         cloudpickle: 3.0.0
2024-04-16 00:38:49,758:INFO:         deprecation: 2.1.0
2024-04-16 00:38:49,758:INFO:              xxhash: 3.4.1
2024-04-16 00:38:49,758:INFO:           wurlitzer: 3.0.3
2024-04-16 00:38:49,758:INFO:PyCaret optional dependencies:
2024-04-16 00:38:49,783:INFO:                shap: Not installed
2024-04-16 00:38:49,783:INFO:           interpret: Not installed
2024-04-16 00:38:49,783:INFO:                umap: Not installed
2024-04-16 00:38:49,783:INFO:     ydata_profiling: Not installed
2024-04-16 00:38:49,783:INFO:  explainerdashboard: Not installed
2024-04-16 00:38:49,783:INFO:             autoviz: Not installed
2024-04-16 00:38:49,783:INFO:           fairlearn: Not installed
2024-04-16 00:38:49,783:INFO:          deepchecks: Not installed
2024-04-16 00:38:49,783:INFO:             xgboost: Not installed
2024-04-16 00:38:49,783:INFO:            catboost: Not installed
2024-04-16 00:38:49,783:INFO:              kmodes: Not installed
2024-04-16 00:38:49,784:INFO:             mlxtend: Not installed
2024-04-16 00:38:49,784:INFO:       statsforecast: Not installed
2024-04-16 00:38:49,784:INFO:        tune_sklearn: Not installed
2024-04-16 00:38:49,784:INFO:                 ray: Not installed
2024-04-16 00:38:49,784:INFO:            hyperopt: Not installed
2024-04-16 00:38:49,784:INFO:              optuna: Not installed
2024-04-16 00:38:49,784:INFO:               skopt: Not installed
2024-04-16 00:38:49,784:INFO:              mlflow: 2.11.3
2024-04-16 00:38:49,784:INFO:              gradio: Not installed
2024-04-16 00:38:49,784:INFO:             fastapi: Not installed
2024-04-16 00:38:49,784:INFO:             uvicorn: Not installed
2024-04-16 00:38:49,784:INFO:              m2cgen: Not installed
2024-04-16 00:38:49,784:INFO:           evidently: Not installed
2024-04-16 00:38:49,784:INFO:               fugue: Not installed
2024-04-16 00:38:49,784:INFO:           streamlit: 1.33.0
2024-04-16 00:38:49,785:INFO:             prophet: Not installed
2024-04-16 00:38:49,785:INFO:None
2024-04-16 00:38:49,785:INFO:Set up data.
2024-04-16 00:38:49,792:INFO:Set up folding strategy.
2024-04-16 00:38:49,793:INFO:Set up train/test split.
2024-04-16 00:38:49,793:INFO:Set up data.
2024-04-16 00:38:49,799:INFO:Set up index.
2024-04-16 00:38:49,799:INFO:Assigning column types.
2024-04-16 00:38:49,805:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-16 00:38:49,875:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-16 00:38:49,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:38:49,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:49,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-16 00:38:50,005:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:38:50,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,049:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-16 00:38:50,124:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:38:50,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:38:50,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,283:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-16 00:38:50,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,516:INFO:Preparing preprocessing pipeline...
2024-04-16 00:38:50,517:INFO:Set up simple imputation.
2024-04-16 00:38:50,517:INFO:Set up feature normalization.
2024-04-16 00:38:50,562:INFO:Finished creating preprocessing pipeline.
2024-04-16 00:38:50,571:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-16 00:38:50,571:INFO:Creating final display dataframe.
2024-04-16 00:38:50,707:INFO:Setup _display_container:                     Description             Value
0                    Session id              3016
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a145
2024-04-16 00:38:50,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:38:50,950:INFO:setup() successfully completed in 1.24s...............
2024-04-16 00:38:50,950:INFO:Initializing compare_models()
2024-04-16 00:38:50,950:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-16 00:38:50,950:INFO:Checking exceptions
2024-04-16 00:38:50,956:INFO:Preparing display monitor
2024-04-16 00:38:50,984:INFO:Initializing Logistic Regression
2024-04-16 00:38:50,985:INFO:Total runtime is 1.668532689412435e-05 minutes
2024-04-16 00:38:50,989:INFO:SubProcess create_model() called ==================================
2024-04-16 00:38:50,989:INFO:Initializing create_model()
2024-04-16 00:38:50,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026CC3E02D70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:38:50,989:INFO:Checking exceptions
2024-04-16 00:38:50,989:INFO:Importing libraries
2024-04-16 00:38:50,990:INFO:Copying training dataset
2024-04-16 00:38:51,000:INFO:Defining folds
2024-04-16 00:38:51,000:INFO:Declaring metric variables
2024-04-16 00:38:51,004:INFO:Importing untrained model
2024-04-16 00:38:51,009:INFO:Logistic Regression Imported successfully
2024-04-16 00:38:51,018:INFO:Starting cross validation
2024-04-16 00:38:51,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:38:56,145:INFO:Calculating mean and std
2024-04-16 00:38:56,147:INFO:Creating metrics dataframe
2024-04-16 00:38:56,151:INFO:Uploading results into container
2024-04-16 00:38:56,153:INFO:Uploading model into container now
2024-04-16 00:38:56,154:INFO:_master_model_container: 1
2024-04-16 00:38:56,154:INFO:_display_container: 2
2024-04-16 00:38:56,155:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3016, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-16 00:38:56,156:INFO:create_model() successfully completed......................................
2024-04-16 00:38:56,294:INFO:SubProcess create_model() end ==================================
2024-04-16 00:38:56,294:INFO:Creating metrics dataframe
2024-04-16 00:38:56,303:INFO:Initializing Decision Tree Classifier
2024-04-16 00:38:56,303:INFO:Total runtime is 0.08864728212356568 minutes
2024-04-16 00:38:56,308:INFO:SubProcess create_model() called ==================================
2024-04-16 00:38:56,308:INFO:Initializing create_model()
2024-04-16 00:38:56,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026CC3E02D70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:38:56,308:INFO:Checking exceptions
2024-04-16 00:38:56,308:INFO:Importing libraries
2024-04-16 00:38:56,309:INFO:Copying training dataset
2024-04-16 00:38:56,318:INFO:Defining folds
2024-04-16 00:38:56,318:INFO:Declaring metric variables
2024-04-16 00:38:56,323:INFO:Importing untrained model
2024-04-16 00:38:56,328:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:38:56,336:INFO:Starting cross validation
2024-04-16 00:38:56,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:39:00,115:INFO:Calculating mean and std
2024-04-16 00:39:00,118:INFO:Creating metrics dataframe
2024-04-16 00:39:00,121:INFO:Uploading results into container
2024-04-16 00:39:00,121:INFO:Uploading model into container now
2024-04-16 00:39:00,122:INFO:_master_model_container: 2
2024-04-16 00:39:00,122:INFO:_display_container: 2
2024-04-16 00:39:00,123:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best')
2024-04-16 00:39:00,123:INFO:create_model() successfully completed......................................
2024-04-16 00:39:00,250:INFO:SubProcess create_model() end ==================================
2024-04-16 00:39:00,250:INFO:Creating metrics dataframe
2024-04-16 00:39:00,271:INFO:Initializing create_model()
2024-04-16 00:39:00,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:00,272:INFO:Checking exceptions
2024-04-16 00:39:00,274:INFO:Importing libraries
2024-04-16 00:39:00,274:INFO:Copying training dataset
2024-04-16 00:39:00,282:INFO:Defining folds
2024-04-16 00:39:00,282:INFO:Declaring metric variables
2024-04-16 00:39:00,283:INFO:Importing untrained model
2024-04-16 00:39:00,283:INFO:Declaring custom model
2024-04-16 00:39:00,283:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:39:00,285:INFO:Cross validation set to False
2024-04-16 00:39:00,285:INFO:Fitting Model
2024-04-16 00:39:00,363:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best')
2024-04-16 00:39:00,363:INFO:create_model() successfully completed......................................
2024-04-16 00:39:00,473:INFO:Initializing create_model()
2024-04-16 00:39:00,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3016, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:00,473:INFO:Checking exceptions
2024-04-16 00:39:00,476:INFO:Importing libraries
2024-04-16 00:39:00,476:INFO:Copying training dataset
2024-04-16 00:39:00,485:INFO:Defining folds
2024-04-16 00:39:00,485:INFO:Declaring metric variables
2024-04-16 00:39:00,485:INFO:Importing untrained model
2024-04-16 00:39:00,485:INFO:Declaring custom model
2024-04-16 00:39:00,486:INFO:Logistic Regression Imported successfully
2024-04-16 00:39:00,487:INFO:Cross validation set to False
2024-04-16 00:39:00,487:INFO:Fitting Model
2024-04-16 00:39:00,511:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3016, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-16 00:39:00,511:INFO:create_model() successfully completed......................................
2024-04-16 00:39:00,636:INFO:_master_model_container: 2
2024-04-16 00:39:00,636:INFO:_display_container: 2
2024-04-16 00:39:00,637:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3016, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-16 00:39:00,638:INFO:compare_models() successfully completed......................................
2024-04-16 00:39:00,638:INFO:Initializing predict_model()
2024-04-16 00:39:00,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3016, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC3DFDAB0>)
2024-04-16 00:39:00,639:INFO:Checking exceptions
2024-04-16 00:39:00,639:INFO:Preloading libraries
2024-04-16 00:39:01,894:INFO:Initializing predict_model()
2024-04-16 00:39:01,894:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC3FEB010>)
2024-04-16 00:39:01,894:INFO:Checking exceptions
2024-04-16 00:39:01,894:INFO:Preloading libraries
2024-04-16 00:39:02,748:INFO:Initializing tune_model()
2024-04-16 00:39:02,748:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>)
2024-04-16 00:39:02,748:INFO:Checking exceptions
2024-04-16 00:39:02,769:INFO:Copying training dataset
2024-04-16 00:39:02,777:INFO:Checking base model
2024-04-16 00:39:02,777:INFO:Base model : Decision Tree Classifier
2024-04-16 00:39:02,782:INFO:Declaring metric variables
2024-04-16 00:39:02,787:INFO:Defining Hyperparameters
2024-04-16 00:39:02,902:INFO:Tuning with n_jobs=-1
2024-04-16 00:39:02,902:INFO:Initializing RandomizedSearchCV
2024-04-16 00:39:03,194:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'entropy'}
2024-04-16 00:39:03,195:INFO:Hyperparameter search completed
2024-04-16 00:39:03,195:INFO:SubProcess create_model() called ==================================
2024-04-16 00:39:03,195:INFO:Initializing create_model()
2024-04-16 00:39:03,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026CC518FDF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 8, 'criterion': 'entropy'})
2024-04-16 00:39:03,195:INFO:Checking exceptions
2024-04-16 00:39:03,196:INFO:Importing libraries
2024-04-16 00:39:03,196:INFO:Copying training dataset
2024-04-16 00:39:03,204:INFO:Defining folds
2024-04-16 00:39:03,204:INFO:Declaring metric variables
2024-04-16 00:39:03,209:INFO:Importing untrained model
2024-04-16 00:39:03,209:INFO:Declaring custom model
2024-04-16 00:39:03,214:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:39:03,222:INFO:Starting cross validation
2024-04-16 00:39:03,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:39:03,369:INFO:Calculating mean and std
2024-04-16 00:39:03,370:INFO:Creating metrics dataframe
2024-04-16 00:39:03,376:INFO:Finalizing model
2024-04-16 00:39:03,402:INFO:Uploading results into container
2024-04-16 00:39:03,403:INFO:Uploading model into container now
2024-04-16 00:39:03,404:INFO:_master_model_container: 3
2024-04-16 00:39:03,404:INFO:_display_container: 5
2024-04-16 00:39:03,405:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=8, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best')
2024-04-16 00:39:03,405:INFO:create_model() successfully completed......................................
2024-04-16 00:39:03,515:INFO:SubProcess create_model() end ==================================
2024-04-16 00:39:03,515:INFO:choose_better activated
2024-04-16 00:39:03,520:INFO:SubProcess create_model() called ==================================
2024-04-16 00:39:03,521:INFO:Initializing create_model()
2024-04-16 00:39:03,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:03,521:INFO:Checking exceptions
2024-04-16 00:39:03,523:INFO:Importing libraries
2024-04-16 00:39:03,523:INFO:Copying training dataset
2024-04-16 00:39:03,531:INFO:Defining folds
2024-04-16 00:39:03,531:INFO:Declaring metric variables
2024-04-16 00:39:03,532:INFO:Importing untrained model
2024-04-16 00:39:03,532:INFO:Declaring custom model
2024-04-16 00:39:03,532:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:39:03,533:INFO:Starting cross validation
2024-04-16 00:39:03,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:39:03,718:INFO:Calculating mean and std
2024-04-16 00:39:03,719:INFO:Creating metrics dataframe
2024-04-16 00:39:03,721:INFO:Finalizing model
2024-04-16 00:39:03,798:INFO:Uploading results into container
2024-04-16 00:39:03,799:INFO:Uploading model into container now
2024-04-16 00:39:03,799:INFO:_master_model_container: 4
2024-04-16 00:39:03,799:INFO:_display_container: 6
2024-04-16 00:39:03,800:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best')
2024-04-16 00:39:03,800:INFO:create_model() successfully completed......................................
2024-04-16 00:39:03,909:INFO:SubProcess create_model() end ==================================
2024-04-16 00:39:03,910:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best') result for F1 is 0.5395
2024-04-16 00:39:03,911:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=8, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best') result for F1 is 0.4805
2024-04-16 00:39:03,911:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best') is best model
2024-04-16 00:39:03,912:INFO:choose_better completed
2024-04-16 00:39:03,912:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-16 00:39:03,925:INFO:_master_model_container: 4
2024-04-16 00:39:03,925:INFO:_display_container: 5
2024-04-16 00:39:03,926:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best')
2024-04-16 00:39:03,926:INFO:tune_model() successfully completed......................................
2024-04-16 00:39:04,037:INFO:Initializing predict_model()
2024-04-16 00:39:04,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC406FA30>)
2024-04-16 00:39:04,037:INFO:Checking exceptions
2024-04-16 00:39:04,037:INFO:Preloading libraries
2024-04-16 00:39:04,349:INFO:Initializing finalize_model()
2024-04-16 00:39:04,350:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-16 00:39:04,350:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best')
2024-04-16 00:39:04,356:INFO:Initializing create_model()
2024-04-16 00:39:04,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:04,356:INFO:Checking exceptions
2024-04-16 00:39:04,358:INFO:Importing libraries
2024-04-16 00:39:04,358:INFO:Copying training dataset
2024-04-16 00:39:04,358:INFO:Defining folds
2024-04-16 00:39:04,358:INFO:Declaring metric variables
2024-04-16 00:39:04,358:INFO:Importing untrained model
2024-04-16 00:39:04,359:INFO:Declaring custom model
2024-04-16 00:39:04,359:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:39:04,360:INFO:Cross validation set to False
2024-04-16 00:39:04,360:INFO:Fitting Model
2024-04-16 00:39:04,460:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3016,
                                        splitter='best'))],
         verbose=False)
2024-04-16 00:39:04,460:INFO:create_model() successfully completed......................................
2024-04-16 00:39:04,571:INFO:_master_model_container: 4
2024-04-16 00:39:04,571:INFO:_display_container: 6
2024-04-16 00:39:04,579:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3016,
                                        splitter='best'))],
         verbose=False)
2024-04-16 00:39:04,580:INFO:finalize_model() successfully completed......................................
2024-04-16 00:39:04,704:INFO:Initializing save_model()
2024-04-16 00:39:04,704:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3016,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-16 00:39:04,704:INFO:Adding model into prep_pipe
2024-04-16 00:39:04,704:WARNING:Only Model saved as it was a pipeline.
2024-04-16 00:39:04,712:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-16 00:39:04,720:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3016,
                                        splitter='best'))],
         verbose=False)
2024-04-16 00:39:04,720:INFO:save_model() successfully completed......................................
2024-04-16 00:39:04,829:INFO:Initializing load_model()
2024-04-16 00:39:04,829:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-16 00:39:12,595:INFO:Initializing predict_model()
2024-04-16 00:39:12,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3016, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC3DFD7E0>)
2024-04-16 00:39:12,595:INFO:Checking exceptions
2024-04-16 00:39:12,595:INFO:Preloading libraries
2024-04-16 00:39:12,931:INFO:Initializing predict_model()
2024-04-16 00:39:12,931:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CC32DA770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3016, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC3D469E0>)
2024-04-16 00:39:12,931:INFO:Checking exceptions
2024-04-16 00:39:12,931:INFO:Preloading libraries
2024-04-16 00:39:56,091:INFO:PyCaret ClassificationExperiment
2024-04-16 00:39:56,091:INFO:Logging name: clf-default-name
2024-04-16 00:39:56,091:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-16 00:39:56,092:INFO:version 3.3.0
2024-04-16 00:39:56,092:INFO:Initializing setup()
2024-04-16 00:39:56,092:INFO:self.USI: 8b32
2024-04-16 00:39:56,092:INFO:self._variable_keys: {'exp_id', 'idx', 'y_train', 'logging_param', 'seed', 'pipeline', 'n_jobs_param', 'fold_generator', 'memory', 'fold_shuffle_param', 'data', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'USI', 'gpu_param', 'is_multiclass', 'html_param', 'target_param', 'y', 'y_test', 'fix_imbalance', '_ml_usecase', 'X', 'X_test', 'X_train', 'exp_name_log', '_available_plots'}
2024-04-16 00:39:56,092:INFO:Checking environment
2024-04-16 00:39:56,092:INFO:python_version: 3.10.14
2024-04-16 00:39:56,092:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-16 00:39:56,092:INFO:machine: AMD64
2024-04-16 00:39:56,092:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-16 00:39:56,098:INFO:Memory: svmem(total=17131573248, available=1246388224, percent=92.7, used=15885185024, free=1246388224)
2024-04-16 00:39:56,098:INFO:Physical Core: 8
2024-04-16 00:39:56,098:INFO:Logical Core: 16
2024-04-16 00:39:56,098:INFO:Checking libraries
2024-04-16 00:39:56,098:INFO:System:
2024-04-16 00:39:56,098:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-16 00:39:56,098:INFO:executable: c:\Users\julio\anaconda3\envs\mle-infnet\python.exe
2024-04-16 00:39:56,098:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-16 00:39:56,098:INFO:PyCaret required dependencies:
2024-04-16 00:39:56,098:INFO:                 pip: 23.3.1
2024-04-16 00:39:56,099:INFO:          setuptools: 68.2.2
2024-04-16 00:39:56,099:INFO:             pycaret: 3.3.0
2024-04-16 00:39:56,099:INFO:             IPython: 8.23.0
2024-04-16 00:39:56,099:INFO:          ipywidgets: 8.1.2
2024-04-16 00:39:56,099:INFO:                tqdm: 4.66.2
2024-04-16 00:39:56,099:INFO:               numpy: 1.26.4
2024-04-16 00:39:56,099:INFO:              pandas: 2.1.4
2024-04-16 00:39:56,099:INFO:              jinja2: 3.1.3
2024-04-16 00:39:56,099:INFO:               scipy: 1.11.4
2024-04-16 00:39:56,099:INFO:              joblib: 1.3.2
2024-04-16 00:39:56,099:INFO:             sklearn: 1.4.1.post1
2024-04-16 00:39:56,099:INFO:                pyod: 1.1.3
2024-04-16 00:39:56,099:INFO:            imblearn: 0.12.2
2024-04-16 00:39:56,099:INFO:   category_encoders: 2.6.3
2024-04-16 00:39:56,099:INFO:            lightgbm: 4.3.0
2024-04-16 00:39:56,100:INFO:               numba: 0.59.1
2024-04-16 00:39:56,100:INFO:            requests: 2.31.0
2024-04-16 00:39:56,100:INFO:          matplotlib: 3.7.5
2024-04-16 00:39:56,100:INFO:          scikitplot: 0.3.7
2024-04-16 00:39:56,100:INFO:         yellowbrick: 1.5
2024-04-16 00:39:56,100:INFO:              plotly: 5.20.0
2024-04-16 00:39:56,100:INFO:    plotly-resampler: Not installed
2024-04-16 00:39:56,100:INFO:             kaleido: 0.2.1
2024-04-16 00:39:56,100:INFO:           schemdraw: 0.15
2024-04-16 00:39:56,100:INFO:         statsmodels: 0.14.1
2024-04-16 00:39:56,100:INFO:              sktime: 0.28.0
2024-04-16 00:39:56,100:INFO:               tbats: 1.1.3
2024-04-16 00:39:56,100:INFO:            pmdarima: 2.0.4
2024-04-16 00:39:56,100:INFO:              psutil: 5.9.8
2024-04-16 00:39:56,100:INFO:          markupsafe: 2.1.5
2024-04-16 00:39:56,101:INFO:             pickle5: Not installed
2024-04-16 00:39:56,101:INFO:         cloudpickle: 3.0.0
2024-04-16 00:39:56,101:INFO:         deprecation: 2.1.0
2024-04-16 00:39:56,101:INFO:              xxhash: 3.4.1
2024-04-16 00:39:56,101:INFO:           wurlitzer: 3.0.3
2024-04-16 00:39:56,101:INFO:PyCaret optional dependencies:
2024-04-16 00:39:56,101:INFO:                shap: Not installed
2024-04-16 00:39:56,101:INFO:           interpret: Not installed
2024-04-16 00:39:56,101:INFO:                umap: Not installed
2024-04-16 00:39:56,101:INFO:     ydata_profiling: Not installed
2024-04-16 00:39:56,101:INFO:  explainerdashboard: Not installed
2024-04-16 00:39:56,101:INFO:             autoviz: Not installed
2024-04-16 00:39:56,101:INFO:           fairlearn: Not installed
2024-04-16 00:39:56,101:INFO:          deepchecks: Not installed
2024-04-16 00:39:56,102:INFO:             xgboost: Not installed
2024-04-16 00:39:56,102:INFO:            catboost: Not installed
2024-04-16 00:39:56,102:INFO:              kmodes: Not installed
2024-04-16 00:39:56,102:INFO:             mlxtend: Not installed
2024-04-16 00:39:56,102:INFO:       statsforecast: Not installed
2024-04-16 00:39:56,102:INFO:        tune_sklearn: Not installed
2024-04-16 00:39:56,102:INFO:                 ray: Not installed
2024-04-16 00:39:56,102:INFO:            hyperopt: Not installed
2024-04-16 00:39:56,102:INFO:              optuna: Not installed
2024-04-16 00:39:56,102:INFO:               skopt: Not installed
2024-04-16 00:39:56,102:INFO:              mlflow: 2.11.3
2024-04-16 00:39:56,102:INFO:              gradio: Not installed
2024-04-16 00:39:56,102:INFO:             fastapi: Not installed
2024-04-16 00:39:56,102:INFO:             uvicorn: Not installed
2024-04-16 00:39:56,102:INFO:              m2cgen: Not installed
2024-04-16 00:39:56,103:INFO:           evidently: Not installed
2024-04-16 00:39:56,103:INFO:               fugue: Not installed
2024-04-16 00:39:56,103:INFO:           streamlit: 1.33.0
2024-04-16 00:39:56,103:INFO:             prophet: Not installed
2024-04-16 00:39:56,103:INFO:None
2024-04-16 00:39:56,103:INFO:Set up data.
2024-04-16 00:39:56,109:INFO:Set up folding strategy.
2024-04-16 00:39:56,110:INFO:Set up train/test split.
2024-04-16 00:39:56,110:INFO:Set up data.
2024-04-16 00:39:56,115:INFO:Set up index.
2024-04-16 00:39:56,116:INFO:Assigning column types.
2024-04-16 00:39:56,122:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-16 00:39:56,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-16 00:39:56,193:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:39:56,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-16 00:39:56,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:39:56,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,356:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-16 00:39:56,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:39:56,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,544:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-16 00:39:56,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,588:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-16 00:39:56,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:56,821:INFO:Preparing preprocessing pipeline...
2024-04-16 00:39:56,822:INFO:Set up simple imputation.
2024-04-16 00:39:56,822:INFO:Set up feature normalization.
2024-04-16 00:39:56,862:INFO:Finished creating preprocessing pipeline.
2024-04-16 00:39:56,869:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-16 00:39:56,869:INFO:Creating final display dataframe.
2024-04-16 00:39:57,003:INFO:Setup _display_container:                     Description             Value
0                    Session id              2780
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8b32
2024-04-16 00:39:57,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:57,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:57,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:57,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-16 00:39:57,246:INFO:setup() successfully completed in 1.16s...............
2024-04-16 00:39:57,246:INFO:Initializing compare_models()
2024-04-16 00:39:57,246:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-16 00:39:57,246:INFO:Checking exceptions
2024-04-16 00:39:57,252:INFO:Preparing display monitor
2024-04-16 00:39:57,279:INFO:Initializing Logistic Regression
2024-04-16 00:39:57,280:INFO:Total runtime is 1.66932741800944e-05 minutes
2024-04-16 00:39:57,284:INFO:SubProcess create_model() called ==================================
2024-04-16 00:39:57,284:INFO:Initializing create_model()
2024-04-16 00:39:57,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026CC38CDE40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:57,285:INFO:Checking exceptions
2024-04-16 00:39:57,285:INFO:Importing libraries
2024-04-16 00:39:57,285:INFO:Copying training dataset
2024-04-16 00:39:57,295:INFO:Defining folds
2024-04-16 00:39:57,295:INFO:Declaring metric variables
2024-04-16 00:39:57,300:INFO:Importing untrained model
2024-04-16 00:39:57,305:INFO:Logistic Regression Imported successfully
2024-04-16 00:39:57,313:INFO:Starting cross validation
2024-04-16 00:39:57,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:39:57,457:INFO:Calculating mean and std
2024-04-16 00:39:57,458:INFO:Creating metrics dataframe
2024-04-16 00:39:57,460:INFO:Uploading results into container
2024-04-16 00:39:57,460:INFO:Uploading model into container now
2024-04-16 00:39:57,461:INFO:_master_model_container: 1
2024-04-16 00:39:57,461:INFO:_display_container: 2
2024-04-16 00:39:57,461:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-16 00:39:57,462:INFO:create_model() successfully completed......................................
2024-04-16 00:39:57,614:INFO:SubProcess create_model() end ==================================
2024-04-16 00:39:57,614:INFO:Creating metrics dataframe
2024-04-16 00:39:57,623:INFO:Initializing Decision Tree Classifier
2024-04-16 00:39:57,623:INFO:Total runtime is 0.005738544464111328 minutes
2024-04-16 00:39:57,628:INFO:SubProcess create_model() called ==================================
2024-04-16 00:39:57,628:INFO:Initializing create_model()
2024-04-16 00:39:57,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026CC38CDE40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:57,628:INFO:Checking exceptions
2024-04-16 00:39:57,628:INFO:Importing libraries
2024-04-16 00:39:57,629:INFO:Copying training dataset
2024-04-16 00:39:57,637:INFO:Defining folds
2024-04-16 00:39:57,637:INFO:Declaring metric variables
2024-04-16 00:39:57,642:INFO:Importing untrained model
2024-04-16 00:39:57,646:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:39:57,654:INFO:Starting cross validation
2024-04-16 00:39:57,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:39:57,838:INFO:Calculating mean and std
2024-04-16 00:39:57,839:INFO:Creating metrics dataframe
2024-04-16 00:39:57,841:INFO:Uploading results into container
2024-04-16 00:39:57,841:INFO:Uploading model into container now
2024-04-16 00:39:57,842:INFO:_master_model_container: 2
2024-04-16 00:39:57,842:INFO:_display_container: 2
2024-04-16 00:39:57,842:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best')
2024-04-16 00:39:57,842:INFO:create_model() successfully completed......................................
2024-04-16 00:39:57,986:INFO:SubProcess create_model() end ==================================
2024-04-16 00:39:57,986:INFO:Creating metrics dataframe
2024-04-16 00:39:58,006:INFO:Initializing create_model()
2024-04-16 00:39:58,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:58,006:INFO:Checking exceptions
2024-04-16 00:39:58,008:INFO:Importing libraries
2024-04-16 00:39:58,008:INFO:Copying training dataset
2024-04-16 00:39:58,017:INFO:Defining folds
2024-04-16 00:39:58,017:INFO:Declaring metric variables
2024-04-16 00:39:58,017:INFO:Importing untrained model
2024-04-16 00:39:58,017:INFO:Declaring custom model
2024-04-16 00:39:58,018:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:39:58,019:INFO:Cross validation set to False
2024-04-16 00:39:58,019:INFO:Fitting Model
2024-04-16 00:39:58,093:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best')
2024-04-16 00:39:58,093:INFO:create_model() successfully completed......................................
2024-04-16 00:39:58,244:INFO:Initializing create_model()
2024-04-16 00:39:58,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:39:58,244:INFO:Checking exceptions
2024-04-16 00:39:58,246:INFO:Importing libraries
2024-04-16 00:39:58,246:INFO:Copying training dataset
2024-04-16 00:39:58,254:INFO:Defining folds
2024-04-16 00:39:58,254:INFO:Declaring metric variables
2024-04-16 00:39:58,255:INFO:Importing untrained model
2024-04-16 00:39:58,255:INFO:Declaring custom model
2024-04-16 00:39:58,255:INFO:Logistic Regression Imported successfully
2024-04-16 00:39:58,256:INFO:Cross validation set to False
2024-04-16 00:39:58,257:INFO:Fitting Model
2024-04-16 00:39:58,280:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-16 00:39:58,280:INFO:create_model() successfully completed......................................
2024-04-16 00:39:58,443:INFO:_master_model_container: 2
2024-04-16 00:39:58,443:INFO:_display_container: 2
2024-04-16 00:39:58,444:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-16 00:39:58,444:INFO:compare_models() successfully completed......................................
2024-04-16 00:39:58,445:INFO:Initializing predict_model()
2024-04-16 00:39:58,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC347BAC0>)
2024-04-16 00:39:58,445:INFO:Checking exceptions
2024-04-16 00:39:58,445:INFO:Preloading libraries
2024-04-16 00:39:59,562:INFO:Initializing predict_model()
2024-04-16 00:39:59,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC306A200>)
2024-04-16 00:39:59,562:INFO:Checking exceptions
2024-04-16 00:39:59,562:INFO:Preloading libraries
2024-04-16 00:40:00,427:INFO:Initializing tune_model()
2024-04-16 00:40:00,427:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>)
2024-04-16 00:40:00,427:INFO:Checking exceptions
2024-04-16 00:40:00,449:INFO:Copying training dataset
2024-04-16 00:40:00,457:INFO:Checking base model
2024-04-16 00:40:00,457:INFO:Base model : Decision Tree Classifier
2024-04-16 00:40:00,462:INFO:Declaring metric variables
2024-04-16 00:40:00,466:INFO:Defining Hyperparameters
2024-04-16 00:40:00,618:INFO:Tuning with n_jobs=-1
2024-04-16 00:40:00,618:INFO:Initializing RandomizedSearchCV
2024-04-16 00:40:00,949:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'gini'}
2024-04-16 00:40:00,949:INFO:Hyperparameter search completed
2024-04-16 00:40:00,950:INFO:SubProcess create_model() called ==================================
2024-04-16 00:40:00,950:INFO:Initializing create_model()
2024-04-16 00:40:00,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026CC31204C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 12, 'criterion': 'gini'})
2024-04-16 00:40:00,950:INFO:Checking exceptions
2024-04-16 00:40:00,951:INFO:Importing libraries
2024-04-16 00:40:00,951:INFO:Copying training dataset
2024-04-16 00:40:00,960:INFO:Defining folds
2024-04-16 00:40:00,960:INFO:Declaring metric variables
2024-04-16 00:40:00,964:INFO:Importing untrained model
2024-04-16 00:40:00,965:INFO:Declaring custom model
2024-04-16 00:40:00,970:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:40:00,978:INFO:Starting cross validation
2024-04-16 00:40:00,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:40:01,122:INFO:Calculating mean and std
2024-04-16 00:40:01,123:INFO:Creating metrics dataframe
2024-04-16 00:40:01,129:INFO:Finalizing model
2024-04-16 00:40:01,165:INFO:Uploading results into container
2024-04-16 00:40:01,166:INFO:Uploading model into container now
2024-04-16 00:40:01,167:INFO:_master_model_container: 3
2024-04-16 00:40:01,167:INFO:_display_container: 5
2024-04-16 00:40:01,168:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=12, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best')
2024-04-16 00:40:01,168:INFO:create_model() successfully completed......................................
2024-04-16 00:40:01,324:INFO:SubProcess create_model() end ==================================
2024-04-16 00:40:01,324:INFO:choose_better activated
2024-04-16 00:40:01,328:INFO:SubProcess create_model() called ==================================
2024-04-16 00:40:01,329:INFO:Initializing create_model()
2024-04-16 00:40:01,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:40:01,329:INFO:Checking exceptions
2024-04-16 00:40:01,331:INFO:Importing libraries
2024-04-16 00:40:01,331:INFO:Copying training dataset
2024-04-16 00:40:01,340:INFO:Defining folds
2024-04-16 00:40:01,340:INFO:Declaring metric variables
2024-04-16 00:40:01,340:INFO:Importing untrained model
2024-04-16 00:40:01,340:INFO:Declaring custom model
2024-04-16 00:40:01,341:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:40:01,341:INFO:Starting cross validation
2024-04-16 00:40:01,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-16 00:40:01,531:INFO:Calculating mean and std
2024-04-16 00:40:01,532:INFO:Creating metrics dataframe
2024-04-16 00:40:01,534:INFO:Finalizing model
2024-04-16 00:40:01,611:INFO:Uploading results into container
2024-04-16 00:40:01,611:INFO:Uploading model into container now
2024-04-16 00:40:01,612:INFO:_master_model_container: 4
2024-04-16 00:40:01,612:INFO:_display_container: 6
2024-04-16 00:40:01,612:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best')
2024-04-16 00:40:01,613:INFO:create_model() successfully completed......................................
2024-04-16 00:40:01,768:INFO:SubProcess create_model() end ==================================
2024-04-16 00:40:01,768:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best') result for F1 is 0.5465
2024-04-16 00:40:01,769:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=12, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best') result for F1 is 0.5087
2024-04-16 00:40:01,769:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best') is best model
2024-04-16 00:40:01,770:INFO:choose_better completed
2024-04-16 00:40:01,770:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-16 00:40:01,783:INFO:_master_model_container: 4
2024-04-16 00:40:01,784:INFO:_display_container: 5
2024-04-16 00:40:01,784:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best')
2024-04-16 00:40:01,785:INFO:tune_model() successfully completed......................................
2024-04-16 00:40:01,939:INFO:Initializing predict_model()
2024-04-16 00:40:01,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CCAC57640>)
2024-04-16 00:40:01,939:INFO:Checking exceptions
2024-04-16 00:40:01,939:INFO:Preloading libraries
2024-04-16 00:40:02,259:INFO:Initializing finalize_model()
2024-04-16 00:40:02,259:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-16 00:40:02,259:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best')
2024-04-16 00:40:02,264:INFO:Initializing create_model()
2024-04-16 00:40:02,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-16 00:40:02,264:INFO:Checking exceptions
2024-04-16 00:40:02,266:INFO:Importing libraries
2024-04-16 00:40:02,267:INFO:Copying training dataset
2024-04-16 00:40:02,267:INFO:Defining folds
2024-04-16 00:40:02,267:INFO:Declaring metric variables
2024-04-16 00:40:02,268:INFO:Importing untrained model
2024-04-16 00:40:02,268:INFO:Declaring custom model
2024-04-16 00:40:02,268:INFO:Decision Tree Classifier Imported successfully
2024-04-16 00:40:02,270:INFO:Cross validation set to False
2024-04-16 00:40:02,270:INFO:Fitting Model
2024-04-16 00:40:02,367:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2780,
                                        splitter='best'))],
         verbose=False)
2024-04-16 00:40:02,367:INFO:create_model() successfully completed......................................
2024-04-16 00:40:02,521:INFO:_master_model_container: 4
2024-04-16 00:40:02,521:INFO:_display_container: 6
2024-04-16 00:40:02,529:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2780,
                                        splitter='best'))],
         verbose=False)
2024-04-16 00:40:02,529:INFO:finalize_model() successfully completed......................................
2024-04-16 00:40:02,699:INFO:Initializing save_model()
2024-04-16 00:40:02,699:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2780,
                                        splitter='best'))],
         verbose=False), model_name=./modelo_Kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\julio\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-16 00:40:02,699:INFO:Adding model into prep_pipe
2024-04-16 00:40:02,699:WARNING:Only Model saved as it was a pipeline.
2024-04-16 00:40:02,706:INFO:./modelo_Kobe.pkl saved in current working directory
2024-04-16 00:40:02,715:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=2780,
                                        splitter='best'))],
         verbose=False)
2024-04-16 00:40:02,715:INFO:save_model() successfully completed......................................
2024-04-16 00:40:02,864:INFO:Initializing load_model()
2024-04-16 00:40:02,864:INFO:load_model(model_name=./modelo_Kobe, platform=None, authentication=None, verbose=True)
2024-04-16 00:40:08,270:INFO:Initializing predict_model()
2024-04-16 00:40:08,270:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC80279A0>)
2024-04-16 00:40:08,270:INFO:Checking exceptions
2024-04-16 00:40:08,270:INFO:Preloading libraries
2024-04-16 00:40:08,574:INFO:Initializing predict_model()
2024-04-16 00:40:08,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026CC3C4AF80>)
2024-04-16 00:40:08,575:INFO:Checking exceptions
2024-04-16 00:40:08,575:INFO:Preloading libraries
2024-04-16 00:40:09,260:INFO:Initializing plot_model()
2024-04-16 00:40:09,261:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:40:09,261:INFO:Checking exceptions
2024-04-16 00:40:09,267:INFO:Preloading libraries
2024-04-16 00:40:09,267:INFO:Copying training dataset
2024-04-16 00:40:09,268:INFO:Plot type: confusion_matrix
2024-04-16 00:40:09,411:INFO:Fitting Model
2024-04-16 00:40:09,412:INFO:Scoring test/hold-out set
2024-04-16 00:40:09,585:INFO:Visual Rendered Successfully
2024-04-16 00:40:09,759:INFO:plot_model() successfully completed......................................
2024-04-16 00:40:09,789:INFO:Initializing plot_model()
2024-04-16 00:40:09,789:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:40:09,789:INFO:Checking exceptions
2024-04-16 00:40:09,796:INFO:Preloading libraries
2024-04-16 00:40:09,797:INFO:Copying training dataset
2024-04-16 00:40:09,797:INFO:Plot type: confusion_matrix
2024-04-16 00:40:09,947:INFO:Fitting Model
2024-04-16 00:40:09,947:INFO:Scoring test/hold-out set
2024-04-16 00:40:10,117:INFO:Visual Rendered Successfully
2024-04-16 00:40:10,278:INFO:plot_model() successfully completed......................................
2024-04-16 00:45:44,760:INFO:Initializing plot_model()
2024-04-16 00:45:44,760:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:45:44,760:INFO:Checking exceptions
2024-04-16 00:45:44,769:INFO:Preloading libraries
2024-04-16 00:45:44,771:INFO:Copying training dataset
2024-04-16 00:45:44,771:INFO:Plot type: confusion_matrix
2024-04-16 00:45:44,934:INFO:Fitting Model
2024-04-16 00:45:44,934:INFO:Scoring test/hold-out set
2024-04-16 00:45:45,096:INFO:Visual Rendered Successfully
2024-04-16 00:45:45,253:INFO:plot_model() successfully completed......................................
2024-04-16 00:45:47,872:INFO:Initializing plot_model()
2024-04-16 00:45:47,873:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:45:47,873:INFO:Checking exceptions
2024-04-16 00:45:47,880:INFO:Preloading libraries
2024-04-16 00:45:47,881:INFO:Copying training dataset
2024-04-16 00:45:47,881:INFO:Plot type: confusion_matrix
2024-04-16 00:45:48,019:INFO:Fitting Model
2024-04-16 00:45:48,020:INFO:Scoring test/hold-out set
2024-04-16 00:45:48,182:INFO:Visual Rendered Successfully
2024-04-16 00:45:48,329:INFO:plot_model() successfully completed......................................
2024-04-16 00:46:26,647:INFO:Initializing plot_model()
2024-04-16 00:46:26,647:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:46:26,648:INFO:Checking exceptions
2024-04-16 00:46:26,653:INFO:Preloading libraries
2024-04-16 00:46:26,655:INFO:Copying training dataset
2024-04-16 00:46:26,655:INFO:Plot type: confusion_matrix
2024-04-16 00:46:26,793:INFO:Fitting Model
2024-04-16 00:46:26,794:INFO:Scoring test/hold-out set
2024-04-16 00:46:26,956:INFO:Visual Rendered Successfully
2024-04-16 00:46:27,106:INFO:plot_model() successfully completed......................................
2024-04-16 00:46:31,992:INFO:Initializing plot_model()
2024-04-16 00:46:31,992:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:46:31,992:INFO:Checking exceptions
2024-04-16 00:46:32,000:INFO:Preloading libraries
2024-04-16 00:46:32,000:INFO:Copying training dataset
2024-04-16 00:46:32,001:INFO:Plot type: confusion_matrix
2024-04-16 00:46:32,148:INFO:Fitting Model
2024-04-16 00:46:32,149:INFO:Scoring test/hold-out set
2024-04-16 00:46:32,308:INFO:Visual Rendered Successfully
2024-04-16 00:46:32,458:INFO:plot_model() successfully completed......................................
2024-04-16 00:48:11,086:INFO:Initializing plot_model()
2024-04-16 00:48:11,086:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:48:11,086:INFO:Checking exceptions
2024-04-16 00:48:11,093:INFO:Preloading libraries
2024-04-16 00:48:11,094:INFO:Copying training dataset
2024-04-16 00:48:11,094:INFO:Plot type: confusion_matrix
2024-04-16 00:48:11,228:INFO:Fitting Model
2024-04-16 00:48:11,229:INFO:Scoring test/hold-out set
2024-04-16 00:48:11,393:INFO:Visual Rendered Successfully
2024-04-16 00:48:11,560:INFO:plot_model() successfully completed......................................
2024-04-16 00:48:13,620:INFO:Initializing plot_model()
2024-04-16 00:48:13,620:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:48:13,621:INFO:Checking exceptions
2024-04-16 00:48:13,627:INFO:Preloading libraries
2024-04-16 00:48:13,628:INFO:Copying training dataset
2024-04-16 00:48:13,628:INFO:Plot type: confusion_matrix
2024-04-16 00:48:13,767:INFO:Fitting Model
2024-04-16 00:48:13,767:INFO:Scoring test/hold-out set
2024-04-16 00:48:13,929:INFO:Visual Rendered Successfully
2024-04-16 00:48:14,083:INFO:plot_model() successfully completed......................................
2024-04-16 00:49:55,360:INFO:Initializing plot_model()
2024-04-16 00:49:55,361:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:49:55,361:INFO:Checking exceptions
2024-04-16 00:49:55,367:INFO:Preloading libraries
2024-04-16 00:49:55,368:INFO:Copying training dataset
2024-04-16 00:49:55,369:INFO:Plot type: confusion_matrix
2024-04-16 00:49:55,504:INFO:Fitting Model
2024-04-16 00:49:55,504:INFO:Scoring test/hold-out set
2024-04-16 00:49:55,664:INFO:Visual Rendered Successfully
2024-04-16 00:49:55,809:INFO:plot_model() successfully completed......................................
2024-04-16 00:50:43,846:INFO:Initializing plot_model()
2024-04-16 00:50:43,846:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:50:43,846:INFO:Checking exceptions
2024-04-16 00:50:43,853:INFO:Preloading libraries
2024-04-16 00:50:43,854:INFO:Copying training dataset
2024-04-16 00:50:43,855:INFO:Plot type: confusion_matrix
2024-04-16 00:50:43,996:INFO:Fitting Model
2024-04-16 00:50:43,996:INFO:Scoring test/hold-out set
2024-04-16 00:50:44,156:INFO:Visual Rendered Successfully
2024-04-16 00:50:44,304:INFO:plot_model() successfully completed......................................
2024-04-16 00:51:30,370:INFO:Initializing plot_model()
2024-04-16 00:51:30,370:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:51:30,371:INFO:Checking exceptions
2024-04-16 00:51:30,377:INFO:Preloading libraries
2024-04-16 00:51:30,377:INFO:Copying training dataset
2024-04-16 00:51:30,377:INFO:Plot type: confusion_matrix
2024-04-16 00:51:30,511:INFO:Fitting Model
2024-04-16 00:51:30,511:INFO:Scoring test/hold-out set
2024-04-16 00:51:30,670:INFO:Visual Rendered Successfully
2024-04-16 00:51:30,816:INFO:plot_model() successfully completed......................................
2024-04-16 00:51:53,129:INFO:Initializing plot_model()
2024-04-16 00:51:53,129:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:51:53,129:INFO:Checking exceptions
2024-04-16 00:51:53,135:INFO:Preloading libraries
2024-04-16 00:51:53,136:INFO:Copying training dataset
2024-04-16 00:51:53,136:INFO:Plot type: confusion_matrix
2024-04-16 00:51:53,268:INFO:Fitting Model
2024-04-16 00:51:53,269:INFO:Scoring test/hold-out set
2024-04-16 00:51:53,428:INFO:Visual Rendered Successfully
2024-04-16 00:51:53,574:INFO:plot_model() successfully completed......................................
2024-04-16 00:52:25,542:INFO:Initializing plot_model()
2024-04-16 00:52:25,542:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:52:25,542:INFO:Checking exceptions
2024-04-16 00:52:25,549:INFO:Preloading libraries
2024-04-16 00:52:25,550:INFO:Copying training dataset
2024-04-16 00:52:25,550:INFO:Plot type: confusion_matrix
2024-04-16 00:52:25,689:INFO:Fitting Model
2024-04-16 00:52:25,690:INFO:Scoring test/hold-out set
2024-04-16 00:52:25,849:INFO:Visual Rendered Successfully
2024-04-16 00:52:25,996:INFO:plot_model() successfully completed......................................
2024-04-16 00:52:28,554:INFO:Initializing plot_model()
2024-04-16 00:52:28,555:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:52:28,555:INFO:Checking exceptions
2024-04-16 00:52:28,562:INFO:Preloading libraries
2024-04-16 00:52:28,562:INFO:Copying training dataset
2024-04-16 00:52:28,562:INFO:Plot type: confusion_matrix
2024-04-16 00:52:28,697:INFO:Fitting Model
2024-04-16 00:52:28,698:INFO:Scoring test/hold-out set
2024-04-16 00:52:28,858:INFO:Visual Rendered Successfully
2024-04-16 00:52:29,004:INFO:plot_model() successfully completed......................................
2024-04-16 00:53:18,046:INFO:Initializing plot_model()
2024-04-16 00:53:18,046:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:53:18,046:INFO:Checking exceptions
2024-04-16 00:53:18,052:INFO:Preloading libraries
2024-04-16 00:53:18,053:INFO:Copying training dataset
2024-04-16 00:53:18,053:INFO:Plot type: confusion_matrix
2024-04-16 00:53:18,188:INFO:Fitting Model
2024-04-16 00:53:18,189:INFO:Scoring test/hold-out set
2024-04-16 00:53:18,345:INFO:Visual Rendered Successfully
2024-04-16 00:53:18,492:INFO:plot_model() successfully completed......................................
2024-04-16 00:53:54,107:INFO:Initializing plot_model()
2024-04-16 00:53:54,107:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:53:54,108:INFO:Checking exceptions
2024-04-16 00:53:54,114:INFO:Preloading libraries
2024-04-16 00:53:54,115:INFO:Copying training dataset
2024-04-16 00:53:54,115:INFO:Plot type: confusion_matrix
2024-04-16 00:53:54,264:INFO:Fitting Model
2024-04-16 00:53:54,265:INFO:Scoring test/hold-out set
2024-04-16 00:53:54,428:INFO:Visual Rendered Successfully
2024-04-16 00:53:54,581:INFO:plot_model() successfully completed......................................
2024-04-16 00:55:02,373:INFO:Initializing plot_model()
2024-04-16 00:55:02,373:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:55:02,373:INFO:Checking exceptions
2024-04-16 00:55:02,380:INFO:Preloading libraries
2024-04-16 00:55:02,380:INFO:Copying training dataset
2024-04-16 00:55:02,380:INFO:Plot type: confusion_matrix
2024-04-16 00:55:02,516:INFO:Fitting Model
2024-04-16 00:55:02,517:INFO:Scoring test/hold-out set
2024-04-16 00:55:02,676:INFO:Visual Rendered Successfully
2024-04-16 00:55:02,823:INFO:plot_model() successfully completed......................................
2024-04-16 00:56:51,013:INFO:Initializing plot_model()
2024-04-16 00:56:51,013:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 00:56:51,013:INFO:Checking exceptions
2024-04-16 00:56:51,019:INFO:Preloading libraries
2024-04-16 00:56:51,020:INFO:Copying training dataset
2024-04-16 00:56:51,020:INFO:Plot type: confusion_matrix
2024-04-16 00:56:51,162:INFO:Fitting Model
2024-04-16 00:56:51,163:INFO:Scoring test/hold-out set
2024-04-16 00:56:51,324:INFO:Visual Rendered Successfully
2024-04-16 00:56:51,480:INFO:plot_model() successfully completed......................................
2024-04-16 01:00:04,291:INFO:Initializing plot_model()
2024-04-16 01:00:04,291:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 01:00:04,291:INFO:Checking exceptions
2024-04-16 01:00:04,298:INFO:Preloading libraries
2024-04-16 01:00:04,298:INFO:Copying training dataset
2024-04-16 01:00:04,298:INFO:Plot type: confusion_matrix
2024-04-16 01:00:04,437:INFO:Fitting Model
2024-04-16 01:00:04,438:INFO:Scoring test/hold-out set
2024-04-16 01:00:04,596:INFO:Visual Rendered Successfully
2024-04-16 01:00:04,766:INFO:plot_model() successfully completed......................................
2024-04-16 01:00:26,648:INFO:Initializing plot_model()
2024-04-16 01:00:26,649:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2780, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 01:00:26,649:INFO:Checking exceptions
2024-04-16 01:00:26,656:INFO:Preloading libraries
2024-04-16 01:00:26,656:INFO:Copying training dataset
2024-04-16 01:00:26,656:INFO:Plot type: confusion_matrix
2024-04-16 01:00:26,817:INFO:Fitting Model
2024-04-16 01:00:26,817:INFO:Scoring test/hold-out set
2024-04-16 01:00:26,980:INFO:Visual Rendered Successfully
2024-04-16 01:00:27,129:INFO:plot_model() successfully completed......................................
2024-04-16 01:01:18,147:INFO:Initializing plot_model()
2024-04-16 01:01:18,148:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2780, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026CCA2E8190>, system=True)
2024-04-16 01:01:18,148:INFO:Checking exceptions
2024-04-16 01:01:18,154:INFO:Preloading libraries
2024-04-16 01:01:18,155:INFO:Copying training dataset
2024-04-16 01:01:18,156:INFO:Plot type: confusion_matrix
2024-04-16 01:01:18,292:INFO:Fitting Model
2024-04-16 01:01:18,293:INFO:Scoring test/hold-out set
2024-04-16 01:01:18,453:INFO:Visual Rendered Successfully
2024-04-16 01:01:18,601:INFO:plot_model() successfully completed......................................
